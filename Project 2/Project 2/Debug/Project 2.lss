
Project 2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000013e  00800100  0000147e  00001512  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000147e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000079  0080023e  0080023e  00001650  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001650  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000016ac  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000068  00000000  00000000  000016ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c8c  00000000  00000000  00001754  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000735  00000000  00000000  000023e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000054f  00000000  00000000  00002b15  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000f4  00000000  00000000  00003064  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000046c  00000000  00000000  00003158  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000211  00000000  00000000  000035c4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000058  00000000  00000000  000037d5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__ctors_end>
       4:	0c 94 15 01 	jmp	0x22a	; 0x22a <__bad_interrupt>
       8:	0c 94 15 01 	jmp	0x22a	; 0x22a <__bad_interrupt>
       c:	0c 94 15 01 	jmp	0x22a	; 0x22a <__bad_interrupt>
      10:	0c 94 15 01 	jmp	0x22a	; 0x22a <__bad_interrupt>
      14:	0c 94 15 01 	jmp	0x22a	; 0x22a <__bad_interrupt>
      18:	0c 94 15 01 	jmp	0x22a	; 0x22a <__bad_interrupt>
      1c:	0c 94 15 01 	jmp	0x22a	; 0x22a <__bad_interrupt>
      20:	0c 94 15 01 	jmp	0x22a	; 0x22a <__bad_interrupt>
      24:	0c 94 15 01 	jmp	0x22a	; 0x22a <__bad_interrupt>
      28:	0c 94 15 01 	jmp	0x22a	; 0x22a <__bad_interrupt>
      2c:	0c 94 15 01 	jmp	0x22a	; 0x22a <__bad_interrupt>
      30:	0c 94 15 01 	jmp	0x22a	; 0x22a <__bad_interrupt>
      34:	0c 94 15 01 	jmp	0x22a	; 0x22a <__bad_interrupt>
      38:	0c 94 15 01 	jmp	0x22a	; 0x22a <__bad_interrupt>
      3c:	0c 94 15 01 	jmp	0x22a	; 0x22a <__bad_interrupt>
      40:	0c 94 15 01 	jmp	0x22a	; 0x22a <__bad_interrupt>
      44:	0c 94 15 01 	jmp	0x22a	; 0x22a <__bad_interrupt>
      48:	0c 94 15 01 	jmp	0x22a	; 0x22a <__bad_interrupt>
      4c:	0c 94 15 01 	jmp	0x22a	; 0x22a <__bad_interrupt>
      50:	0c 94 7c 03 	jmp	0x6f8	; 0x6f8 <__vector_20>
      54:	0c 94 9c 03 	jmp	0x738	; 0x738 <__vector_21>
      58:	0c 94 15 01 	jmp	0x22a	; 0x22a <__bad_interrupt>
      5c:	0c 94 15 01 	jmp	0x22a	; 0x22a <__bad_interrupt>
      60:	0c 94 15 01 	jmp	0x22a	; 0x22a <__bad_interrupt>
      64:	0c 94 15 01 	jmp	0x22a	; 0x22a <__bad_interrupt>
      68:	9e 02       	muls	r25, r30
      6a:	9e 02       	muls	r25, r30
      6c:	9e 02       	muls	r25, r30
      6e:	9e 02       	muls	r25, r30
      70:	9e 02       	muls	r25, r30
      72:	9e 02       	muls	r25, r30
      74:	9e 02       	muls	r25, r30
      76:	9e 02       	muls	r25, r30
      78:	9e 02       	muls	r25, r30
      7a:	9e 02       	muls	r25, r30
      7c:	b3 02       	muls	r27, r19
      7e:	b3 02       	muls	r27, r19
      80:	b3 02       	muls	r27, r19
      82:	b3 02       	muls	r27, r19
      84:	b3 02       	muls	r27, r19
      86:	b3 02       	muls	r27, r19
      88:	b3 02       	muls	r27, r19
      8a:	2a 02       	muls	r18, r26
      8c:	b3 02       	muls	r27, r19
      8e:	72 02       	muls	r23, r18
      90:	b3 02       	muls	r27, r19
      92:	77 02       	muls	r23, r23
      94:	b3 02       	muls	r27, r19
      96:	b3 02       	muls	r27, r19
      98:	b3 02       	muls	r27, r19
      9a:	b3 02       	muls	r27, r19
      9c:	b3 02       	muls	r27, r19
      9e:	b3 02       	muls	r27, r19
      a0:	10 02       	muls	r17, r16
      a2:	bf 01       	movw	r22, r30
      a4:	c7 01       	movw	r24, r14
      a6:	b3 02       	muls	r27, r19
      a8:	cf 01       	movw	r24, r30
      aa:	b3 02       	muls	r27, r19
      ac:	b3 02       	muls	r27, r19
      ae:	86 02       	muls	r24, r22
      b0:	d6 01       	movw	r26, r12
      b2:	b3 02       	muls	r27, r19
      b4:	41 02       	muls	r20, r17
      b6:	b3 02       	muls	r27, r19
      b8:	b3 02       	muls	r27, r19
      ba:	b3 02       	muls	r27, r19
      bc:	b3 02       	muls	r27, r19
      be:	b3 02       	muls	r27, r19
      c0:	b3 02       	muls	r27, r19
      c2:	b3 02       	muls	r27, r19
      c4:	b3 02       	muls	r27, r19
      c6:	b3 02       	muls	r27, r19
      c8:	b3 02       	muls	r27, r19
      ca:	2a 02       	muls	r18, r26
      cc:	b3 02       	muls	r27, r19
      ce:	72 02       	muls	r23, r18
      d0:	b3 02       	muls	r27, r19
      d2:	77 02       	muls	r23, r23
      d4:	b3 02       	muls	r27, r19
      d6:	b3 02       	muls	r27, r19
      d8:	b3 02       	muls	r27, r19
      da:	b3 02       	muls	r27, r19
      dc:	b3 02       	muls	r27, r19
      de:	b3 02       	muls	r27, r19
      e0:	10 02       	muls	r17, r16
      e2:	bf 01       	movw	r22, r30
      e4:	c7 01       	movw	r24, r14
      e6:	b3 02       	muls	r27, r19
      e8:	cf 01       	movw	r24, r30
      ea:	b3 02       	muls	r27, r19
      ec:	b3 02       	muls	r27, r19
      ee:	86 02       	muls	r24, r22
      f0:	d6 01       	movw	r26, r12
      f2:	b3 02       	muls	r27, r19
      f4:	41 02       	muls	r20, r17

000000f6 <__trampolines_end>:
      f6:	00 40       	sbci	r16, 0x00	; 0
      f8:	7a 10       	cpse	r7, r10
      fa:	f3 5a       	subi	r31, 0xA3	; 163
      fc:	00 a0       	ldd	r0, Z+32	; 0x20
      fe:	72 4e       	sbci	r23, 0xE2	; 226
     100:	18 09       	sbc	r17, r8
     102:	00 10       	cpse	r0, r0
     104:	a5 d4       	rcall	.+2378   	; 0xa50 <sprintf+0xe>
     106:	e8 00       	.word	0x00e8	; ????
     108:	00 e8       	ldi	r16, 0x80	; 128
     10a:	76 48       	sbci	r23, 0x86	; 134
     10c:	17 00       	.word	0x0017	; ????
     10e:	00 e4       	ldi	r16, 0x40	; 64
     110:	0b 54       	subi	r16, 0x4B	; 75
     112:	02 00       	.word	0x0002	; ????
     114:	00 ca       	rjmp	.-3072   	; 0xfffff516 <__eeprom_end+0xff7ef516>
     116:	9a 3b       	cpi	r25, 0xBA	; 186
     118:	00 00       	nop
     11a:	00 e1       	ldi	r16, 0x10	; 16
     11c:	f5 05       	cpc	r31, r5
     11e:	00 00       	nop
     120:	80 96       	adiw	r24, 0x20	; 32
     122:	98 00       	.word	0x0098	; ????
     124:	00 00       	nop
     126:	40 42       	sbci	r20, 0x20	; 32
     128:	0f 00       	.word	0x000f	; ????
     12a:	00 00       	nop
     12c:	a0 86       	std	Z+8, r10	; 0x08
     12e:	01 00       	.word	0x0001	; ????
     130:	00 00       	nop
     132:	10 27       	eor	r17, r16
     134:	00 00       	nop
     136:	00 00       	nop
     138:	e8 03       	fmulsu	r22, r16
     13a:	00 00       	nop
     13c:	00 00       	nop
     13e:	64 00       	.word	0x0064	; ????
     140:	00 00       	nop
     142:	00 00       	nop
     144:	0a 00       	.word	0x000a	; ????
     146:	00 00       	nop
     148:	00 00       	nop
     14a:	01 00       	.word	0x0001	; ????
     14c:	00 00       	nop
     14e:	00 00       	nop
     150:	2c 76       	andi	r18, 0x6C	; 108
     152:	d8 88       	ldd	r13, Y+16	; 0x10
     154:	dc 67       	ori	r29, 0x7C	; 124
     156:	4f 08       	sbc	r4, r15
     158:	23 df       	rcall	.-442    	; 0xffffffa0 <__eeprom_end+0xff7effa0>
     15a:	c1 df       	rcall	.-126    	; 0xde <__SREG__+0x9f>
     15c:	ae 59       	subi	r26, 0x9E	; 158
     15e:	e1 b1       	in	r30, 0x01	; 1
     160:	b7 96       	adiw	r30, 0x27	; 39
     162:	e5 e3       	ldi	r30, 0x35	; 53
     164:	e4 53       	subi	r30, 0x34	; 52
     166:	c6 3a       	cpi	r28, 0xA6	; 166
     168:	e6 51       	subi	r30, 0x16	; 22
     16a:	99 76       	andi	r25, 0x69	; 105
     16c:	96 e8       	ldi	r25, 0x86	; 134
     16e:	e6 c2       	rjmp	.+1484   	; 0x73c <__vector_21+0x4>
     170:	84 26       	eor	r8, r20
     172:	eb 89       	ldd	r30, Y+19	; 0x13
     174:	8c 9b       	sbis	0x11, 4	; 17
     176:	62 ed       	ldi	r22, 0xD2	; 210
     178:	40 7c       	andi	r20, 0xC0	; 192
     17a:	6f fc       	.word	0xfc6f	; ????
     17c:	ef bc       	out	0x2f, r14	; 47
     17e:	9c 9f       	mul	r25, r28
     180:	40 f2       	brcs	.-112    	; 0x112 <__trampolines_end+0x1c>
     182:	ba a5       	ldd	r27, Y+42	; 0x2a
     184:	6f a5       	ldd	r22, Y+47	; 0x2f
     186:	f4 90       	lpm	r15, Z
     188:	05 5a       	subi	r16, 0xA5	; 165
     18a:	2a f7       	brpl	.-54     	; 0x156 <__trampolines_end+0x60>
     18c:	5c 93       	st	X, r21
     18e:	6b 6c       	ori	r22, 0xCB	; 203
     190:	f9 67       	ori	r31, 0x79	; 121
     192:	6d c1       	rjmp	.+730    	; 0x46e <__LOCK_REGION_LENGTH__+0x6e>
     194:	1b fc       	.word	0xfc1b	; ????
     196:	e0 e4       	ldi	r30, 0x40	; 64
     198:	0d 47       	sbci	r16, 0x7D	; 125
     19a:	fe f5       	brtc	.+126    	; 0x21a <.do_clear_bss_loop>
     19c:	20 e6       	ldi	r18, 0x60	; 96
     19e:	b5 00       	.word	0x00b5	; ????
     1a0:	d0 ed       	ldi	r29, 0xD0	; 208
     1a2:	90 2e       	mov	r9, r16
     1a4:	03 00       	.word	0x0003	; ????
     1a6:	94 35       	cpi	r25, 0x54	; 84
     1a8:	77 05       	cpc	r23, r7
     1aa:	00 80       	ld	r0, Z
     1ac:	84 1e       	adc	r8, r20
     1ae:	08 00       	.word	0x0008	; ????
     1b0:	00 20       	and	r0, r0
     1b2:	4e 0a       	sbc	r4, r30
     1b4:	00 00       	nop
     1b6:	00 c8       	rjmp	.-4096   	; 0xfffff1b8 <__eeprom_end+0xff7ef1b8>
     1b8:	0c 33       	cpi	r16, 0x3C	; 60
     1ba:	33 33       	cpi	r19, 0x33	; 51
     1bc:	33 0f       	add	r19, r19
     1be:	98 6e       	ori	r25, 0xE8	; 232
     1c0:	12 83       	std	Z+2, r17	; 0x02
     1c2:	11 41       	sbci	r17, 0x11	; 17
     1c4:	ef 8d       	ldd	r30, Y+31	; 0x1f
     1c6:	21 14       	cp	r2, r1
     1c8:	89 3b       	cpi	r24, 0xB9	; 185
     1ca:	e6 55       	subi	r30, 0x56	; 86
     1cc:	16 cf       	rjmp	.-468    	; 0xfffffffa <__eeprom_end+0xff7efffa>
     1ce:	fe e6       	ldi	r31, 0x6E	; 110
     1d0:	db 18       	sub	r13, r11
     1d2:	d1 84       	ldd	r13, Z+9	; 0x09
     1d4:	4b 38       	cpi	r20, 0x8B	; 139
     1d6:	1b f7       	brvc	.-58     	; 0x19e <__trampolines_end+0xa8>
     1d8:	7c 1d       	adc	r23, r12
     1da:	90 1d       	adc	r25, r0
     1dc:	a4 bb       	out	0x14, r26	; 20
     1de:	e4 24       	eor	r14, r4
     1e0:	20 32       	cpi	r18, 0x20	; 32
     1e2:	84 72       	andi	r24, 0x24	; 36
     1e4:	5e 22       	and	r5, r30
     1e6:	81 00       	.word	0x0081	; ????
     1e8:	c9 f1       	breq	.+114    	; 0x25c <init_USART+0x12>
     1ea:	24 ec       	ldi	r18, 0xC4	; 196
     1ec:	a1 e5       	ldi	r26, 0x51	; 81
     1ee:	3d 27       	eor	r19, r29

000001f0 <__ctors_end>:
     1f0:	11 24       	eor	r1, r1
     1f2:	1f be       	out	0x3f, r1	; 63
     1f4:	cf ef       	ldi	r28, 0xFF	; 255
     1f6:	d8 e0       	ldi	r29, 0x08	; 8
     1f8:	de bf       	out	0x3e, r29	; 62
     1fa:	cd bf       	out	0x3d, r28	; 61

000001fc <__do_copy_data>:
     1fc:	12 e0       	ldi	r17, 0x02	; 2
     1fe:	a0 e0       	ldi	r26, 0x00	; 0
     200:	b1 e0       	ldi	r27, 0x01	; 1
     202:	ee e7       	ldi	r30, 0x7E	; 126
     204:	f4 e1       	ldi	r31, 0x14	; 20
     206:	02 c0       	rjmp	.+4      	; 0x20c <__do_copy_data+0x10>
     208:	05 90       	lpm	r0, Z+
     20a:	0d 92       	st	X+, r0
     20c:	ae 33       	cpi	r26, 0x3E	; 62
     20e:	b1 07       	cpc	r27, r17
     210:	d9 f7       	brne	.-10     	; 0x208 <__do_copy_data+0xc>

00000212 <__do_clear_bss>:
     212:	22 e0       	ldi	r18, 0x02	; 2
     214:	ae e3       	ldi	r26, 0x3E	; 62
     216:	b2 e0       	ldi	r27, 0x02	; 2
     218:	01 c0       	rjmp	.+2      	; 0x21c <.do_clear_bss_start>

0000021a <.do_clear_bss_loop>:
     21a:	1d 92       	st	X+, r1

0000021c <.do_clear_bss_start>:
     21c:	a7 3b       	cpi	r26, 0xB7	; 183
     21e:	b2 07       	cpc	r27, r18
     220:	e1 f7       	brne	.-8      	; 0x21a <.do_clear_bss_loop>
     222:	0e 94 64 01 	call	0x2c8	; 0x2c8 <main>
     226:	0c 94 3d 0a 	jmp	0x147a	; 0x147a <_exit>

0000022a <__bad_interrupt>:
     22a:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000022e <init_adc>:
/* Initializing Timer1 registers */
void init_timer1() {
	
	TCCR1A = 0;
	TCCR1B = (1<<1); // prescalar 8 
	TIMSK1 = (1<<5) | (1<<0); //Input Capture set for falling edge with noise control turned OFF , Input Capture and Timer1 Overflow Interrupts enable
     22e:	82 e4       	ldi	r24, 0x42	; 66
     230:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
     234:	8f ee       	ldi	r24, 0xEF	; 239
     236:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__DATA_REGION_ORIGIN__+0x1a>
     23a:	84 e0       	ldi	r24, 0x04	; 4
     23c:	80 93 7b 00 	sts	0x007B, r24	; 0x80007b <__DATA_REGION_ORIGIN__+0x1b>
     240:	08 95       	ret

00000242 <init_ports>:
     242:	88 e0       	ldi	r24, 0x08	; 8
     244:	84 b9       	out	0x04, r24	; 4
     246:	15 b8       	out	0x05, r1	; 5
     248:	08 95       	ret

0000024a <init_USART>:
     24a:	88 e5       	ldi	r24, 0x58	; 88
     24c:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
     250:	8a e0       	ldi	r24, 0x0A	; 10
     252:	90 e0       	ldi	r25, 0x00	; 0
     254:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
     258:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
     25c:	08 95       	ret

0000025e <init_timer0>:
     25e:	14 bc       	out	0x24, r1	; 36
     260:	10 92 6e 00 	sts	0x006E, r1	; 0x80006e <__DATA_REGION_ORIGIN__+0xe>
     264:	85 e0       	ldi	r24, 0x05	; 5
     266:	85 bd       	out	0x25, r24	; 37
     268:	86 e0       	ldi	r24, 0x06	; 6
     26a:	86 bd       	out	0x26, r24	; 38
     26c:	08 95       	ret

0000026e <init_timer2>:
}

/* Initializing Timer2 registers */
void init_timer2() {
	
	TCCR2A = (1<<7)|(1<<0); // Clear OC2A on Compare Match when Upcounting , Phase Correct PWM Mode
     26e:	81 e8       	ldi	r24, 0x81	; 129
     270:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__DATA_REGION_ORIGIN__+0x50>
	TCCR2B = (6<<0); // Phase Correct PWM Mode, prescalar 256
     274:	86 e0       	ldi	r24, 0x06	; 6
     276:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__DATA_REGION_ORIGIN__+0x51>
	OCR2A = 0; // turn off led
     27a:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__DATA_REGION_ORIGIN__+0x53>
     27e:	08 95       	ret

00000280 <sendmsg>:

/* sendmsg function*/
void sendmsg (char *s)
{
	qcntr = 0;    /*preset indices*/
	sndcntr = 1;  /*set to one because first character already sent*/
     280:	21 e0       	ldi	r18, 0x01	; 1
     282:	20 93 40 02 	sts	0x0240, r18	; 0x800240 <sndcntr>
	
	queue[qcntr++] = 0x0d;   /*put CRLF into the queue first*/
     286:	e6 e4       	ldi	r30, 0x46	; 70
     288:	f2 e0       	ldi	r31, 0x02	; 2
     28a:	2d e0       	ldi	r18, 0x0D	; 13
     28c:	20 83       	st	Z, r18
	queue[qcntr++] = 0x0a;
     28e:	22 e0       	ldi	r18, 0x02	; 2
     290:	20 93 41 02 	sts	0x0241, r18	; 0x800241 <qcntr>
     294:	2a e0       	ldi	r18, 0x0A	; 10
     296:	21 83       	std	Z+1, r18	; 0x01
	while (*s)
     298:	fc 01       	movw	r30, r24
     29a:	20 81       	ld	r18, Z
     29c:	22 23       	and	r18, r18
     29e:	79 f0       	breq	.+30     	; 0x2be <sendmsg+0x3e>
     2a0:	dc 01       	movw	r26, r24
	queue[qcntr++] = *s++;   /*put characters into queue*/
     2a2:	e0 91 41 02 	lds	r30, 0x0241	; 0x800241 <qcntr>
     2a6:	81 e0       	ldi	r24, 0x01	; 1
     2a8:	8e 0f       	add	r24, r30
     2aa:	80 93 41 02 	sts	0x0241, r24	; 0x800241 <qcntr>
     2ae:	8d 91       	ld	r24, X+
     2b0:	f0 e0       	ldi	r31, 0x00	; 0
     2b2:	ea 5b       	subi	r30, 0xBA	; 186
     2b4:	fd 4f       	sbci	r31, 0xFD	; 253
     2b6:	80 83       	st	Z, r24
	qcntr = 0;    /*preset indices*/
	sndcntr = 1;  /*set to one because first character already sent*/
	
	queue[qcntr++] = 0x0d;   /*put CRLF into the queue first*/
	queue[qcntr++] = 0x0a;
	while (*s)
     2b8:	8c 91       	ld	r24, X
     2ba:	81 11       	cpse	r24, r1
     2bc:	f2 cf       	rjmp	.-28     	; 0x2a2 <sendmsg+0x22>
	queue[qcntr++] = *s++;   /*put characters into queue*/
	
	UDR0 = queue[0];  /*send first character to start process*/
     2be:	80 91 46 02 	lds	r24, 0x0246	; 0x800246 <queue>
     2c2:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
     2c6:	08 95       	ret

000002c8 <main>:
unsigned int enContDisplay = 0; //enable continuous display


/* Main */
int main(void)
{
     2c8:	cf 93       	push	r28
     2ca:	df 93       	push	r29
     2cc:	cd b7       	in	r28, 0x3d	; 61
     2ce:	de b7       	in	r29, 0x3e	; 62
     2d0:	e8 97       	sbiw	r28, 0x38	; 56
     2d2:	0f b6       	in	r0, 0x3f	; 63
     2d4:	f8 94       	cli
     2d6:	de bf       	out	0x3e, r29	; 62
     2d8:	0f be       	out	0x3f, r0	; 63
     2da:	cd bf       	out	0x3d, r28	; 61
	char str_adc_mV[9]; // string written to user for adc in mV

	int Brightness; // variable that user will enter to set brightness of LED
	
	/* Calling Initialized Registers */
	init_ports(); // initializes ports
     2dc:	0e 94 21 01 	call	0x242	; 0x242 <init_ports>
	init_USART(); // initializes USART
     2e0:	0e 94 25 01 	call	0x24a	; 0x24a <init_USART>
	init_adc(); // initializes adc
     2e4:	0e 94 17 01 	call	0x22e	; 0x22e <init_adc>
	init_timer0(); // initializes timer0
     2e8:	0e 94 2f 01 	call	0x25e	; 0x25e <init_timer0>
	//init_timer1(); // initializes timer1
	init_timer2(); // initializes timer2
     2ec:	0e 94 37 01 	call	0x26e	; 0x26e <init_timer2>

	sei(); /*global interrupt enable */
     2f0:	78 94       	sei

	while (1)
	{	
		if (UCSR0A & (1<<RXC0)) /*check for character received*/
     2f2:	0f 2e       	mov	r0, r31
     2f4:	f0 ec       	ldi	r31, 0xC0	; 192
     2f6:	ef 2e       	mov	r14, r31
     2f8:	f1 2c       	mov	r15, r1
     2fa:	f0 2d       	mov	r31, r0
		{
			ch = UDR0;    /*get character sent from PC*/
     2fc:	0f 2e       	mov	r0, r31
     2fe:	f6 ec       	ldi	r31, 0xC6	; 198
     300:	4f 2e       	mov	r4, r31
     302:	51 2c       	mov	r5, r1
     304:	f0 2d       	mov	r31, r0
				break;
				
				/* Report OCR2A Value */
				case 'S':
				case 's':
					sprintf(data, "OCR2A = %d", OCR2A); // Report OCR2A value
     306:	ce 01       	movw	r24, r28
     308:	01 96       	adiw	r24, 0x01	; 1
     30a:	3c 01       	movw	r6, r24
				
				/* Report ADC Value in mV to user */
				case 'V':
				case 'v':
					adc_mV = (adc_reading*mV_multiplier); // Calculates ADC in mV
					dtostrf(adc_mV,8,2,str_adc_mV);  // Changes value from double to string
     30c:	fe 01       	movw	r30, r28
     30e:	b6 96       	adiw	r30, 0x26	; 38
     310:	f8 ab       	std	Y+48, r31	; 0x30
     312:	ef a7       	std	Y+47, r30	; 0x2f
				/* Report Temperature to user */
				case 'T':
				case 't':
					if (input == Temp) {
						temp = adc_reading/temp_divider; //(5v/1023)=4.887mV = 5mV, every deg c is 10Mv voltage change therefore divide by 2
						dtostrf(temp,6,2,str_temp); // Changes value from double to string
     314:	4e 96       	adiw	r24, 0x1e	; 30
     316:	9a ab       	std	Y+50, r25	; 0x32
     318:	89 ab       	std	Y+49, r24	; 0x31
				
				/* Report ADC Value in mV to user */
				case 'V':
				case 'v':
					adc_mV = (adc_reading*mV_multiplier); // Calculates ADC in mV
					dtostrf(adc_mV,8,2,str_adc_mV);  // Changes value from double to string
     31a:	9f a5       	ldd	r25, Y+47	; 0x2f
     31c:	9d ab       	std	Y+53, r25	; 0x35
     31e:	e8 a9       	ldd	r30, Y+48	; 0x30
     320:	ee ab       	std	Y+54, r30	; 0x36
				/* Report Temperature to user */
				case 'T':
				case 't':
					if (input == Temp) {
						temp = adc_reading/temp_divider; //(5v/1023)=4.887mV = 5mV, every deg c is 10Mv voltage change therefore divide by 2
						dtostrf(temp,6,2,str_temp); // Changes value from double to string
     322:	f9 a9       	ldd	r31, Y+49	; 0x31
     324:	ff ab       	std	Y+55, r31	; 0x37
     326:	2a a9       	ldd	r18, Y+50	; 0x32
     328:	28 af       	std	Y+56, r18	; 0x38
     32a:	6b aa       	std	Y+51, r6	; 0x33
     32c:	7c aa       	std	Y+52, r7	; 0x34
				break;
				
				/* Report Values Continuously */
				case 'C':
				case 'c':
					enContDisplay = 1; //enable continuous adc display
     32e:	88 24       	eor	r8, r8
     330:	83 94       	inc	r8
     332:	91 2c       	mov	r9, r1
				/* Report ADC Value in mV to user */
				case 'V':
				case 'v':
					adc_mV = (adc_reading*mV_multiplier); // Calculates ADC in mV
					dtostrf(adc_mV,8,2,str_adc_mV);  // Changes value from double to string
					sprintf(data, "ADC value = %s mV",str_adc_mV); //Report ADC value in mV
     334:	0f 2e       	mov	r0, r31
     336:	f1 e2       	ldi	r31, 0x21	; 33
     338:	af 2e       	mov	r10, r31
     33a:	f2 e0       	ldi	r31, 0x02	; 2
     33c:	bf 2e       	mov	r11, r31
     33e:	f0 2d       	mov	r31, r0
				break;
				
				/* Report ADC Value to user */
				case 'A':
				case 'a':
					sprintf(data, "ADC value = %d", adc_reading); //Report ADC value
     340:	0f 2e       	mov	r0, r31
     342:	f2 e1       	ldi	r31, 0x12	; 18
     344:	cf 2e       	mov	r12, r31
     346:	f2 e0       	ldi	r31, 0x02	; 2
     348:	df 2e       	mov	r13, r31
     34a:	f0 2d       	mov	r31, r0
				case 'T':
				case 't':
					if (input == Temp) {
						temp = adc_reading/temp_divider; //(5v/1023)=4.887mV = 5mV, every deg c is 10Mv voltage change therefore divide by 2
						dtostrf(temp,6,2,str_temp); // Changes value from double to string
						sprintf(data,"LM35 Temperature = %s deg C",str_temp); //Report Temperature value
     34c:	0f 2e       	mov	r0, r31
     34e:	f6 ef       	ldi	r31, 0xF6	; 246
     350:	2f 2e       	mov	r2, r31
     352:	f1 e0       	ldi	r31, 0x01	; 1
     354:	3f 2e       	mov	r3, r31
     356:	f0 2d       	mov	r31, r0

	sei(); /*global interrupt enable */

	while (1)
	{	
		if (UCSR0A & (1<<RXC0)) /*check for character received*/
     358:	f7 01       	movw	r30, r14
     35a:	80 81       	ld	r24, Z
     35c:	88 23       	and	r24, r24
     35e:	0c f0       	brlt	.+2      	; 0x362 <main+0x9a>
     360:	06 c1       	rjmp	.+524    	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
		{
			ch = UDR0;    /*get character sent from PC*/
     362:	f2 01       	movw	r30, r4
     364:	60 81       	ld	r22, Z
			switch (ch) { //character input
     366:	86 2f       	mov	r24, r22
     368:	90 e0       	ldi	r25, 0x00	; 0
     36a:	fc 01       	movw	r30, r24
     36c:	f0 97       	sbiw	r30, 0x30	; 48
     36e:	e7 34       	cpi	r30, 0x47	; 71
     370:	f1 05       	cpc	r31, r1
     372:	08 f0       	brcs	.+2      	; 0x376 <main+0xae>
     374:	f8 c0       	rjmp	.+496    	; 0x566 <__LOCK_REGION_LENGTH__+0x166>
     376:	ec 5c       	subi	r30, 0xCC	; 204
     378:	ff 4f       	sbci	r31, 0xFF	; 255
     37a:	0c 94 fb 04 	jmp	0x9f6	; 0x9f6 <__tablejump2__>
				
				/* Sets ADC to ADC2 */
				case 'M':
				case 'm':
					input = Temp;
     37e:	82 e0       	ldi	r24, 0x02	; 2
     380:	80 93 aa 02 	sts	0x02AA, r24	; 0x8002aa <input>
					sendmsg(msg2);
     384:	82 ec       	ldi	r24, 0xC2	; 194
     386:	91 e0       	ldi	r25, 0x01	; 1
     388:	0e 94 40 01 	call	0x280	; 0x280 <sendmsg>
				break;
     38c:	f0 c0       	rjmp	.+480    	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
				
				/* Sets ADC to ADC1 */
				case 'N':
				case 'n':
					input = LDR;
     38e:	f1 e0       	ldi	r31, 0x01	; 1
     390:	f0 93 aa 02 	sts	0x02AA, r31	; 0x8002aa <input>
					sendmsg(msg3);
     394:	82 eb       	ldi	r24, 0xB2	; 178
     396:	91 e0       	ldi	r25, 0x01	; 1
     398:	0e 94 40 01 	call	0x280	; 0x280 <sendmsg>
				break;
     39c:	e8 c0       	rjmp	.+464    	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
				
				/* Sets ADC to ADC0 */
				case 'P':
				case 'p':
					input = Volt;
     39e:	10 92 aa 02 	sts	0x02AA, r1	; 0x8002aa <input>
					sendmsg(msg4);
     3a2:	88 e9       	ldi	r24, 0x98	; 152
     3a4:	91 e0       	ldi	r25, 0x01	; 1
     3a6:	0e 94 40 01 	call	0x280	; 0x280 <sendmsg>
				break;
     3aa:	e1 c0       	rjmp	.+450    	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
				
				/* Report Temperature to user */
				case 'T':
				case 't':
					if (input == Temp) {
     3ac:	80 91 aa 02 	lds	r24, 0x02AA	; 0x8002aa <input>
     3b0:	82 30       	cpi	r24, 0x02	; 2
     3b2:	89 f5       	brne	.+98     	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
						temp = adc_reading/temp_divider; //(5v/1023)=4.887mV = 5mV, every deg c is 10Mv voltage change therefore divide by 2
     3b4:	60 91 ab 02 	lds	r22, 0x02AB	; 0x8002ab <adc_reading>
     3b8:	70 91 ac 02 	lds	r23, 0x02AC	; 0x8002ac <adc_reading+0x1>
     3bc:	80 e0       	ldi	r24, 0x00	; 0
     3be:	90 e0       	ldi	r25, 0x00	; 0
     3c0:	0e 94 00 04 	call	0x800	; 0x800 <__floatunsisf>
     3c4:	20 e0       	ldi	r18, 0x00	; 0
     3c6:	30 e0       	ldi	r19, 0x00	; 0
     3c8:	40 e0       	ldi	r20, 0x00	; 0
     3ca:	5f e3       	ldi	r21, 0x3F	; 63
     3cc:	0e 94 66 04 	call	0x8cc	; 0x8cc <__mulsf3>
     3d0:	60 93 ad 02 	sts	0x02AD, r22	; 0x8002ad <temp>
     3d4:	70 93 ae 02 	sts	0x02AE, r23	; 0x8002ae <temp+0x1>
     3d8:	80 93 af 02 	sts	0x02AF, r24	; 0x8002af <temp+0x2>
     3dc:	90 93 b0 02 	sts	0x02B0, r25	; 0x8002b0 <temp+0x3>
						dtostrf(temp,6,2,str_temp); // Changes value from double to string
     3e0:	0f a9       	ldd	r16, Y+55	; 0x37
     3e2:	18 ad       	ldd	r17, Y+56	; 0x38
     3e4:	22 e0       	ldi	r18, 0x02	; 2
     3e6:	46 e0       	ldi	r20, 0x06	; 6
     3e8:	0e 94 01 05 	call	0xa02	; 0xa02 <dtostrf>
						sprintf(data,"LM35 Temperature = %s deg C",str_temp); //Report Temperature value
     3ec:	2a a9       	ldd	r18, Y+50	; 0x32
     3ee:	2f 93       	push	r18
     3f0:	89 a9       	ldd	r24, Y+49	; 0x31
     3f2:	8f 93       	push	r24
     3f4:	3f 92       	push	r3
     3f6:	2f 92       	push	r2
     3f8:	7f 92       	push	r7
     3fa:	6f 92       	push	r6
     3fc:	0e 94 21 05 	call	0xa42	; 0xa42 <sprintf>
						sendmsg(data);
     400:	8b a9       	ldd	r24, Y+51	; 0x33
     402:	9c a9       	ldd	r25, Y+52	; 0x34
     404:	0e 94 40 01 	call	0x280	; 0x280 <sendmsg>
     408:	0f 90       	pop	r0
     40a:	0f 90       	pop	r0
     40c:	0f 90       	pop	r0
     40e:	0f 90       	pop	r0
     410:	0f 90       	pop	r0
     412:	0f 90       	pop	r0
     414:	ac c0       	rjmp	.+344    	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
					} else {
						//Give warning
						sendmsg(msg5);
     416:	86 e6       	ldi	r24, 0x66	; 102
     418:	91 e0       	ldi	r25, 0x01	; 1
     41a:	0e 94 40 01 	call	0x280	; 0x280 <sendmsg>
     41e:	a7 c0       	rjmp	.+334    	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
				break;
				
				/* Report Bright/Dark to user */
				case 'L':
				case 'l':
					if (input == LDR) {
     420:	80 91 aa 02 	lds	r24, 0x02AA	; 0x8002aa <input>
     424:	81 30       	cpi	r24, 0x01	; 1
     426:	89 f4       	brne	.+34     	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
							if(adc_reading>Light_Threshold)
     428:	80 91 ab 02 	lds	r24, 0x02AB	; 0x8002ab <adc_reading>
     42c:	90 91 ac 02 	lds	r25, 0x02AC	; 0x8002ac <adc_reading+0x1>
     430:	81 30       	cpi	r24, 0x01	; 1
     432:	92 40       	sbci	r25, 0x02	; 2
     434:	28 f0       	brcs	.+10     	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
							{
								sendmsg(msg7); // Report Bright
     436:	8f e2       	ldi	r24, 0x2F	; 47
     438:	91 e0       	ldi	r25, 0x01	; 1
     43a:	0e 94 40 01 	call	0x280	; 0x280 <sendmsg>
     43e:	97 c0       	rjmp	.+302    	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
							}
							else
							{
								sendmsg(msg8); // Report Dark
     440:	84 e2       	ldi	r24, 0x24	; 36
     442:	91 e0       	ldi	r25, 0x01	; 1
     444:	0e 94 40 01 	call	0x280	; 0x280 <sendmsg>
     448:	92 c0       	rjmp	.+292    	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
							}
					} else {
						//Give warning
						sendmsg(msg6);
     44a:	8c e3       	ldi	r24, 0x3C	; 60
     44c:	91 e0       	ldi	r25, 0x01	; 1
     44e:	0e 94 40 01 	call	0x280	; 0x280 <sendmsg>
     452:	8d c0       	rjmp	.+282    	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
				break;
				
				/* Report ADC Value to user */
				case 'A':
				case 'a':
					sprintf(data, "ADC value = %d", adc_reading); //Report ADC value
     454:	80 91 ac 02 	lds	r24, 0x02AC	; 0x8002ac <adc_reading+0x1>
     458:	8f 93       	push	r24
     45a:	80 91 ab 02 	lds	r24, 0x02AB	; 0x8002ab <adc_reading>
     45e:	8f 93       	push	r24
     460:	df 92       	push	r13
     462:	cf 92       	push	r12
     464:	7f 92       	push	r7
     466:	6f 92       	push	r6
     468:	0e 94 21 05 	call	0xa42	; 0xa42 <sprintf>
					sendmsg(data);
     46c:	8b a9       	ldd	r24, Y+51	; 0x33
     46e:	9c a9       	ldd	r25, Y+52	; 0x34
     470:	0e 94 40 01 	call	0x280	; 0x280 <sendmsg>
				break;
     474:	0f 90       	pop	r0
     476:	0f 90       	pop	r0
     478:	0f 90       	pop	r0
     47a:	0f 90       	pop	r0
     47c:	0f 90       	pop	r0
     47e:	0f 90       	pop	r0
     480:	76 c0       	rjmp	.+236    	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
				
				/* Report ADC Value in mV to user */
				case 'V':
				case 'v':
					adc_mV = (adc_reading*mV_multiplier); // Calculates ADC in mV
     482:	60 91 ab 02 	lds	r22, 0x02AB	; 0x8002ab <adc_reading>
     486:	70 91 ac 02 	lds	r23, 0x02AC	; 0x8002ac <adc_reading+0x1>
     48a:	80 e0       	ldi	r24, 0x00	; 0
     48c:	90 e0       	ldi	r25, 0x00	; 0
     48e:	0e 94 00 04 	call	0x800	; 0x800 <__floatunsisf>
     492:	26 ef       	ldi	r18, 0xF6	; 246
     494:	38 e2       	ldi	r19, 0x28	; 40
     496:	4c e9       	ldi	r20, 0x9C	; 156
     498:	50 e4       	ldi	r21, 0x40	; 64
     49a:	0e 94 66 04 	call	0x8cc	; 0x8cc <__mulsf3>
     49e:	60 93 42 02 	sts	0x0242, r22	; 0x800242 <adc_mV>
     4a2:	70 93 43 02 	sts	0x0243, r23	; 0x800243 <adc_mV+0x1>
     4a6:	80 93 44 02 	sts	0x0244, r24	; 0x800244 <adc_mV+0x2>
     4aa:	90 93 45 02 	sts	0x0245, r25	; 0x800245 <adc_mV+0x3>
					dtostrf(adc_mV,8,2,str_adc_mV);  // Changes value from double to string
     4ae:	0d a9       	ldd	r16, Y+53	; 0x35
     4b0:	1e a9       	ldd	r17, Y+54	; 0x36
     4b2:	22 e0       	ldi	r18, 0x02	; 2
     4b4:	48 e0       	ldi	r20, 0x08	; 8
     4b6:	0e 94 01 05 	call	0xa02	; 0xa02 <dtostrf>
					sprintf(data, "ADC value = %s mV",str_adc_mV); //Report ADC value in mV
     4ba:	f8 a9       	ldd	r31, Y+48	; 0x30
     4bc:	ff 93       	push	r31
     4be:	2f a5       	ldd	r18, Y+47	; 0x2f
     4c0:	2f 93       	push	r18
     4c2:	bf 92       	push	r11
     4c4:	af 92       	push	r10
     4c6:	7f 92       	push	r7
     4c8:	6f 92       	push	r6
     4ca:	0e 94 21 05 	call	0xa42	; 0xa42 <sprintf>
					sendmsg(data);	
     4ce:	8b a9       	ldd	r24, Y+51	; 0x33
     4d0:	9c a9       	ldd	r25, Y+52	; 0x34
     4d2:	0e 94 40 01 	call	0x280	; 0x280 <sendmsg>
				break;
     4d6:	0f 90       	pop	r0
     4d8:	0f 90       	pop	r0
     4da:	0f 90       	pop	r0
     4dc:	0f 90       	pop	r0
     4de:	0f 90       	pop	r0
     4e0:	0f 90       	pop	r0
     4e2:	45 c0       	rjmp	.+138    	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
				
				/* Report Values Continuously */
				case 'C':
				case 'c':
					enContDisplay = 1; //enable continuous adc display
     4e4:	90 92 3f 02 	sts	0x023F, r9	; 0x80023f <__data_end+0x1>
     4e8:	80 92 3e 02 	sts	0x023E, r8	; 0x80023e <__data_end>
				break;
     4ec:	40 c0       	rjmp	.+128    	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
				
				/* Stop Reporting Values Continuously */
				case 'E':
				case 'e':
					if(enContDisplay==0) {
     4ee:	80 91 3e 02 	lds	r24, 0x023E	; 0x80023e <__data_end>
     4f2:	90 91 3f 02 	lds	r25, 0x023F	; 0x80023f <__data_end+0x1>
     4f6:	89 2b       	or	r24, r25
     4f8:	21 f4       	brne	.+8      	; 0x502 <__LOCK_REGION_LENGTH__+0x102>
						sendmsg(msg9);
     4fa:	80 e0       	ldi	r24, 0x00	; 0
     4fc:	91 e0       	ldi	r25, 0x01	; 1
     4fe:	0e 94 40 01 	call	0x280	; 0x280 <sendmsg>
					}
					enContDisplay = 0; //disable continuous adc display
     502:	10 92 3f 02 	sts	0x023F, r1	; 0x80023f <__data_end+0x1>
     506:	10 92 3e 02 	sts	0x023E, r1	; 0x80023e <__data_end>
				break;
     50a:	31 c0       	rjmp	.+98     	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
				
				/* Report OCR2A Value */
				case 'S':
				case 's':
					sprintf(data, "OCR2A = %d", OCR2A); // Report OCR2A value
     50c:	e3 eb       	ldi	r30, 0xB3	; 179
     50e:	f0 e0       	ldi	r31, 0x00	; 0
     510:	80 81       	ld	r24, Z
     512:	1f 92       	push	r1
     514:	8f 93       	push	r24
     516:	83 e3       	ldi	r24, 0x33	; 51
     518:	92 e0       	ldi	r25, 0x02	; 2
     51a:	9f 93       	push	r25
     51c:	8f 93       	push	r24
     51e:	7f 92       	push	r7
     520:	6f 92       	push	r6
     522:	0e 94 21 05 	call	0xa42	; 0xa42 <sprintf>
					sendmsg(data);
     526:	8b a9       	ldd	r24, Y+51	; 0x33
     528:	9c a9       	ldd	r25, Y+52	; 0x34
     52a:	0e 94 40 01 	call	0x280	; 0x280 <sendmsg>
				break;
     52e:	0f 90       	pop	r0
     530:	0f 90       	pop	r0
     532:	0f 90       	pop	r0
     534:	0f 90       	pop	r0
     536:	0f 90       	pop	r0
     538:	0f 90       	pop	r0
     53a:	19 c0       	rjmp	.+50     	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
				
				/* Sets LED Brightness Level */
				case '0' ... '9':
					
					Brightness = ch - '0';
					OCR2A = Brightness * Brightness_Multiplier;
     53c:	70 e0       	ldi	r23, 0x00	; 0
     53e:	60 53       	subi	r22, 0x30	; 48
     540:	71 09       	sbc	r23, r1
     542:	07 2e       	mov	r0, r23
     544:	00 0c       	add	r0, r0
     546:	88 0b       	sbc	r24, r24
     548:	99 0b       	sbc	r25, r25
     54a:	0e 94 02 04 	call	0x804	; 0x804 <__floatsisf>
     54e:	20 e0       	ldi	r18, 0x00	; 0
     550:	30 e0       	ldi	r19, 0x00	; 0
     552:	4c ec       	ldi	r20, 0xCC	; 204
     554:	51 e4       	ldi	r21, 0x41	; 65
     556:	0e 94 66 04 	call	0x8cc	; 0x8cc <__mulsf3>
     55a:	0e 94 d1 03 	call	0x7a2	; 0x7a2 <__fixunssfsi>
     55e:	e3 eb       	ldi	r30, 0xB3	; 179
     560:	f0 e0       	ldi	r31, 0x00	; 0
     562:	60 83       	st	Z, r22
				break;
     564:	04 c0       	rjmp	.+8      	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
				
				default:
				sendmsg(msg1); /*send default message*/
     566:	81 ee       	ldi	r24, 0xE1	; 225
     568:	91 e0       	ldi	r25, 0x01	; 1
     56a:	0e 94 40 01 	call	0x280	; 0x280 <sendmsg>
			}
		}
	/*Continuous Loop */   
	
		if(new_adc_data) {
     56e:	80 91 b5 02 	lds	r24, 0x02B5	; 0x8002b5 <new_adc_data>
     572:	90 91 b6 02 	lds	r25, 0x02B6	; 0x8002b6 <new_adc_data+0x1>
     576:	89 2b       	or	r24, r25
     578:	09 f4       	brne	.+2      	; 0x57c <__LOCK_REGION_LENGTH__+0x17c>
     57a:	ee ce       	rjmp	.-548    	; 0x358 <main+0x90>
			if(enContDisplay) {
     57c:	80 91 3e 02 	lds	r24, 0x023E	; 0x80023e <__data_end>
     580:	90 91 3f 02 	lds	r25, 0x023F	; 0x80023f <__data_end+0x1>
     584:	89 2b       	or	r24, r25
     586:	09 f4       	brne	.+2      	; 0x58a <__LOCK_REGION_LENGTH__+0x18a>
     588:	b2 c0       	rjmp	.+356    	; 0x6ee <__LOCK_REGION_LENGTH__+0x2ee>
				switch(input){
     58a:	80 91 aa 02 	lds	r24, 0x02AA	; 0x8002aa <input>
     58e:	81 30       	cpi	r24, 0x01	; 1
     590:	c1 f1       	breq	.+112    	; 0x602 <__LOCK_REGION_LENGTH__+0x202>
     592:	20 f0       	brcs	.+8      	; 0x59c <__LOCK_REGION_LENGTH__+0x19c>
     594:	82 30       	cpi	r24, 0x02	; 2
     596:	09 f4       	brne	.+2      	; 0x59a <__LOCK_REGION_LENGTH__+0x19a>
     598:	45 c0       	rjmp	.+138    	; 0x624 <__LOCK_REGION_LENGTH__+0x224>
     59a:	77 c0       	rjmp	.+238    	; 0x68a <__LOCK_REGION_LENGTH__+0x28a>
					case Volt:
						adc_mV = (adc_reading*mV_multiplier);
     59c:	60 91 ab 02 	lds	r22, 0x02AB	; 0x8002ab <adc_reading>
     5a0:	70 91 ac 02 	lds	r23, 0x02AC	; 0x8002ac <adc_reading+0x1>
     5a4:	80 e0       	ldi	r24, 0x00	; 0
     5a6:	90 e0       	ldi	r25, 0x00	; 0
     5a8:	0e 94 00 04 	call	0x800	; 0x800 <__floatunsisf>
     5ac:	26 ef       	ldi	r18, 0xF6	; 246
     5ae:	38 e2       	ldi	r19, 0x28	; 40
     5b0:	4c e9       	ldi	r20, 0x9C	; 156
     5b2:	50 e4       	ldi	r21, 0x40	; 64
     5b4:	0e 94 66 04 	call	0x8cc	; 0x8cc <__mulsf3>
     5b8:	60 93 42 02 	sts	0x0242, r22	; 0x800242 <adc_mV>
     5bc:	70 93 43 02 	sts	0x0243, r23	; 0x800243 <adc_mV+0x1>
     5c0:	80 93 44 02 	sts	0x0244, r24	; 0x800244 <adc_mV+0x2>
     5c4:	90 93 45 02 	sts	0x0245, r25	; 0x800245 <adc_mV+0x3>
						dtostrf(adc_mV,8,2,str_adc_mV);
     5c8:	0d a9       	ldd	r16, Y+53	; 0x35
     5ca:	1e a9       	ldd	r17, Y+54	; 0x36
     5cc:	22 e0       	ldi	r18, 0x02	; 2
     5ce:	48 e0       	ldi	r20, 0x08	; 8
     5d0:	0e 94 01 05 	call	0xa02	; 0xa02 <dtostrf>
						sprintf(data, "ADC value = %s mV",str_adc_mV); //Report ADC value in mV
     5d4:	f8 a9       	ldd	r31, Y+48	; 0x30
     5d6:	ff 93       	push	r31
     5d8:	2f a5       	ldd	r18, Y+47	; 0x2f
     5da:	2f 93       	push	r18
     5dc:	81 e2       	ldi	r24, 0x21	; 33
     5de:	92 e0       	ldi	r25, 0x02	; 2
     5e0:	9f 93       	push	r25
     5e2:	8f 93       	push	r24
     5e4:	7f 92       	push	r7
     5e6:	6f 92       	push	r6
     5e8:	0e 94 21 05 	call	0xa42	; 0xa42 <sprintf>
						sendmsg(data);
     5ec:	8b a9       	ldd	r24, Y+51	; 0x33
     5ee:	9c a9       	ldd	r25, Y+52	; 0x34
     5f0:	0e 94 40 01 	call	0x280	; 0x280 <sendmsg>
					break;
     5f4:	0f 90       	pop	r0
     5f6:	0f 90       	pop	r0
     5f8:	0f 90       	pop	r0
     5fa:	0f 90       	pop	r0
     5fc:	0f 90       	pop	r0
     5fe:	0f 90       	pop	r0
     600:	76 c0       	rjmp	.+236    	; 0x6ee <__LOCK_REGION_LENGTH__+0x2ee>
					
					case LDR:
						if(adc_reading>Light_Threshold)
     602:	80 91 ab 02 	lds	r24, 0x02AB	; 0x8002ab <adc_reading>
     606:	90 91 ac 02 	lds	r25, 0x02AC	; 0x8002ac <adc_reading+0x1>
     60a:	81 30       	cpi	r24, 0x01	; 1
     60c:	92 40       	sbci	r25, 0x02	; 2
     60e:	28 f0       	brcs	.+10     	; 0x61a <__LOCK_REGION_LENGTH__+0x21a>
						{
							sendmsg(msg7);
     610:	8f e2       	ldi	r24, 0x2F	; 47
     612:	91 e0       	ldi	r25, 0x01	; 1
     614:	0e 94 40 01 	call	0x280	; 0x280 <sendmsg>
     618:	6a c0       	rjmp	.+212    	; 0x6ee <__LOCK_REGION_LENGTH__+0x2ee>
						}
						else
						{
							sendmsg(msg8);
     61a:	84 e2       	ldi	r24, 0x24	; 36
     61c:	91 e0       	ldi	r25, 0x01	; 1
     61e:	0e 94 40 01 	call	0x280	; 0x280 <sendmsg>
     622:	65 c0       	rjmp	.+202    	; 0x6ee <__LOCK_REGION_LENGTH__+0x2ee>
						}
					break;
					
					case Temp:
						temp = adc_reading/temp_divider; //(5v/1023)=4.887mV = 5mV, every deg c is 10Mv voltage change therefore divide by 2
     624:	60 91 ab 02 	lds	r22, 0x02AB	; 0x8002ab <adc_reading>
     628:	70 91 ac 02 	lds	r23, 0x02AC	; 0x8002ac <adc_reading+0x1>
     62c:	80 e0       	ldi	r24, 0x00	; 0
     62e:	90 e0       	ldi	r25, 0x00	; 0
     630:	0e 94 00 04 	call	0x800	; 0x800 <__floatunsisf>
     634:	20 e0       	ldi	r18, 0x00	; 0
     636:	30 e0       	ldi	r19, 0x00	; 0
     638:	40 e0       	ldi	r20, 0x00	; 0
     63a:	5f e3       	ldi	r21, 0x3F	; 63
     63c:	0e 94 66 04 	call	0x8cc	; 0x8cc <__mulsf3>
     640:	60 93 ad 02 	sts	0x02AD, r22	; 0x8002ad <temp>
     644:	70 93 ae 02 	sts	0x02AE, r23	; 0x8002ae <temp+0x1>
     648:	80 93 af 02 	sts	0x02AF, r24	; 0x8002af <temp+0x2>
     64c:	90 93 b0 02 	sts	0x02B0, r25	; 0x8002b0 <temp+0x3>
						dtostrf(temp,6,2,str_temp); // Changes value from double to string
     650:	0f a9       	ldd	r16, Y+55	; 0x37
     652:	18 ad       	ldd	r17, Y+56	; 0x38
     654:	22 e0       	ldi	r18, 0x02	; 2
     656:	46 e0       	ldi	r20, 0x06	; 6
     658:	0e 94 01 05 	call	0xa02	; 0xa02 <dtostrf>
						sprintf(data,"LM35 Temperature = %s deg C",str_temp); //Report Temperature value
     65c:	fa a9       	ldd	r31, Y+50	; 0x32
     65e:	ff 93       	push	r31
     660:	29 a9       	ldd	r18, Y+49	; 0x31
     662:	2f 93       	push	r18
     664:	86 ef       	ldi	r24, 0xF6	; 246
     666:	91 e0       	ldi	r25, 0x01	; 1
     668:	9f 93       	push	r25
     66a:	8f 93       	push	r24
     66c:	7f 92       	push	r7
     66e:	6f 92       	push	r6
     670:	0e 94 21 05 	call	0xa42	; 0xa42 <sprintf>
						sendmsg(data);
     674:	8b a9       	ldd	r24, Y+51	; 0x33
     676:	9c a9       	ldd	r25, Y+52	; 0x34
     678:	0e 94 40 01 	call	0x280	; 0x280 <sendmsg>
					break;
     67c:	0f 90       	pop	r0
     67e:	0f 90       	pop	r0
     680:	0f 90       	pop	r0
     682:	0f 90       	pop	r0
     684:	0f 90       	pop	r0
     686:	0f 90       	pop	r0
     688:	32 c0       	rjmp	.+100    	; 0x6ee <__LOCK_REGION_LENGTH__+0x2ee>
					
					default:
						temp = adc_reading/temp_divider; //(5v/1023)=4.887mV = 5mV, every deg c is 10Mv voltage change therefore divide by 2
     68a:	60 91 ab 02 	lds	r22, 0x02AB	; 0x8002ab <adc_reading>
     68e:	70 91 ac 02 	lds	r23, 0x02AC	; 0x8002ac <adc_reading+0x1>
     692:	80 e0       	ldi	r24, 0x00	; 0
     694:	90 e0       	ldi	r25, 0x00	; 0
     696:	0e 94 00 04 	call	0x800	; 0x800 <__floatunsisf>
     69a:	20 e0       	ldi	r18, 0x00	; 0
     69c:	30 e0       	ldi	r19, 0x00	; 0
     69e:	40 e0       	ldi	r20, 0x00	; 0
     6a0:	5f e3       	ldi	r21, 0x3F	; 63
     6a2:	0e 94 66 04 	call	0x8cc	; 0x8cc <__mulsf3>
     6a6:	60 93 ad 02 	sts	0x02AD, r22	; 0x8002ad <temp>
     6aa:	70 93 ae 02 	sts	0x02AE, r23	; 0x8002ae <temp+0x1>
     6ae:	80 93 af 02 	sts	0x02AF, r24	; 0x8002af <temp+0x2>
     6b2:	90 93 b0 02 	sts	0x02B0, r25	; 0x8002b0 <temp+0x3>
						dtostrf(temp,6,2,str_temp); // Changes value from double to string
     6b6:	0f a9       	ldd	r16, Y+55	; 0x37
     6b8:	18 ad       	ldd	r17, Y+56	; 0x38
     6ba:	22 e0       	ldi	r18, 0x02	; 2
     6bc:	46 e0       	ldi	r20, 0x06	; 6
     6be:	0e 94 01 05 	call	0xa02	; 0xa02 <dtostrf>
						sprintf(data,"LM35 Temperature = %s deg C",str_temp); //Report Temperature value
     6c2:	8a a9       	ldd	r24, Y+50	; 0x32
     6c4:	8f 93       	push	r24
     6c6:	99 a9       	ldd	r25, Y+49	; 0x31
     6c8:	9f 93       	push	r25
     6ca:	86 ef       	ldi	r24, 0xF6	; 246
     6cc:	91 e0       	ldi	r25, 0x01	; 1
     6ce:	9f 93       	push	r25
     6d0:	8f 93       	push	r24
     6d2:	7f 92       	push	r7
     6d4:	6f 92       	push	r6
     6d6:	0e 94 21 05 	call	0xa42	; 0xa42 <sprintf>
						sendmsg(data);
     6da:	8b a9       	ldd	r24, Y+51	; 0x33
     6dc:	9c a9       	ldd	r25, Y+52	; 0x34
     6de:	0e 94 40 01 	call	0x280	; 0x280 <sendmsg>
     6e2:	0f 90       	pop	r0
     6e4:	0f 90       	pop	r0
     6e6:	0f 90       	pop	r0
     6e8:	0f 90       	pop	r0
     6ea:	0f 90       	pop	r0
     6ec:	0f 90       	pop	r0
				}
			}
			new_adc_data=0;
     6ee:	10 92 b6 02 	sts	0x02B6, r1	; 0x8002b6 <new_adc_data+0x1>
     6f2:	10 92 b5 02 	sts	0x02B5, r1	; 0x8002b5 <new_adc_data>
     6f6:	1b ce       	rjmp	.-970    	; 0x32e <main+0x66>

000006f8 <__vector_20>:

/*this interrupt occurs whenever the */
/*USART has completed sending a character*/

ISR(USART_TX_vect)
{
     6f8:	1f 92       	push	r1
     6fa:	0f 92       	push	r0
     6fc:	0f b6       	in	r0, 0x3f	; 63
     6fe:	0f 92       	push	r0
     700:	11 24       	eor	r1, r1
     702:	8f 93       	push	r24
     704:	ef 93       	push	r30
     706:	ff 93       	push	r31
	/*send next character and increment index*/
	if (qcntr != sndcntr)
     708:	e0 91 40 02 	lds	r30, 0x0240	; 0x800240 <sndcntr>
     70c:	80 91 41 02 	lds	r24, 0x0241	; 0x800241 <qcntr>
     710:	8e 17       	cp	r24, r30
     712:	51 f0       	breq	.+20     	; 0x728 <__vector_20+0x30>
		UDR0 = queue[sndcntr++];
     714:	81 e0       	ldi	r24, 0x01	; 1
     716:	8e 0f       	add	r24, r30
     718:	80 93 40 02 	sts	0x0240, r24	; 0x800240 <sndcntr>
     71c:	f0 e0       	ldi	r31, 0x00	; 0
     71e:	ea 5b       	subi	r30, 0xBA	; 186
     720:	fd 4f       	sbci	r31, 0xFD	; 253
     722:	80 81       	ld	r24, Z
     724:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
}
     728:	ff 91       	pop	r31
     72a:	ef 91       	pop	r30
     72c:	8f 91       	pop	r24
     72e:	0f 90       	pop	r0
     730:	0f be       	out	0x3f, r0	; 63
     732:	0f 90       	pop	r0
     734:	1f 90       	pop	r1
     736:	18 95       	reti

00000738 <__vector_21>:

ISR (ADC_vect)//handles ADC interrupts
{
     738:	1f 92       	push	r1
     73a:	0f 92       	push	r0
     73c:	0f b6       	in	r0, 0x3f	; 63
     73e:	0f 92       	push	r0
     740:	11 24       	eor	r1, r1
     742:	8f 93       	push	r24
     744:	9f 93       	push	r25
	
	//adc_reading = ADC;
	new_adc_data = 1;
     746:	81 e0       	ldi	r24, 0x01	; 1
     748:	90 e0       	ldi	r25, 0x00	; 0
     74a:	90 93 b6 02 	sts	0x02B6, r25	; 0x8002b6 <new_adc_data+0x1>
     74e:	80 93 b5 02 	sts	0x02B5, r24	; 0x8002b5 <new_adc_data>
	adc_reading = ADC;
     752:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__DATA_REGION_ORIGIN__+0x18>
     756:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__DATA_REGION_ORIGIN__+0x19>
     75a:	90 93 ac 02 	sts	0x02AC, r25	; 0x8002ac <adc_reading+0x1>
     75e:	80 93 ab 02 	sts	0x02AB, r24	; 0x8002ab <adc_reading>
	switch(input) {
     762:	80 91 aa 02 	lds	r24, 0x02AA	; 0x8002aa <input>
     766:	81 30       	cpi	r24, 0x01	; 1
     768:	41 f0       	breq	.+16     	; 0x77a <__vector_21+0x42>
     76a:	18 f0       	brcs	.+6      	; 0x772 <__vector_21+0x3a>
     76c:	82 30       	cpi	r24, 0x02	; 2
     76e:	49 f0       	breq	.+18     	; 0x782 <__vector_21+0x4a>
     770:	0c c0       	rjmp	.+24     	; 0x78a <__vector_21+0x52>
		
		case Volt :
			ADMUX = (1<<6) | (0<<0); //adc0
     772:	80 e4       	ldi	r24, 0x40	; 64
     774:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
		break;
     778:	0b c0       	rjmp	.+22     	; 0x790 <__vector_21+0x58>
		
		case LDR :
			ADMUX = (1<<6) | (1<<0); //adc1
     77a:	81 e4       	ldi	r24, 0x41	; 65
     77c:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
		break;
     780:	07 c0       	rjmp	.+14     	; 0x790 <__vector_21+0x58>
		
		case Temp :
			ADMUX = (1<<6) | (1<<1) ; //adc2
     782:	82 e4       	ldi	r24, 0x42	; 66
     784:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
		break;
     788:	03 c0       	rjmp	.+6      	; 0x790 <__vector_21+0x58>
		default:
			ADMUX = (1<<6) | (1<<1); //adc2
     78a:	82 e4       	ldi	r24, 0x42	; 66
     78c:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
	} 
	TIFR0 = (1<<0); //clears Counter0 overflow
     790:	81 e0       	ldi	r24, 0x01	; 1
     792:	85 bb       	out	0x15, r24	; 21
}
     794:	9f 91       	pop	r25
     796:	8f 91       	pop	r24
     798:	0f 90       	pop	r0
     79a:	0f be       	out	0x3f, r0	; 63
     79c:	0f 90       	pop	r0
     79e:	1f 90       	pop	r1
     7a0:	18 95       	reti

000007a2 <__fixunssfsi>:
     7a2:	0e 94 45 04 	call	0x88a	; 0x88a <__fp_splitA>
     7a6:	88 f0       	brcs	.+34     	; 0x7ca <__fixunssfsi+0x28>
     7a8:	9f 57       	subi	r25, 0x7F	; 127
     7aa:	98 f0       	brcs	.+38     	; 0x7d2 <__fixunssfsi+0x30>
     7ac:	b9 2f       	mov	r27, r25
     7ae:	99 27       	eor	r25, r25
     7b0:	b7 51       	subi	r27, 0x17	; 23
     7b2:	b0 f0       	brcs	.+44     	; 0x7e0 <__fixunssfsi+0x3e>
     7b4:	e1 f0       	breq	.+56     	; 0x7ee <__fixunssfsi+0x4c>
     7b6:	66 0f       	add	r22, r22
     7b8:	77 1f       	adc	r23, r23
     7ba:	88 1f       	adc	r24, r24
     7bc:	99 1f       	adc	r25, r25
     7be:	1a f0       	brmi	.+6      	; 0x7c6 <__fixunssfsi+0x24>
     7c0:	ba 95       	dec	r27
     7c2:	c9 f7       	brne	.-14     	; 0x7b6 <__fixunssfsi+0x14>
     7c4:	14 c0       	rjmp	.+40     	; 0x7ee <__fixunssfsi+0x4c>
     7c6:	b1 30       	cpi	r27, 0x01	; 1
     7c8:	91 f0       	breq	.+36     	; 0x7ee <__fixunssfsi+0x4c>
     7ca:	0e 94 5f 04 	call	0x8be	; 0x8be <__fp_zero>
     7ce:	b1 e0       	ldi	r27, 0x01	; 1
     7d0:	08 95       	ret
     7d2:	0c 94 5f 04 	jmp	0x8be	; 0x8be <__fp_zero>
     7d6:	67 2f       	mov	r22, r23
     7d8:	78 2f       	mov	r23, r24
     7da:	88 27       	eor	r24, r24
     7dc:	b8 5f       	subi	r27, 0xF8	; 248
     7de:	39 f0       	breq	.+14     	; 0x7ee <__fixunssfsi+0x4c>
     7e0:	b9 3f       	cpi	r27, 0xF9	; 249
     7e2:	cc f3       	brlt	.-14     	; 0x7d6 <__fixunssfsi+0x34>
     7e4:	86 95       	lsr	r24
     7e6:	77 95       	ror	r23
     7e8:	67 95       	ror	r22
     7ea:	b3 95       	inc	r27
     7ec:	d9 f7       	brne	.-10     	; 0x7e4 <__fixunssfsi+0x42>
     7ee:	3e f4       	brtc	.+14     	; 0x7fe <__fixunssfsi+0x5c>
     7f0:	90 95       	com	r25
     7f2:	80 95       	com	r24
     7f4:	70 95       	com	r23
     7f6:	61 95       	neg	r22
     7f8:	7f 4f       	sbci	r23, 0xFF	; 255
     7fa:	8f 4f       	sbci	r24, 0xFF	; 255
     7fc:	9f 4f       	sbci	r25, 0xFF	; 255
     7fe:	08 95       	ret

00000800 <__floatunsisf>:
     800:	e8 94       	clt
     802:	09 c0       	rjmp	.+18     	; 0x816 <__floatsisf+0x12>

00000804 <__floatsisf>:
     804:	97 fb       	bst	r25, 7
     806:	3e f4       	brtc	.+14     	; 0x816 <__floatsisf+0x12>
     808:	90 95       	com	r25
     80a:	80 95       	com	r24
     80c:	70 95       	com	r23
     80e:	61 95       	neg	r22
     810:	7f 4f       	sbci	r23, 0xFF	; 255
     812:	8f 4f       	sbci	r24, 0xFF	; 255
     814:	9f 4f       	sbci	r25, 0xFF	; 255
     816:	99 23       	and	r25, r25
     818:	a9 f0       	breq	.+42     	; 0x844 <__floatsisf+0x40>
     81a:	f9 2f       	mov	r31, r25
     81c:	96 e9       	ldi	r25, 0x96	; 150
     81e:	bb 27       	eor	r27, r27
     820:	93 95       	inc	r25
     822:	f6 95       	lsr	r31
     824:	87 95       	ror	r24
     826:	77 95       	ror	r23
     828:	67 95       	ror	r22
     82a:	b7 95       	ror	r27
     82c:	f1 11       	cpse	r31, r1
     82e:	f8 cf       	rjmp	.-16     	; 0x820 <__floatsisf+0x1c>
     830:	fa f4       	brpl	.+62     	; 0x870 <__floatsisf+0x6c>
     832:	bb 0f       	add	r27, r27
     834:	11 f4       	brne	.+4      	; 0x83a <__floatsisf+0x36>
     836:	60 ff       	sbrs	r22, 0
     838:	1b c0       	rjmp	.+54     	; 0x870 <__floatsisf+0x6c>
     83a:	6f 5f       	subi	r22, 0xFF	; 255
     83c:	7f 4f       	sbci	r23, 0xFF	; 255
     83e:	8f 4f       	sbci	r24, 0xFF	; 255
     840:	9f 4f       	sbci	r25, 0xFF	; 255
     842:	16 c0       	rjmp	.+44     	; 0x870 <__floatsisf+0x6c>
     844:	88 23       	and	r24, r24
     846:	11 f0       	breq	.+4      	; 0x84c <__floatsisf+0x48>
     848:	96 e9       	ldi	r25, 0x96	; 150
     84a:	11 c0       	rjmp	.+34     	; 0x86e <__floatsisf+0x6a>
     84c:	77 23       	and	r23, r23
     84e:	21 f0       	breq	.+8      	; 0x858 <__floatsisf+0x54>
     850:	9e e8       	ldi	r25, 0x8E	; 142
     852:	87 2f       	mov	r24, r23
     854:	76 2f       	mov	r23, r22
     856:	05 c0       	rjmp	.+10     	; 0x862 <__floatsisf+0x5e>
     858:	66 23       	and	r22, r22
     85a:	71 f0       	breq	.+28     	; 0x878 <__floatsisf+0x74>
     85c:	96 e8       	ldi	r25, 0x86	; 134
     85e:	86 2f       	mov	r24, r22
     860:	70 e0       	ldi	r23, 0x00	; 0
     862:	60 e0       	ldi	r22, 0x00	; 0
     864:	2a f0       	brmi	.+10     	; 0x870 <__floatsisf+0x6c>
     866:	9a 95       	dec	r25
     868:	66 0f       	add	r22, r22
     86a:	77 1f       	adc	r23, r23
     86c:	88 1f       	adc	r24, r24
     86e:	da f7       	brpl	.-10     	; 0x866 <__floatsisf+0x62>
     870:	88 0f       	add	r24, r24
     872:	96 95       	lsr	r25
     874:	87 95       	ror	r24
     876:	97 f9       	bld	r25, 7
     878:	08 95       	ret

0000087a <__fp_split3>:
     87a:	57 fd       	sbrc	r21, 7
     87c:	90 58       	subi	r25, 0x80	; 128
     87e:	44 0f       	add	r20, r20
     880:	55 1f       	adc	r21, r21
     882:	59 f0       	breq	.+22     	; 0x89a <__fp_splitA+0x10>
     884:	5f 3f       	cpi	r21, 0xFF	; 255
     886:	71 f0       	breq	.+28     	; 0x8a4 <__fp_splitA+0x1a>
     888:	47 95       	ror	r20

0000088a <__fp_splitA>:
     88a:	88 0f       	add	r24, r24
     88c:	97 fb       	bst	r25, 7
     88e:	99 1f       	adc	r25, r25
     890:	61 f0       	breq	.+24     	; 0x8aa <__fp_splitA+0x20>
     892:	9f 3f       	cpi	r25, 0xFF	; 255
     894:	79 f0       	breq	.+30     	; 0x8b4 <__fp_splitA+0x2a>
     896:	87 95       	ror	r24
     898:	08 95       	ret
     89a:	12 16       	cp	r1, r18
     89c:	13 06       	cpc	r1, r19
     89e:	14 06       	cpc	r1, r20
     8a0:	55 1f       	adc	r21, r21
     8a2:	f2 cf       	rjmp	.-28     	; 0x888 <__fp_split3+0xe>
     8a4:	46 95       	lsr	r20
     8a6:	f1 df       	rcall	.-30     	; 0x88a <__fp_splitA>
     8a8:	08 c0       	rjmp	.+16     	; 0x8ba <__fp_splitA+0x30>
     8aa:	16 16       	cp	r1, r22
     8ac:	17 06       	cpc	r1, r23
     8ae:	18 06       	cpc	r1, r24
     8b0:	99 1f       	adc	r25, r25
     8b2:	f1 cf       	rjmp	.-30     	; 0x896 <__fp_splitA+0xc>
     8b4:	86 95       	lsr	r24
     8b6:	71 05       	cpc	r23, r1
     8b8:	61 05       	cpc	r22, r1
     8ba:	08 94       	sec
     8bc:	08 95       	ret

000008be <__fp_zero>:
     8be:	e8 94       	clt

000008c0 <__fp_szero>:
     8c0:	bb 27       	eor	r27, r27
     8c2:	66 27       	eor	r22, r22
     8c4:	77 27       	eor	r23, r23
     8c6:	cb 01       	movw	r24, r22
     8c8:	97 f9       	bld	r25, 7
     8ca:	08 95       	ret

000008cc <__mulsf3>:
     8cc:	0e 94 79 04 	call	0x8f2	; 0x8f2 <__mulsf3x>
     8d0:	0c 94 ea 04 	jmp	0x9d4	; 0x9d4 <__fp_round>
     8d4:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <__fp_pscA>
     8d8:	38 f0       	brcs	.+14     	; 0x8e8 <__mulsf3+0x1c>
     8da:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <__fp_pscB>
     8de:	20 f0       	brcs	.+8      	; 0x8e8 <__mulsf3+0x1c>
     8e0:	95 23       	and	r25, r21
     8e2:	11 f0       	breq	.+4      	; 0x8e8 <__mulsf3+0x1c>
     8e4:	0c 94 d3 04 	jmp	0x9a6	; 0x9a6 <__fp_inf>
     8e8:	0c 94 d9 04 	jmp	0x9b2	; 0x9b2 <__fp_nan>
     8ec:	11 24       	eor	r1, r1
     8ee:	0c 94 60 04 	jmp	0x8c0	; 0x8c0 <__fp_szero>

000008f2 <__mulsf3x>:
     8f2:	0e 94 3d 04 	call	0x87a	; 0x87a <__fp_split3>
     8f6:	70 f3       	brcs	.-36     	; 0x8d4 <__mulsf3+0x8>

000008f8 <__mulsf3_pse>:
     8f8:	95 9f       	mul	r25, r21
     8fa:	c1 f3       	breq	.-16     	; 0x8ec <__mulsf3+0x20>
     8fc:	95 0f       	add	r25, r21
     8fe:	50 e0       	ldi	r21, 0x00	; 0
     900:	55 1f       	adc	r21, r21
     902:	62 9f       	mul	r22, r18
     904:	f0 01       	movw	r30, r0
     906:	72 9f       	mul	r23, r18
     908:	bb 27       	eor	r27, r27
     90a:	f0 0d       	add	r31, r0
     90c:	b1 1d       	adc	r27, r1
     90e:	63 9f       	mul	r22, r19
     910:	aa 27       	eor	r26, r26
     912:	f0 0d       	add	r31, r0
     914:	b1 1d       	adc	r27, r1
     916:	aa 1f       	adc	r26, r26
     918:	64 9f       	mul	r22, r20
     91a:	66 27       	eor	r22, r22
     91c:	b0 0d       	add	r27, r0
     91e:	a1 1d       	adc	r26, r1
     920:	66 1f       	adc	r22, r22
     922:	82 9f       	mul	r24, r18
     924:	22 27       	eor	r18, r18
     926:	b0 0d       	add	r27, r0
     928:	a1 1d       	adc	r26, r1
     92a:	62 1f       	adc	r22, r18
     92c:	73 9f       	mul	r23, r19
     92e:	b0 0d       	add	r27, r0
     930:	a1 1d       	adc	r26, r1
     932:	62 1f       	adc	r22, r18
     934:	83 9f       	mul	r24, r19
     936:	a0 0d       	add	r26, r0
     938:	61 1d       	adc	r22, r1
     93a:	22 1f       	adc	r18, r18
     93c:	74 9f       	mul	r23, r20
     93e:	33 27       	eor	r19, r19
     940:	a0 0d       	add	r26, r0
     942:	61 1d       	adc	r22, r1
     944:	23 1f       	adc	r18, r19
     946:	84 9f       	mul	r24, r20
     948:	60 0d       	add	r22, r0
     94a:	21 1d       	adc	r18, r1
     94c:	82 2f       	mov	r24, r18
     94e:	76 2f       	mov	r23, r22
     950:	6a 2f       	mov	r22, r26
     952:	11 24       	eor	r1, r1
     954:	9f 57       	subi	r25, 0x7F	; 127
     956:	50 40       	sbci	r21, 0x00	; 0
     958:	9a f0       	brmi	.+38     	; 0x980 <__stack+0x81>
     95a:	f1 f0       	breq	.+60     	; 0x998 <__stack+0x99>
     95c:	88 23       	and	r24, r24
     95e:	4a f0       	brmi	.+18     	; 0x972 <__stack+0x73>
     960:	ee 0f       	add	r30, r30
     962:	ff 1f       	adc	r31, r31
     964:	bb 1f       	adc	r27, r27
     966:	66 1f       	adc	r22, r22
     968:	77 1f       	adc	r23, r23
     96a:	88 1f       	adc	r24, r24
     96c:	91 50       	subi	r25, 0x01	; 1
     96e:	50 40       	sbci	r21, 0x00	; 0
     970:	a9 f7       	brne	.-22     	; 0x95c <__stack+0x5d>
     972:	9e 3f       	cpi	r25, 0xFE	; 254
     974:	51 05       	cpc	r21, r1
     976:	80 f0       	brcs	.+32     	; 0x998 <__stack+0x99>
     978:	0c 94 d3 04 	jmp	0x9a6	; 0x9a6 <__fp_inf>
     97c:	0c 94 60 04 	jmp	0x8c0	; 0x8c0 <__fp_szero>
     980:	5f 3f       	cpi	r21, 0xFF	; 255
     982:	e4 f3       	brlt	.-8      	; 0x97c <__stack+0x7d>
     984:	98 3e       	cpi	r25, 0xE8	; 232
     986:	d4 f3       	brlt	.-12     	; 0x97c <__stack+0x7d>
     988:	86 95       	lsr	r24
     98a:	77 95       	ror	r23
     98c:	67 95       	ror	r22
     98e:	b7 95       	ror	r27
     990:	f7 95       	ror	r31
     992:	e7 95       	ror	r30
     994:	9f 5f       	subi	r25, 0xFF	; 255
     996:	c1 f7       	brne	.-16     	; 0x988 <__stack+0x89>
     998:	fe 2b       	or	r31, r30
     99a:	88 0f       	add	r24, r24
     99c:	91 1d       	adc	r25, r1
     99e:	96 95       	lsr	r25
     9a0:	87 95       	ror	r24
     9a2:	97 f9       	bld	r25, 7
     9a4:	08 95       	ret

000009a6 <__fp_inf>:
     9a6:	97 f9       	bld	r25, 7
     9a8:	9f 67       	ori	r25, 0x7F	; 127
     9aa:	80 e8       	ldi	r24, 0x80	; 128
     9ac:	70 e0       	ldi	r23, 0x00	; 0
     9ae:	60 e0       	ldi	r22, 0x00	; 0
     9b0:	08 95       	ret

000009b2 <__fp_nan>:
     9b2:	9f ef       	ldi	r25, 0xFF	; 255
     9b4:	80 ec       	ldi	r24, 0xC0	; 192
     9b6:	08 95       	ret

000009b8 <__fp_pscA>:
     9b8:	00 24       	eor	r0, r0
     9ba:	0a 94       	dec	r0
     9bc:	16 16       	cp	r1, r22
     9be:	17 06       	cpc	r1, r23
     9c0:	18 06       	cpc	r1, r24
     9c2:	09 06       	cpc	r0, r25
     9c4:	08 95       	ret

000009c6 <__fp_pscB>:
     9c6:	00 24       	eor	r0, r0
     9c8:	0a 94       	dec	r0
     9ca:	12 16       	cp	r1, r18
     9cc:	13 06       	cpc	r1, r19
     9ce:	14 06       	cpc	r1, r20
     9d0:	05 06       	cpc	r0, r21
     9d2:	08 95       	ret

000009d4 <__fp_round>:
     9d4:	09 2e       	mov	r0, r25
     9d6:	03 94       	inc	r0
     9d8:	00 0c       	add	r0, r0
     9da:	11 f4       	brne	.+4      	; 0x9e0 <__fp_round+0xc>
     9dc:	88 23       	and	r24, r24
     9de:	52 f0       	brmi	.+20     	; 0x9f4 <__fp_round+0x20>
     9e0:	bb 0f       	add	r27, r27
     9e2:	40 f4       	brcc	.+16     	; 0x9f4 <__fp_round+0x20>
     9e4:	bf 2b       	or	r27, r31
     9e6:	11 f4       	brne	.+4      	; 0x9ec <__fp_round+0x18>
     9e8:	60 ff       	sbrs	r22, 0
     9ea:	04 c0       	rjmp	.+8      	; 0x9f4 <__fp_round+0x20>
     9ec:	6f 5f       	subi	r22, 0xFF	; 255
     9ee:	7f 4f       	sbci	r23, 0xFF	; 255
     9f0:	8f 4f       	sbci	r24, 0xFF	; 255
     9f2:	9f 4f       	sbci	r25, 0xFF	; 255
     9f4:	08 95       	ret

000009f6 <__tablejump2__>:
     9f6:	ee 0f       	add	r30, r30
     9f8:	ff 1f       	adc	r31, r31
     9fa:	05 90       	lpm	r0, Z+
     9fc:	f4 91       	lpm	r31, Z
     9fe:	e0 2d       	mov	r30, r0
     a00:	09 94       	ijmp

00000a02 <dtostrf>:
     a02:	ef 92       	push	r14
     a04:	0f 93       	push	r16
     a06:	1f 93       	push	r17
     a08:	cf 93       	push	r28
     a0a:	df 93       	push	r29
     a0c:	e8 01       	movw	r28, r16
     a0e:	47 fd       	sbrc	r20, 7
     a10:	02 c0       	rjmp	.+4      	; 0xa16 <dtostrf+0x14>
     a12:	34 e0       	ldi	r19, 0x04	; 4
     a14:	01 c0       	rjmp	.+2      	; 0xa18 <dtostrf+0x16>
     a16:	34 e1       	ldi	r19, 0x14	; 20
     a18:	04 2e       	mov	r0, r20
     a1a:	00 0c       	add	r0, r0
     a1c:	55 0b       	sbc	r21, r21
     a1e:	57 ff       	sbrs	r21, 7
     a20:	03 c0       	rjmp	.+6      	; 0xa28 <dtostrf+0x26>
     a22:	51 95       	neg	r21
     a24:	41 95       	neg	r20
     a26:	51 09       	sbc	r21, r1
     a28:	e3 2e       	mov	r14, r19
     a2a:	02 2f       	mov	r16, r18
     a2c:	24 2f       	mov	r18, r20
     a2e:	ae 01       	movw	r20, r28
     a30:	0e 94 24 07 	call	0xe48	; 0xe48 <dtoa_prf>
     a34:	ce 01       	movw	r24, r28
     a36:	df 91       	pop	r29
     a38:	cf 91       	pop	r28
     a3a:	1f 91       	pop	r17
     a3c:	0f 91       	pop	r16
     a3e:	ef 90       	pop	r14
     a40:	08 95       	ret

00000a42 <sprintf>:
     a42:	ae e0       	ldi	r26, 0x0E	; 14
     a44:	b0 e0       	ldi	r27, 0x00	; 0
     a46:	e7 e2       	ldi	r30, 0x27	; 39
     a48:	f5 e0       	ldi	r31, 0x05	; 5
     a4a:	0c 94 14 0a 	jmp	0x1428	; 0x1428 <__prologue_saves__+0x1c>
     a4e:	0d 89       	ldd	r16, Y+21	; 0x15
     a50:	1e 89       	ldd	r17, Y+22	; 0x16
     a52:	86 e0       	ldi	r24, 0x06	; 6
     a54:	8c 83       	std	Y+4, r24	; 0x04
     a56:	1a 83       	std	Y+2, r17	; 0x02
     a58:	09 83       	std	Y+1, r16	; 0x01
     a5a:	8f ef       	ldi	r24, 0xFF	; 255
     a5c:	9f e7       	ldi	r25, 0x7F	; 127
     a5e:	9e 83       	std	Y+6, r25	; 0x06
     a60:	8d 83       	std	Y+5, r24	; 0x05
     a62:	ae 01       	movw	r20, r28
     a64:	47 5e       	subi	r20, 0xE7	; 231
     a66:	5f 4f       	sbci	r21, 0xFF	; 255
     a68:	6f 89       	ldd	r22, Y+23	; 0x17
     a6a:	78 8d       	ldd	r23, Y+24	; 0x18
     a6c:	ce 01       	movw	r24, r28
     a6e:	01 96       	adiw	r24, 0x01	; 1
     a70:	0e 94 43 05 	call	0xa86	; 0xa86 <vfprintf>
     a74:	ef 81       	ldd	r30, Y+7	; 0x07
     a76:	f8 85       	ldd	r31, Y+8	; 0x08
     a78:	e0 0f       	add	r30, r16
     a7a:	f1 1f       	adc	r31, r17
     a7c:	10 82       	st	Z, r1
     a7e:	2e 96       	adiw	r28, 0x0e	; 14
     a80:	e4 e0       	ldi	r30, 0x04	; 4
     a82:	0c 94 30 0a 	jmp	0x1460	; 0x1460 <__epilogue_restores__+0x1c>

00000a86 <vfprintf>:
     a86:	ab e0       	ldi	r26, 0x0B	; 11
     a88:	b0 e0       	ldi	r27, 0x00	; 0
     a8a:	e9 e4       	ldi	r30, 0x49	; 73
     a8c:	f5 e0       	ldi	r31, 0x05	; 5
     a8e:	0c 94 06 0a 	jmp	0x140c	; 0x140c <__prologue_saves__>
     a92:	6c 01       	movw	r12, r24
     a94:	7b 01       	movw	r14, r22
     a96:	8a 01       	movw	r16, r20
     a98:	fc 01       	movw	r30, r24
     a9a:	17 82       	std	Z+7, r1	; 0x07
     a9c:	16 82       	std	Z+6, r1	; 0x06
     a9e:	83 81       	ldd	r24, Z+3	; 0x03
     aa0:	81 ff       	sbrs	r24, 1
     aa2:	cc c1       	rjmp	.+920    	; 0xe3c <vfprintf+0x3b6>
     aa4:	ce 01       	movw	r24, r28
     aa6:	01 96       	adiw	r24, 0x01	; 1
     aa8:	3c 01       	movw	r6, r24
     aaa:	f6 01       	movw	r30, r12
     aac:	93 81       	ldd	r25, Z+3	; 0x03
     aae:	f7 01       	movw	r30, r14
     ab0:	93 fd       	sbrc	r25, 3
     ab2:	85 91       	lpm	r24, Z+
     ab4:	93 ff       	sbrs	r25, 3
     ab6:	81 91       	ld	r24, Z+
     ab8:	7f 01       	movw	r14, r30
     aba:	88 23       	and	r24, r24
     abc:	09 f4       	brne	.+2      	; 0xac0 <vfprintf+0x3a>
     abe:	ba c1       	rjmp	.+884    	; 0xe34 <vfprintf+0x3ae>
     ac0:	85 32       	cpi	r24, 0x25	; 37
     ac2:	39 f4       	brne	.+14     	; 0xad2 <vfprintf+0x4c>
     ac4:	93 fd       	sbrc	r25, 3
     ac6:	85 91       	lpm	r24, Z+
     ac8:	93 ff       	sbrs	r25, 3
     aca:	81 91       	ld	r24, Z+
     acc:	7f 01       	movw	r14, r30
     ace:	85 32       	cpi	r24, 0x25	; 37
     ad0:	29 f4       	brne	.+10     	; 0xadc <vfprintf+0x56>
     ad2:	b6 01       	movw	r22, r12
     ad4:	90 e0       	ldi	r25, 0x00	; 0
     ad6:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <fputc>
     ada:	e7 cf       	rjmp	.-50     	; 0xaaa <vfprintf+0x24>
     adc:	91 2c       	mov	r9, r1
     ade:	21 2c       	mov	r2, r1
     ae0:	31 2c       	mov	r3, r1
     ae2:	ff e1       	ldi	r31, 0x1F	; 31
     ae4:	f3 15       	cp	r31, r3
     ae6:	d8 f0       	brcs	.+54     	; 0xb1e <vfprintf+0x98>
     ae8:	8b 32       	cpi	r24, 0x2B	; 43
     aea:	79 f0       	breq	.+30     	; 0xb0a <vfprintf+0x84>
     aec:	38 f4       	brcc	.+14     	; 0xafc <vfprintf+0x76>
     aee:	80 32       	cpi	r24, 0x20	; 32
     af0:	79 f0       	breq	.+30     	; 0xb10 <vfprintf+0x8a>
     af2:	83 32       	cpi	r24, 0x23	; 35
     af4:	a1 f4       	brne	.+40     	; 0xb1e <vfprintf+0x98>
     af6:	23 2d       	mov	r18, r3
     af8:	20 61       	ori	r18, 0x10	; 16
     afa:	1d c0       	rjmp	.+58     	; 0xb36 <vfprintf+0xb0>
     afc:	8d 32       	cpi	r24, 0x2D	; 45
     afe:	61 f0       	breq	.+24     	; 0xb18 <vfprintf+0x92>
     b00:	80 33       	cpi	r24, 0x30	; 48
     b02:	69 f4       	brne	.+26     	; 0xb1e <vfprintf+0x98>
     b04:	23 2d       	mov	r18, r3
     b06:	21 60       	ori	r18, 0x01	; 1
     b08:	16 c0       	rjmp	.+44     	; 0xb36 <vfprintf+0xb0>
     b0a:	83 2d       	mov	r24, r3
     b0c:	82 60       	ori	r24, 0x02	; 2
     b0e:	38 2e       	mov	r3, r24
     b10:	e3 2d       	mov	r30, r3
     b12:	e4 60       	ori	r30, 0x04	; 4
     b14:	3e 2e       	mov	r3, r30
     b16:	2a c0       	rjmp	.+84     	; 0xb6c <vfprintf+0xe6>
     b18:	f3 2d       	mov	r31, r3
     b1a:	f8 60       	ori	r31, 0x08	; 8
     b1c:	1d c0       	rjmp	.+58     	; 0xb58 <vfprintf+0xd2>
     b1e:	37 fc       	sbrc	r3, 7
     b20:	2d c0       	rjmp	.+90     	; 0xb7c <vfprintf+0xf6>
     b22:	20 ed       	ldi	r18, 0xD0	; 208
     b24:	28 0f       	add	r18, r24
     b26:	2a 30       	cpi	r18, 0x0A	; 10
     b28:	40 f0       	brcs	.+16     	; 0xb3a <vfprintf+0xb4>
     b2a:	8e 32       	cpi	r24, 0x2E	; 46
     b2c:	b9 f4       	brne	.+46     	; 0xb5c <vfprintf+0xd6>
     b2e:	36 fc       	sbrc	r3, 6
     b30:	81 c1       	rjmp	.+770    	; 0xe34 <vfprintf+0x3ae>
     b32:	23 2d       	mov	r18, r3
     b34:	20 64       	ori	r18, 0x40	; 64
     b36:	32 2e       	mov	r3, r18
     b38:	19 c0       	rjmp	.+50     	; 0xb6c <vfprintf+0xe6>
     b3a:	36 fe       	sbrs	r3, 6
     b3c:	06 c0       	rjmp	.+12     	; 0xb4a <vfprintf+0xc4>
     b3e:	8a e0       	ldi	r24, 0x0A	; 10
     b40:	98 9e       	mul	r9, r24
     b42:	20 0d       	add	r18, r0
     b44:	11 24       	eor	r1, r1
     b46:	92 2e       	mov	r9, r18
     b48:	11 c0       	rjmp	.+34     	; 0xb6c <vfprintf+0xe6>
     b4a:	ea e0       	ldi	r30, 0x0A	; 10
     b4c:	2e 9e       	mul	r2, r30
     b4e:	20 0d       	add	r18, r0
     b50:	11 24       	eor	r1, r1
     b52:	22 2e       	mov	r2, r18
     b54:	f3 2d       	mov	r31, r3
     b56:	f0 62       	ori	r31, 0x20	; 32
     b58:	3f 2e       	mov	r3, r31
     b5a:	08 c0       	rjmp	.+16     	; 0xb6c <vfprintf+0xe6>
     b5c:	8c 36       	cpi	r24, 0x6C	; 108
     b5e:	21 f4       	brne	.+8      	; 0xb68 <vfprintf+0xe2>
     b60:	83 2d       	mov	r24, r3
     b62:	80 68       	ori	r24, 0x80	; 128
     b64:	38 2e       	mov	r3, r24
     b66:	02 c0       	rjmp	.+4      	; 0xb6c <vfprintf+0xe6>
     b68:	88 36       	cpi	r24, 0x68	; 104
     b6a:	41 f4       	brne	.+16     	; 0xb7c <vfprintf+0xf6>
     b6c:	f7 01       	movw	r30, r14
     b6e:	93 fd       	sbrc	r25, 3
     b70:	85 91       	lpm	r24, Z+
     b72:	93 ff       	sbrs	r25, 3
     b74:	81 91       	ld	r24, Z+
     b76:	7f 01       	movw	r14, r30
     b78:	81 11       	cpse	r24, r1
     b7a:	b3 cf       	rjmp	.-154    	; 0xae2 <vfprintf+0x5c>
     b7c:	98 2f       	mov	r25, r24
     b7e:	9f 7d       	andi	r25, 0xDF	; 223
     b80:	95 54       	subi	r25, 0x45	; 69
     b82:	93 30       	cpi	r25, 0x03	; 3
     b84:	28 f4       	brcc	.+10     	; 0xb90 <vfprintf+0x10a>
     b86:	0c 5f       	subi	r16, 0xFC	; 252
     b88:	1f 4f       	sbci	r17, 0xFF	; 255
     b8a:	9f e3       	ldi	r25, 0x3F	; 63
     b8c:	99 83       	std	Y+1, r25	; 0x01
     b8e:	0d c0       	rjmp	.+26     	; 0xbaa <vfprintf+0x124>
     b90:	83 36       	cpi	r24, 0x63	; 99
     b92:	31 f0       	breq	.+12     	; 0xba0 <vfprintf+0x11a>
     b94:	83 37       	cpi	r24, 0x73	; 115
     b96:	71 f0       	breq	.+28     	; 0xbb4 <vfprintf+0x12e>
     b98:	83 35       	cpi	r24, 0x53	; 83
     b9a:	09 f0       	breq	.+2      	; 0xb9e <vfprintf+0x118>
     b9c:	59 c0       	rjmp	.+178    	; 0xc50 <vfprintf+0x1ca>
     b9e:	21 c0       	rjmp	.+66     	; 0xbe2 <vfprintf+0x15c>
     ba0:	f8 01       	movw	r30, r16
     ba2:	80 81       	ld	r24, Z
     ba4:	89 83       	std	Y+1, r24	; 0x01
     ba6:	0e 5f       	subi	r16, 0xFE	; 254
     ba8:	1f 4f       	sbci	r17, 0xFF	; 255
     baa:	88 24       	eor	r8, r8
     bac:	83 94       	inc	r8
     bae:	91 2c       	mov	r9, r1
     bb0:	53 01       	movw	r10, r6
     bb2:	13 c0       	rjmp	.+38     	; 0xbda <vfprintf+0x154>
     bb4:	28 01       	movw	r4, r16
     bb6:	f2 e0       	ldi	r31, 0x02	; 2
     bb8:	4f 0e       	add	r4, r31
     bba:	51 1c       	adc	r5, r1
     bbc:	f8 01       	movw	r30, r16
     bbe:	a0 80       	ld	r10, Z
     bc0:	b1 80       	ldd	r11, Z+1	; 0x01
     bc2:	36 fe       	sbrs	r3, 6
     bc4:	03 c0       	rjmp	.+6      	; 0xbcc <vfprintf+0x146>
     bc6:	69 2d       	mov	r22, r9
     bc8:	70 e0       	ldi	r23, 0x00	; 0
     bca:	02 c0       	rjmp	.+4      	; 0xbd0 <vfprintf+0x14a>
     bcc:	6f ef       	ldi	r22, 0xFF	; 255
     bce:	7f ef       	ldi	r23, 0xFF	; 255
     bd0:	c5 01       	movw	r24, r10
     bd2:	0e 94 61 09 	call	0x12c2	; 0x12c2 <strnlen>
     bd6:	4c 01       	movw	r8, r24
     bd8:	82 01       	movw	r16, r4
     bda:	f3 2d       	mov	r31, r3
     bdc:	ff 77       	andi	r31, 0x7F	; 127
     bde:	3f 2e       	mov	r3, r31
     be0:	16 c0       	rjmp	.+44     	; 0xc0e <vfprintf+0x188>
     be2:	28 01       	movw	r4, r16
     be4:	22 e0       	ldi	r18, 0x02	; 2
     be6:	42 0e       	add	r4, r18
     be8:	51 1c       	adc	r5, r1
     bea:	f8 01       	movw	r30, r16
     bec:	a0 80       	ld	r10, Z
     bee:	b1 80       	ldd	r11, Z+1	; 0x01
     bf0:	36 fe       	sbrs	r3, 6
     bf2:	03 c0       	rjmp	.+6      	; 0xbfa <vfprintf+0x174>
     bf4:	69 2d       	mov	r22, r9
     bf6:	70 e0       	ldi	r23, 0x00	; 0
     bf8:	02 c0       	rjmp	.+4      	; 0xbfe <vfprintf+0x178>
     bfa:	6f ef       	ldi	r22, 0xFF	; 255
     bfc:	7f ef       	ldi	r23, 0xFF	; 255
     bfe:	c5 01       	movw	r24, r10
     c00:	0e 94 56 09 	call	0x12ac	; 0x12ac <strnlen_P>
     c04:	4c 01       	movw	r8, r24
     c06:	f3 2d       	mov	r31, r3
     c08:	f0 68       	ori	r31, 0x80	; 128
     c0a:	3f 2e       	mov	r3, r31
     c0c:	82 01       	movw	r16, r4
     c0e:	33 fc       	sbrc	r3, 3
     c10:	1b c0       	rjmp	.+54     	; 0xc48 <vfprintf+0x1c2>
     c12:	82 2d       	mov	r24, r2
     c14:	90 e0       	ldi	r25, 0x00	; 0
     c16:	88 16       	cp	r8, r24
     c18:	99 06       	cpc	r9, r25
     c1a:	b0 f4       	brcc	.+44     	; 0xc48 <vfprintf+0x1c2>
     c1c:	b6 01       	movw	r22, r12
     c1e:	80 e2       	ldi	r24, 0x20	; 32
     c20:	90 e0       	ldi	r25, 0x00	; 0
     c22:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <fputc>
     c26:	2a 94       	dec	r2
     c28:	f4 cf       	rjmp	.-24     	; 0xc12 <vfprintf+0x18c>
     c2a:	f5 01       	movw	r30, r10
     c2c:	37 fc       	sbrc	r3, 7
     c2e:	85 91       	lpm	r24, Z+
     c30:	37 fe       	sbrs	r3, 7
     c32:	81 91       	ld	r24, Z+
     c34:	5f 01       	movw	r10, r30
     c36:	b6 01       	movw	r22, r12
     c38:	90 e0       	ldi	r25, 0x00	; 0
     c3a:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <fputc>
     c3e:	21 10       	cpse	r2, r1
     c40:	2a 94       	dec	r2
     c42:	21 e0       	ldi	r18, 0x01	; 1
     c44:	82 1a       	sub	r8, r18
     c46:	91 08       	sbc	r9, r1
     c48:	81 14       	cp	r8, r1
     c4a:	91 04       	cpc	r9, r1
     c4c:	71 f7       	brne	.-36     	; 0xc2a <vfprintf+0x1a4>
     c4e:	e8 c0       	rjmp	.+464    	; 0xe20 <vfprintf+0x39a>
     c50:	84 36       	cpi	r24, 0x64	; 100
     c52:	11 f0       	breq	.+4      	; 0xc58 <vfprintf+0x1d2>
     c54:	89 36       	cpi	r24, 0x69	; 105
     c56:	41 f5       	brne	.+80     	; 0xca8 <vfprintf+0x222>
     c58:	f8 01       	movw	r30, r16
     c5a:	37 fe       	sbrs	r3, 7
     c5c:	07 c0       	rjmp	.+14     	; 0xc6c <vfprintf+0x1e6>
     c5e:	60 81       	ld	r22, Z
     c60:	71 81       	ldd	r23, Z+1	; 0x01
     c62:	82 81       	ldd	r24, Z+2	; 0x02
     c64:	93 81       	ldd	r25, Z+3	; 0x03
     c66:	0c 5f       	subi	r16, 0xFC	; 252
     c68:	1f 4f       	sbci	r17, 0xFF	; 255
     c6a:	08 c0       	rjmp	.+16     	; 0xc7c <vfprintf+0x1f6>
     c6c:	60 81       	ld	r22, Z
     c6e:	71 81       	ldd	r23, Z+1	; 0x01
     c70:	07 2e       	mov	r0, r23
     c72:	00 0c       	add	r0, r0
     c74:	88 0b       	sbc	r24, r24
     c76:	99 0b       	sbc	r25, r25
     c78:	0e 5f       	subi	r16, 0xFE	; 254
     c7a:	1f 4f       	sbci	r17, 0xFF	; 255
     c7c:	f3 2d       	mov	r31, r3
     c7e:	ff 76       	andi	r31, 0x6F	; 111
     c80:	3f 2e       	mov	r3, r31
     c82:	97 ff       	sbrs	r25, 7
     c84:	09 c0       	rjmp	.+18     	; 0xc98 <vfprintf+0x212>
     c86:	90 95       	com	r25
     c88:	80 95       	com	r24
     c8a:	70 95       	com	r23
     c8c:	61 95       	neg	r22
     c8e:	7f 4f       	sbci	r23, 0xFF	; 255
     c90:	8f 4f       	sbci	r24, 0xFF	; 255
     c92:	9f 4f       	sbci	r25, 0xFF	; 255
     c94:	f0 68       	ori	r31, 0x80	; 128
     c96:	3f 2e       	mov	r3, r31
     c98:	2a e0       	ldi	r18, 0x0A	; 10
     c9a:	30 e0       	ldi	r19, 0x00	; 0
     c9c:	a3 01       	movw	r20, r6
     c9e:	0e 94 a8 09 	call	0x1350	; 0x1350 <__ultoa_invert>
     ca2:	88 2e       	mov	r8, r24
     ca4:	86 18       	sub	r8, r6
     ca6:	45 c0       	rjmp	.+138    	; 0xd32 <vfprintf+0x2ac>
     ca8:	85 37       	cpi	r24, 0x75	; 117
     caa:	31 f4       	brne	.+12     	; 0xcb8 <vfprintf+0x232>
     cac:	23 2d       	mov	r18, r3
     cae:	2f 7e       	andi	r18, 0xEF	; 239
     cb0:	b2 2e       	mov	r11, r18
     cb2:	2a e0       	ldi	r18, 0x0A	; 10
     cb4:	30 e0       	ldi	r19, 0x00	; 0
     cb6:	25 c0       	rjmp	.+74     	; 0xd02 <vfprintf+0x27c>
     cb8:	93 2d       	mov	r25, r3
     cba:	99 7f       	andi	r25, 0xF9	; 249
     cbc:	b9 2e       	mov	r11, r25
     cbe:	8f 36       	cpi	r24, 0x6F	; 111
     cc0:	c1 f0       	breq	.+48     	; 0xcf2 <vfprintf+0x26c>
     cc2:	18 f4       	brcc	.+6      	; 0xcca <vfprintf+0x244>
     cc4:	88 35       	cpi	r24, 0x58	; 88
     cc6:	79 f0       	breq	.+30     	; 0xce6 <vfprintf+0x260>
     cc8:	b5 c0       	rjmp	.+362    	; 0xe34 <vfprintf+0x3ae>
     cca:	80 37       	cpi	r24, 0x70	; 112
     ccc:	19 f0       	breq	.+6      	; 0xcd4 <vfprintf+0x24e>
     cce:	88 37       	cpi	r24, 0x78	; 120
     cd0:	21 f0       	breq	.+8      	; 0xcda <vfprintf+0x254>
     cd2:	b0 c0       	rjmp	.+352    	; 0xe34 <vfprintf+0x3ae>
     cd4:	e9 2f       	mov	r30, r25
     cd6:	e0 61       	ori	r30, 0x10	; 16
     cd8:	be 2e       	mov	r11, r30
     cda:	b4 fe       	sbrs	r11, 4
     cdc:	0d c0       	rjmp	.+26     	; 0xcf8 <vfprintf+0x272>
     cde:	fb 2d       	mov	r31, r11
     ce0:	f4 60       	ori	r31, 0x04	; 4
     ce2:	bf 2e       	mov	r11, r31
     ce4:	09 c0       	rjmp	.+18     	; 0xcf8 <vfprintf+0x272>
     ce6:	34 fe       	sbrs	r3, 4
     ce8:	0a c0       	rjmp	.+20     	; 0xcfe <vfprintf+0x278>
     cea:	29 2f       	mov	r18, r25
     cec:	26 60       	ori	r18, 0x06	; 6
     cee:	b2 2e       	mov	r11, r18
     cf0:	06 c0       	rjmp	.+12     	; 0xcfe <vfprintf+0x278>
     cf2:	28 e0       	ldi	r18, 0x08	; 8
     cf4:	30 e0       	ldi	r19, 0x00	; 0
     cf6:	05 c0       	rjmp	.+10     	; 0xd02 <vfprintf+0x27c>
     cf8:	20 e1       	ldi	r18, 0x10	; 16
     cfa:	30 e0       	ldi	r19, 0x00	; 0
     cfc:	02 c0       	rjmp	.+4      	; 0xd02 <vfprintf+0x27c>
     cfe:	20 e1       	ldi	r18, 0x10	; 16
     d00:	32 e0       	ldi	r19, 0x02	; 2
     d02:	f8 01       	movw	r30, r16
     d04:	b7 fe       	sbrs	r11, 7
     d06:	07 c0       	rjmp	.+14     	; 0xd16 <vfprintf+0x290>
     d08:	60 81       	ld	r22, Z
     d0a:	71 81       	ldd	r23, Z+1	; 0x01
     d0c:	82 81       	ldd	r24, Z+2	; 0x02
     d0e:	93 81       	ldd	r25, Z+3	; 0x03
     d10:	0c 5f       	subi	r16, 0xFC	; 252
     d12:	1f 4f       	sbci	r17, 0xFF	; 255
     d14:	06 c0       	rjmp	.+12     	; 0xd22 <vfprintf+0x29c>
     d16:	60 81       	ld	r22, Z
     d18:	71 81       	ldd	r23, Z+1	; 0x01
     d1a:	80 e0       	ldi	r24, 0x00	; 0
     d1c:	90 e0       	ldi	r25, 0x00	; 0
     d1e:	0e 5f       	subi	r16, 0xFE	; 254
     d20:	1f 4f       	sbci	r17, 0xFF	; 255
     d22:	a3 01       	movw	r20, r6
     d24:	0e 94 a8 09 	call	0x1350	; 0x1350 <__ultoa_invert>
     d28:	88 2e       	mov	r8, r24
     d2a:	86 18       	sub	r8, r6
     d2c:	fb 2d       	mov	r31, r11
     d2e:	ff 77       	andi	r31, 0x7F	; 127
     d30:	3f 2e       	mov	r3, r31
     d32:	36 fe       	sbrs	r3, 6
     d34:	0d c0       	rjmp	.+26     	; 0xd50 <vfprintf+0x2ca>
     d36:	23 2d       	mov	r18, r3
     d38:	2e 7f       	andi	r18, 0xFE	; 254
     d3a:	a2 2e       	mov	r10, r18
     d3c:	89 14       	cp	r8, r9
     d3e:	58 f4       	brcc	.+22     	; 0xd56 <vfprintf+0x2d0>
     d40:	34 fe       	sbrs	r3, 4
     d42:	0b c0       	rjmp	.+22     	; 0xd5a <vfprintf+0x2d4>
     d44:	32 fc       	sbrc	r3, 2
     d46:	09 c0       	rjmp	.+18     	; 0xd5a <vfprintf+0x2d4>
     d48:	83 2d       	mov	r24, r3
     d4a:	8e 7e       	andi	r24, 0xEE	; 238
     d4c:	a8 2e       	mov	r10, r24
     d4e:	05 c0       	rjmp	.+10     	; 0xd5a <vfprintf+0x2d4>
     d50:	b8 2c       	mov	r11, r8
     d52:	a3 2c       	mov	r10, r3
     d54:	03 c0       	rjmp	.+6      	; 0xd5c <vfprintf+0x2d6>
     d56:	b8 2c       	mov	r11, r8
     d58:	01 c0       	rjmp	.+2      	; 0xd5c <vfprintf+0x2d6>
     d5a:	b9 2c       	mov	r11, r9
     d5c:	a4 fe       	sbrs	r10, 4
     d5e:	0f c0       	rjmp	.+30     	; 0xd7e <vfprintf+0x2f8>
     d60:	fe 01       	movw	r30, r28
     d62:	e8 0d       	add	r30, r8
     d64:	f1 1d       	adc	r31, r1
     d66:	80 81       	ld	r24, Z
     d68:	80 33       	cpi	r24, 0x30	; 48
     d6a:	21 f4       	brne	.+8      	; 0xd74 <vfprintf+0x2ee>
     d6c:	9a 2d       	mov	r25, r10
     d6e:	99 7e       	andi	r25, 0xE9	; 233
     d70:	a9 2e       	mov	r10, r25
     d72:	09 c0       	rjmp	.+18     	; 0xd86 <vfprintf+0x300>
     d74:	a2 fe       	sbrs	r10, 2
     d76:	06 c0       	rjmp	.+12     	; 0xd84 <vfprintf+0x2fe>
     d78:	b3 94       	inc	r11
     d7a:	b3 94       	inc	r11
     d7c:	04 c0       	rjmp	.+8      	; 0xd86 <vfprintf+0x300>
     d7e:	8a 2d       	mov	r24, r10
     d80:	86 78       	andi	r24, 0x86	; 134
     d82:	09 f0       	breq	.+2      	; 0xd86 <vfprintf+0x300>
     d84:	b3 94       	inc	r11
     d86:	a3 fc       	sbrc	r10, 3
     d88:	11 c0       	rjmp	.+34     	; 0xdac <vfprintf+0x326>
     d8a:	a0 fe       	sbrs	r10, 0
     d8c:	06 c0       	rjmp	.+12     	; 0xd9a <vfprintf+0x314>
     d8e:	b2 14       	cp	r11, r2
     d90:	88 f4       	brcc	.+34     	; 0xdb4 <vfprintf+0x32e>
     d92:	28 0c       	add	r2, r8
     d94:	92 2c       	mov	r9, r2
     d96:	9b 18       	sub	r9, r11
     d98:	0e c0       	rjmp	.+28     	; 0xdb6 <vfprintf+0x330>
     d9a:	b2 14       	cp	r11, r2
     d9c:	60 f4       	brcc	.+24     	; 0xdb6 <vfprintf+0x330>
     d9e:	b6 01       	movw	r22, r12
     da0:	80 e2       	ldi	r24, 0x20	; 32
     da2:	90 e0       	ldi	r25, 0x00	; 0
     da4:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <fputc>
     da8:	b3 94       	inc	r11
     daa:	f7 cf       	rjmp	.-18     	; 0xd9a <vfprintf+0x314>
     dac:	b2 14       	cp	r11, r2
     dae:	18 f4       	brcc	.+6      	; 0xdb6 <vfprintf+0x330>
     db0:	2b 18       	sub	r2, r11
     db2:	02 c0       	rjmp	.+4      	; 0xdb8 <vfprintf+0x332>
     db4:	98 2c       	mov	r9, r8
     db6:	21 2c       	mov	r2, r1
     db8:	a4 fe       	sbrs	r10, 4
     dba:	10 c0       	rjmp	.+32     	; 0xddc <vfprintf+0x356>
     dbc:	b6 01       	movw	r22, r12
     dbe:	80 e3       	ldi	r24, 0x30	; 48
     dc0:	90 e0       	ldi	r25, 0x00	; 0
     dc2:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <fputc>
     dc6:	a2 fe       	sbrs	r10, 2
     dc8:	17 c0       	rjmp	.+46     	; 0xdf8 <vfprintf+0x372>
     dca:	a1 fc       	sbrc	r10, 1
     dcc:	03 c0       	rjmp	.+6      	; 0xdd4 <vfprintf+0x34e>
     dce:	88 e7       	ldi	r24, 0x78	; 120
     dd0:	90 e0       	ldi	r25, 0x00	; 0
     dd2:	02 c0       	rjmp	.+4      	; 0xdd8 <vfprintf+0x352>
     dd4:	88 e5       	ldi	r24, 0x58	; 88
     dd6:	90 e0       	ldi	r25, 0x00	; 0
     dd8:	b6 01       	movw	r22, r12
     dda:	0c c0       	rjmp	.+24     	; 0xdf4 <vfprintf+0x36e>
     ddc:	8a 2d       	mov	r24, r10
     dde:	86 78       	andi	r24, 0x86	; 134
     de0:	59 f0       	breq	.+22     	; 0xdf8 <vfprintf+0x372>
     de2:	a1 fe       	sbrs	r10, 1
     de4:	02 c0       	rjmp	.+4      	; 0xdea <vfprintf+0x364>
     de6:	8b e2       	ldi	r24, 0x2B	; 43
     de8:	01 c0       	rjmp	.+2      	; 0xdec <vfprintf+0x366>
     dea:	80 e2       	ldi	r24, 0x20	; 32
     dec:	a7 fc       	sbrc	r10, 7
     dee:	8d e2       	ldi	r24, 0x2D	; 45
     df0:	b6 01       	movw	r22, r12
     df2:	90 e0       	ldi	r25, 0x00	; 0
     df4:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <fputc>
     df8:	89 14       	cp	r8, r9
     dfa:	38 f4       	brcc	.+14     	; 0xe0a <vfprintf+0x384>
     dfc:	b6 01       	movw	r22, r12
     dfe:	80 e3       	ldi	r24, 0x30	; 48
     e00:	90 e0       	ldi	r25, 0x00	; 0
     e02:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <fputc>
     e06:	9a 94       	dec	r9
     e08:	f7 cf       	rjmp	.-18     	; 0xdf8 <vfprintf+0x372>
     e0a:	8a 94       	dec	r8
     e0c:	f3 01       	movw	r30, r6
     e0e:	e8 0d       	add	r30, r8
     e10:	f1 1d       	adc	r31, r1
     e12:	80 81       	ld	r24, Z
     e14:	b6 01       	movw	r22, r12
     e16:	90 e0       	ldi	r25, 0x00	; 0
     e18:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <fputc>
     e1c:	81 10       	cpse	r8, r1
     e1e:	f5 cf       	rjmp	.-22     	; 0xe0a <vfprintf+0x384>
     e20:	22 20       	and	r2, r2
     e22:	09 f4       	brne	.+2      	; 0xe26 <vfprintf+0x3a0>
     e24:	42 ce       	rjmp	.-892    	; 0xaaa <vfprintf+0x24>
     e26:	b6 01       	movw	r22, r12
     e28:	80 e2       	ldi	r24, 0x20	; 32
     e2a:	90 e0       	ldi	r25, 0x00	; 0
     e2c:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <fputc>
     e30:	2a 94       	dec	r2
     e32:	f6 cf       	rjmp	.-20     	; 0xe20 <vfprintf+0x39a>
     e34:	f6 01       	movw	r30, r12
     e36:	86 81       	ldd	r24, Z+6	; 0x06
     e38:	97 81       	ldd	r25, Z+7	; 0x07
     e3a:	02 c0       	rjmp	.+4      	; 0xe40 <vfprintf+0x3ba>
     e3c:	8f ef       	ldi	r24, 0xFF	; 255
     e3e:	9f ef       	ldi	r25, 0xFF	; 255
     e40:	2b 96       	adiw	r28, 0x0b	; 11
     e42:	e2 e1       	ldi	r30, 0x12	; 18
     e44:	0c 94 22 0a 	jmp	0x1444	; 0x1444 <__epilogue_restores__>

00000e48 <dtoa_prf>:
     e48:	a9 e0       	ldi	r26, 0x09	; 9
     e4a:	b0 e0       	ldi	r27, 0x00	; 0
     e4c:	ea e2       	ldi	r30, 0x2A	; 42
     e4e:	f7 e0       	ldi	r31, 0x07	; 7
     e50:	0c 94 0c 0a 	jmp	0x1418	; 0x1418 <__prologue_saves__+0xc>
     e54:	6a 01       	movw	r12, r20
     e56:	12 2f       	mov	r17, r18
     e58:	b0 2e       	mov	r11, r16
     e5a:	2b e3       	ldi	r18, 0x3B	; 59
     e5c:	20 17       	cp	r18, r16
     e5e:	20 f0       	brcs	.+8      	; 0xe68 <dtoa_prf+0x20>
     e60:	ff 24       	eor	r15, r15
     e62:	f3 94       	inc	r15
     e64:	f0 0e       	add	r15, r16
     e66:	02 c0       	rjmp	.+4      	; 0xe6c <dtoa_prf+0x24>
     e68:	2c e3       	ldi	r18, 0x3C	; 60
     e6a:	f2 2e       	mov	r15, r18
     e6c:	0f 2d       	mov	r16, r15
     e6e:	27 e0       	ldi	r18, 0x07	; 7
     e70:	ae 01       	movw	r20, r28
     e72:	4f 5f       	subi	r20, 0xFF	; 255
     e74:	5f 4f       	sbci	r21, 0xFF	; 255
     e76:	0e 94 7e 08 	call	0x10fc	; 0x10fc <__ftoa_engine>
     e7a:	bc 01       	movw	r22, r24
     e7c:	49 81       	ldd	r20, Y+1	; 0x01
     e7e:	84 2f       	mov	r24, r20
     e80:	89 70       	andi	r24, 0x09	; 9
     e82:	81 30       	cpi	r24, 0x01	; 1
     e84:	31 f0       	breq	.+12     	; 0xe92 <dtoa_prf+0x4a>
     e86:	e1 fc       	sbrc	r14, 1
     e88:	06 c0       	rjmp	.+12     	; 0xe96 <dtoa_prf+0x4e>
     e8a:	e0 fe       	sbrs	r14, 0
     e8c:	06 c0       	rjmp	.+12     	; 0xe9a <dtoa_prf+0x52>
     e8e:	90 e2       	ldi	r25, 0x20	; 32
     e90:	05 c0       	rjmp	.+10     	; 0xe9c <dtoa_prf+0x54>
     e92:	9d e2       	ldi	r25, 0x2D	; 45
     e94:	03 c0       	rjmp	.+6      	; 0xe9c <dtoa_prf+0x54>
     e96:	9b e2       	ldi	r25, 0x2B	; 43
     e98:	01 c0       	rjmp	.+2      	; 0xe9c <dtoa_prf+0x54>
     e9a:	90 e0       	ldi	r25, 0x00	; 0
     e9c:	5e 2d       	mov	r21, r14
     e9e:	50 71       	andi	r21, 0x10	; 16
     ea0:	43 ff       	sbrs	r20, 3
     ea2:	3c c0       	rjmp	.+120    	; 0xf1c <dtoa_prf+0xd4>
     ea4:	91 11       	cpse	r25, r1
     ea6:	02 c0       	rjmp	.+4      	; 0xeac <dtoa_prf+0x64>
     ea8:	83 e0       	ldi	r24, 0x03	; 3
     eaa:	01 c0       	rjmp	.+2      	; 0xeae <dtoa_prf+0x66>
     eac:	84 e0       	ldi	r24, 0x04	; 4
     eae:	81 17       	cp	r24, r17
     eb0:	18 f4       	brcc	.+6      	; 0xeb8 <dtoa_prf+0x70>
     eb2:	21 2f       	mov	r18, r17
     eb4:	28 1b       	sub	r18, r24
     eb6:	01 c0       	rjmp	.+2      	; 0xeba <dtoa_prf+0x72>
     eb8:	20 e0       	ldi	r18, 0x00	; 0
     eba:	51 11       	cpse	r21, r1
     ebc:	0b c0       	rjmp	.+22     	; 0xed4 <dtoa_prf+0x8c>
     ebe:	f6 01       	movw	r30, r12
     ec0:	82 2f       	mov	r24, r18
     ec2:	30 e2       	ldi	r19, 0x20	; 32
     ec4:	88 23       	and	r24, r24
     ec6:	19 f0       	breq	.+6      	; 0xece <dtoa_prf+0x86>
     ec8:	31 93       	st	Z+, r19
     eca:	81 50       	subi	r24, 0x01	; 1
     ecc:	fb cf       	rjmp	.-10     	; 0xec4 <dtoa_prf+0x7c>
     ece:	c2 0e       	add	r12, r18
     ed0:	d1 1c       	adc	r13, r1
     ed2:	20 e0       	ldi	r18, 0x00	; 0
     ed4:	99 23       	and	r25, r25
     ed6:	29 f0       	breq	.+10     	; 0xee2 <dtoa_prf+0x9a>
     ed8:	d6 01       	movw	r26, r12
     eda:	9c 93       	st	X, r25
     edc:	f6 01       	movw	r30, r12
     ede:	31 96       	adiw	r30, 0x01	; 1
     ee0:	6f 01       	movw	r12, r30
     ee2:	c6 01       	movw	r24, r12
     ee4:	03 96       	adiw	r24, 0x03	; 3
     ee6:	e2 fe       	sbrs	r14, 2
     ee8:	0a c0       	rjmp	.+20     	; 0xefe <dtoa_prf+0xb6>
     eea:	3e e4       	ldi	r19, 0x4E	; 78
     eec:	d6 01       	movw	r26, r12
     eee:	3c 93       	st	X, r19
     ef0:	41 e4       	ldi	r20, 0x41	; 65
     ef2:	11 96       	adiw	r26, 0x01	; 1
     ef4:	4c 93       	st	X, r20
     ef6:	11 97       	sbiw	r26, 0x01	; 1
     ef8:	12 96       	adiw	r26, 0x02	; 2
     efa:	3c 93       	st	X, r19
     efc:	06 c0       	rjmp	.+12     	; 0xf0a <dtoa_prf+0xc2>
     efe:	3e e6       	ldi	r19, 0x6E	; 110
     f00:	f6 01       	movw	r30, r12
     f02:	30 83       	st	Z, r19
     f04:	41 e6       	ldi	r20, 0x61	; 97
     f06:	41 83       	std	Z+1, r20	; 0x01
     f08:	32 83       	std	Z+2, r19	; 0x02
     f0a:	fc 01       	movw	r30, r24
     f0c:	32 2f       	mov	r19, r18
     f0e:	40 e2       	ldi	r20, 0x20	; 32
     f10:	33 23       	and	r19, r19
     f12:	09 f4       	brne	.+2      	; 0xf16 <dtoa_prf+0xce>
     f14:	42 c0       	rjmp	.+132    	; 0xf9a <dtoa_prf+0x152>
     f16:	41 93       	st	Z+, r20
     f18:	31 50       	subi	r19, 0x01	; 1
     f1a:	fa cf       	rjmp	.-12     	; 0xf10 <dtoa_prf+0xc8>
     f1c:	42 ff       	sbrs	r20, 2
     f1e:	44 c0       	rjmp	.+136    	; 0xfa8 <dtoa_prf+0x160>
     f20:	91 11       	cpse	r25, r1
     f22:	02 c0       	rjmp	.+4      	; 0xf28 <dtoa_prf+0xe0>
     f24:	83 e0       	ldi	r24, 0x03	; 3
     f26:	01 c0       	rjmp	.+2      	; 0xf2a <dtoa_prf+0xe2>
     f28:	84 e0       	ldi	r24, 0x04	; 4
     f2a:	81 17       	cp	r24, r17
     f2c:	18 f4       	brcc	.+6      	; 0xf34 <dtoa_prf+0xec>
     f2e:	21 2f       	mov	r18, r17
     f30:	28 1b       	sub	r18, r24
     f32:	01 c0       	rjmp	.+2      	; 0xf36 <dtoa_prf+0xee>
     f34:	20 e0       	ldi	r18, 0x00	; 0
     f36:	51 11       	cpse	r21, r1
     f38:	0b c0       	rjmp	.+22     	; 0xf50 <dtoa_prf+0x108>
     f3a:	f6 01       	movw	r30, r12
     f3c:	82 2f       	mov	r24, r18
     f3e:	30 e2       	ldi	r19, 0x20	; 32
     f40:	88 23       	and	r24, r24
     f42:	19 f0       	breq	.+6      	; 0xf4a <dtoa_prf+0x102>
     f44:	31 93       	st	Z+, r19
     f46:	81 50       	subi	r24, 0x01	; 1
     f48:	fb cf       	rjmp	.-10     	; 0xf40 <dtoa_prf+0xf8>
     f4a:	c2 0e       	add	r12, r18
     f4c:	d1 1c       	adc	r13, r1
     f4e:	20 e0       	ldi	r18, 0x00	; 0
     f50:	99 23       	and	r25, r25
     f52:	29 f0       	breq	.+10     	; 0xf5e <dtoa_prf+0x116>
     f54:	d6 01       	movw	r26, r12
     f56:	9c 93       	st	X, r25
     f58:	f6 01       	movw	r30, r12
     f5a:	31 96       	adiw	r30, 0x01	; 1
     f5c:	6f 01       	movw	r12, r30
     f5e:	c6 01       	movw	r24, r12
     f60:	03 96       	adiw	r24, 0x03	; 3
     f62:	e2 fe       	sbrs	r14, 2
     f64:	0b c0       	rjmp	.+22     	; 0xf7c <dtoa_prf+0x134>
     f66:	39 e4       	ldi	r19, 0x49	; 73
     f68:	d6 01       	movw	r26, r12
     f6a:	3c 93       	st	X, r19
     f6c:	3e e4       	ldi	r19, 0x4E	; 78
     f6e:	11 96       	adiw	r26, 0x01	; 1
     f70:	3c 93       	st	X, r19
     f72:	11 97       	sbiw	r26, 0x01	; 1
     f74:	36 e4       	ldi	r19, 0x46	; 70
     f76:	12 96       	adiw	r26, 0x02	; 2
     f78:	3c 93       	st	X, r19
     f7a:	07 c0       	rjmp	.+14     	; 0xf8a <dtoa_prf+0x142>
     f7c:	39 e6       	ldi	r19, 0x69	; 105
     f7e:	f6 01       	movw	r30, r12
     f80:	30 83       	st	Z, r19
     f82:	3e e6       	ldi	r19, 0x6E	; 110
     f84:	31 83       	std	Z+1, r19	; 0x01
     f86:	36 e6       	ldi	r19, 0x66	; 102
     f88:	32 83       	std	Z+2, r19	; 0x02
     f8a:	fc 01       	movw	r30, r24
     f8c:	32 2f       	mov	r19, r18
     f8e:	40 e2       	ldi	r20, 0x20	; 32
     f90:	33 23       	and	r19, r19
     f92:	19 f0       	breq	.+6      	; 0xf9a <dtoa_prf+0x152>
     f94:	41 93       	st	Z+, r20
     f96:	31 50       	subi	r19, 0x01	; 1
     f98:	fb cf       	rjmp	.-10     	; 0xf90 <dtoa_prf+0x148>
     f9a:	fc 01       	movw	r30, r24
     f9c:	e2 0f       	add	r30, r18
     f9e:	f1 1d       	adc	r31, r1
     fa0:	10 82       	st	Z, r1
     fa2:	8e ef       	ldi	r24, 0xFE	; 254
     fa4:	9f ef       	ldi	r25, 0xFF	; 255
     fa6:	a6 c0       	rjmp	.+332    	; 0x10f4 <dtoa_prf+0x2ac>
     fa8:	21 e0       	ldi	r18, 0x01	; 1
     faa:	30 e0       	ldi	r19, 0x00	; 0
     fac:	91 11       	cpse	r25, r1
     fae:	02 c0       	rjmp	.+4      	; 0xfb4 <dtoa_prf+0x16c>
     fb0:	20 e0       	ldi	r18, 0x00	; 0
     fb2:	30 e0       	ldi	r19, 0x00	; 0
     fb4:	16 16       	cp	r1, r22
     fb6:	17 06       	cpc	r1, r23
     fb8:	1c f4       	brge	.+6      	; 0xfc0 <dtoa_prf+0x178>
     fba:	fb 01       	movw	r30, r22
     fbc:	31 96       	adiw	r30, 0x01	; 1
     fbe:	02 c0       	rjmp	.+4      	; 0xfc4 <dtoa_prf+0x17c>
     fc0:	e1 e0       	ldi	r30, 0x01	; 1
     fc2:	f0 e0       	ldi	r31, 0x00	; 0
     fc4:	2e 0f       	add	r18, r30
     fc6:	3f 1f       	adc	r19, r31
     fc8:	bb 20       	and	r11, r11
     fca:	21 f0       	breq	.+8      	; 0xfd4 <dtoa_prf+0x18c>
     fcc:	eb 2d       	mov	r30, r11
     fce:	f0 e0       	ldi	r31, 0x00	; 0
     fd0:	31 96       	adiw	r30, 0x01	; 1
     fd2:	02 c0       	rjmp	.+4      	; 0xfd8 <dtoa_prf+0x190>
     fd4:	e0 e0       	ldi	r30, 0x00	; 0
     fd6:	f0 e0       	ldi	r31, 0x00	; 0
     fd8:	2e 0f       	add	r18, r30
     fda:	3f 1f       	adc	r19, r31
     fdc:	e1 2f       	mov	r30, r17
     fde:	f0 e0       	ldi	r31, 0x00	; 0
     fe0:	2e 17       	cp	r18, r30
     fe2:	3f 07       	cpc	r19, r31
     fe4:	1c f4       	brge	.+6      	; 0xfec <dtoa_prf+0x1a4>
     fe6:	12 1b       	sub	r17, r18
     fe8:	21 2f       	mov	r18, r17
     fea:	01 c0       	rjmp	.+2      	; 0xfee <dtoa_prf+0x1a6>
     fec:	20 e0       	ldi	r18, 0x00	; 0
     fee:	8e 2d       	mov	r24, r14
     ff0:	88 71       	andi	r24, 0x18	; 24
     ff2:	59 f4       	brne	.+22     	; 0x100a <dtoa_prf+0x1c2>
     ff4:	f6 01       	movw	r30, r12
     ff6:	82 2f       	mov	r24, r18
     ff8:	30 e2       	ldi	r19, 0x20	; 32
     ffa:	88 23       	and	r24, r24
     ffc:	19 f0       	breq	.+6      	; 0x1004 <dtoa_prf+0x1bc>
     ffe:	31 93       	st	Z+, r19
    1000:	81 50       	subi	r24, 0x01	; 1
    1002:	fb cf       	rjmp	.-10     	; 0xffa <dtoa_prf+0x1b2>
    1004:	c2 0e       	add	r12, r18
    1006:	d1 1c       	adc	r13, r1
    1008:	20 e0       	ldi	r18, 0x00	; 0
    100a:	99 23       	and	r25, r25
    100c:	29 f0       	breq	.+10     	; 0x1018 <dtoa_prf+0x1d0>
    100e:	d6 01       	movw	r26, r12
    1010:	9c 93       	st	X, r25
    1012:	f6 01       	movw	r30, r12
    1014:	31 96       	adiw	r30, 0x01	; 1
    1016:	6f 01       	movw	r12, r30
    1018:	51 11       	cpse	r21, r1
    101a:	0b c0       	rjmp	.+22     	; 0x1032 <dtoa_prf+0x1ea>
    101c:	f6 01       	movw	r30, r12
    101e:	82 2f       	mov	r24, r18
    1020:	90 e3       	ldi	r25, 0x30	; 48
    1022:	88 23       	and	r24, r24
    1024:	19 f0       	breq	.+6      	; 0x102c <dtoa_prf+0x1e4>
    1026:	91 93       	st	Z+, r25
    1028:	81 50       	subi	r24, 0x01	; 1
    102a:	fb cf       	rjmp	.-10     	; 0x1022 <dtoa_prf+0x1da>
    102c:	c2 0e       	add	r12, r18
    102e:	d1 1c       	adc	r13, r1
    1030:	20 e0       	ldi	r18, 0x00	; 0
    1032:	0f 2d       	mov	r16, r15
    1034:	06 0f       	add	r16, r22
    1036:	9a 81       	ldd	r25, Y+2	; 0x02
    1038:	34 2f       	mov	r19, r20
    103a:	30 71       	andi	r19, 0x10	; 16
    103c:	44 ff       	sbrs	r20, 4
    103e:	03 c0       	rjmp	.+6      	; 0x1046 <dtoa_prf+0x1fe>
    1040:	91 33       	cpi	r25, 0x31	; 49
    1042:	09 f4       	brne	.+2      	; 0x1046 <dtoa_prf+0x1fe>
    1044:	01 50       	subi	r16, 0x01	; 1
    1046:	10 16       	cp	r1, r16
    1048:	24 f4       	brge	.+8      	; 0x1052 <dtoa_prf+0x20a>
    104a:	09 30       	cpi	r16, 0x09	; 9
    104c:	18 f0       	brcs	.+6      	; 0x1054 <dtoa_prf+0x20c>
    104e:	08 e0       	ldi	r16, 0x08	; 8
    1050:	01 c0       	rjmp	.+2      	; 0x1054 <dtoa_prf+0x20c>
    1052:	01 e0       	ldi	r16, 0x01	; 1
    1054:	ab 01       	movw	r20, r22
    1056:	77 ff       	sbrs	r23, 7
    1058:	02 c0       	rjmp	.+4      	; 0x105e <dtoa_prf+0x216>
    105a:	40 e0       	ldi	r20, 0x00	; 0
    105c:	50 e0       	ldi	r21, 0x00	; 0
    105e:	fb 01       	movw	r30, r22
    1060:	e4 1b       	sub	r30, r20
    1062:	f5 0b       	sbc	r31, r21
    1064:	a1 e0       	ldi	r26, 0x01	; 1
    1066:	b0 e0       	ldi	r27, 0x00	; 0
    1068:	ac 0f       	add	r26, r28
    106a:	bd 1f       	adc	r27, r29
    106c:	ea 0f       	add	r30, r26
    106e:	fb 1f       	adc	r31, r27
    1070:	8e e2       	ldi	r24, 0x2E	; 46
    1072:	a8 2e       	mov	r10, r24
    1074:	4b 01       	movw	r8, r22
    1076:	80 1a       	sub	r8, r16
    1078:	91 08       	sbc	r9, r1
    107a:	0b 2d       	mov	r16, r11
    107c:	10 e0       	ldi	r17, 0x00	; 0
    107e:	11 95       	neg	r17
    1080:	01 95       	neg	r16
    1082:	11 09       	sbc	r17, r1
    1084:	4f 3f       	cpi	r20, 0xFF	; 255
    1086:	bf ef       	ldi	r27, 0xFF	; 255
    1088:	5b 07       	cpc	r21, r27
    108a:	21 f4       	brne	.+8      	; 0x1094 <dtoa_prf+0x24c>
    108c:	d6 01       	movw	r26, r12
    108e:	ac 92       	st	X, r10
    1090:	11 96       	adiw	r26, 0x01	; 1
    1092:	6d 01       	movw	r12, r26
    1094:	64 17       	cp	r22, r20
    1096:	75 07       	cpc	r23, r21
    1098:	2c f0       	brlt	.+10     	; 0x10a4 <dtoa_prf+0x25c>
    109a:	84 16       	cp	r8, r20
    109c:	95 06       	cpc	r9, r21
    109e:	14 f4       	brge	.+4      	; 0x10a4 <dtoa_prf+0x25c>
    10a0:	81 81       	ldd	r24, Z+1	; 0x01
    10a2:	01 c0       	rjmp	.+2      	; 0x10a6 <dtoa_prf+0x25e>
    10a4:	80 e3       	ldi	r24, 0x30	; 48
    10a6:	41 50       	subi	r20, 0x01	; 1
    10a8:	51 09       	sbc	r21, r1
    10aa:	31 96       	adiw	r30, 0x01	; 1
    10ac:	d6 01       	movw	r26, r12
    10ae:	11 96       	adiw	r26, 0x01	; 1
    10b0:	7d 01       	movw	r14, r26
    10b2:	40 17       	cp	r20, r16
    10b4:	51 07       	cpc	r21, r17
    10b6:	24 f0       	brlt	.+8      	; 0x10c0 <dtoa_prf+0x278>
    10b8:	d6 01       	movw	r26, r12
    10ba:	8c 93       	st	X, r24
    10bc:	67 01       	movw	r12, r14
    10be:	e2 cf       	rjmp	.-60     	; 0x1084 <dtoa_prf+0x23c>
    10c0:	64 17       	cp	r22, r20
    10c2:	75 07       	cpc	r23, r21
    10c4:	39 f4       	brne	.+14     	; 0x10d4 <dtoa_prf+0x28c>
    10c6:	96 33       	cpi	r25, 0x36	; 54
    10c8:	20 f4       	brcc	.+8      	; 0x10d2 <dtoa_prf+0x28a>
    10ca:	95 33       	cpi	r25, 0x35	; 53
    10cc:	19 f4       	brne	.+6      	; 0x10d4 <dtoa_prf+0x28c>
    10ce:	31 11       	cpse	r19, r1
    10d0:	01 c0       	rjmp	.+2      	; 0x10d4 <dtoa_prf+0x28c>
    10d2:	81 e3       	ldi	r24, 0x31	; 49
    10d4:	f6 01       	movw	r30, r12
    10d6:	80 83       	st	Z, r24
    10d8:	f7 01       	movw	r30, r14
    10da:	82 2f       	mov	r24, r18
    10dc:	90 e2       	ldi	r25, 0x20	; 32
    10de:	88 23       	and	r24, r24
    10e0:	19 f0       	breq	.+6      	; 0x10e8 <dtoa_prf+0x2a0>
    10e2:	91 93       	st	Z+, r25
    10e4:	81 50       	subi	r24, 0x01	; 1
    10e6:	fb cf       	rjmp	.-10     	; 0x10de <dtoa_prf+0x296>
    10e8:	f7 01       	movw	r30, r14
    10ea:	e2 0f       	add	r30, r18
    10ec:	f1 1d       	adc	r31, r1
    10ee:	10 82       	st	Z, r1
    10f0:	80 e0       	ldi	r24, 0x00	; 0
    10f2:	90 e0       	ldi	r25, 0x00	; 0
    10f4:	29 96       	adiw	r28, 0x09	; 9
    10f6:	ec e0       	ldi	r30, 0x0C	; 12
    10f8:	0c 94 28 0a 	jmp	0x1450	; 0x1450 <__epilogue_restores__+0xc>

000010fc <__ftoa_engine>:
    10fc:	28 30       	cpi	r18, 0x08	; 8
    10fe:	08 f0       	brcs	.+2      	; 0x1102 <__ftoa_engine+0x6>
    1100:	27 e0       	ldi	r18, 0x07	; 7
    1102:	33 27       	eor	r19, r19
    1104:	da 01       	movw	r26, r20
    1106:	99 0f       	add	r25, r25
    1108:	31 1d       	adc	r19, r1
    110a:	87 fd       	sbrc	r24, 7
    110c:	91 60       	ori	r25, 0x01	; 1
    110e:	00 96       	adiw	r24, 0x00	; 0
    1110:	61 05       	cpc	r22, r1
    1112:	71 05       	cpc	r23, r1
    1114:	39 f4       	brne	.+14     	; 0x1124 <__ftoa_engine+0x28>
    1116:	32 60       	ori	r19, 0x02	; 2
    1118:	2e 5f       	subi	r18, 0xFE	; 254
    111a:	3d 93       	st	X+, r19
    111c:	30 e3       	ldi	r19, 0x30	; 48
    111e:	2a 95       	dec	r18
    1120:	e1 f7       	brne	.-8      	; 0x111a <__ftoa_engine+0x1e>
    1122:	08 95       	ret
    1124:	9f 3f       	cpi	r25, 0xFF	; 255
    1126:	30 f0       	brcs	.+12     	; 0x1134 <__ftoa_engine+0x38>
    1128:	80 38       	cpi	r24, 0x80	; 128
    112a:	71 05       	cpc	r23, r1
    112c:	61 05       	cpc	r22, r1
    112e:	09 f0       	breq	.+2      	; 0x1132 <__ftoa_engine+0x36>
    1130:	3c 5f       	subi	r19, 0xFC	; 252
    1132:	3c 5f       	subi	r19, 0xFC	; 252
    1134:	3d 93       	st	X+, r19
    1136:	91 30       	cpi	r25, 0x01	; 1
    1138:	08 f0       	brcs	.+2      	; 0x113c <__ftoa_engine+0x40>
    113a:	80 68       	ori	r24, 0x80	; 128
    113c:	91 1d       	adc	r25, r1
    113e:	df 93       	push	r29
    1140:	cf 93       	push	r28
    1142:	1f 93       	push	r17
    1144:	0f 93       	push	r16
    1146:	ff 92       	push	r15
    1148:	ef 92       	push	r14
    114a:	19 2f       	mov	r17, r25
    114c:	98 7f       	andi	r25, 0xF8	; 248
    114e:	96 95       	lsr	r25
    1150:	e9 2f       	mov	r30, r25
    1152:	96 95       	lsr	r25
    1154:	96 95       	lsr	r25
    1156:	e9 0f       	add	r30, r25
    1158:	ff 27       	eor	r31, r31
    115a:	e0 5b       	subi	r30, 0xB0	; 176
    115c:	fe 4f       	sbci	r31, 0xFE	; 254
    115e:	99 27       	eor	r25, r25
    1160:	33 27       	eor	r19, r19
    1162:	ee 24       	eor	r14, r14
    1164:	ff 24       	eor	r15, r15
    1166:	a7 01       	movw	r20, r14
    1168:	e7 01       	movw	r28, r14
    116a:	05 90       	lpm	r0, Z+
    116c:	08 94       	sec
    116e:	07 94       	ror	r0
    1170:	28 f4       	brcc	.+10     	; 0x117c <__ftoa_engine+0x80>
    1172:	36 0f       	add	r19, r22
    1174:	e7 1e       	adc	r14, r23
    1176:	f8 1e       	adc	r15, r24
    1178:	49 1f       	adc	r20, r25
    117a:	51 1d       	adc	r21, r1
    117c:	66 0f       	add	r22, r22
    117e:	77 1f       	adc	r23, r23
    1180:	88 1f       	adc	r24, r24
    1182:	99 1f       	adc	r25, r25
    1184:	06 94       	lsr	r0
    1186:	a1 f7       	brne	.-24     	; 0x1170 <__ftoa_engine+0x74>
    1188:	05 90       	lpm	r0, Z+
    118a:	07 94       	ror	r0
    118c:	28 f4       	brcc	.+10     	; 0x1198 <__ftoa_engine+0x9c>
    118e:	e7 0e       	add	r14, r23
    1190:	f8 1e       	adc	r15, r24
    1192:	49 1f       	adc	r20, r25
    1194:	56 1f       	adc	r21, r22
    1196:	c1 1d       	adc	r28, r1
    1198:	77 0f       	add	r23, r23
    119a:	88 1f       	adc	r24, r24
    119c:	99 1f       	adc	r25, r25
    119e:	66 1f       	adc	r22, r22
    11a0:	06 94       	lsr	r0
    11a2:	a1 f7       	brne	.-24     	; 0x118c <__ftoa_engine+0x90>
    11a4:	05 90       	lpm	r0, Z+
    11a6:	07 94       	ror	r0
    11a8:	28 f4       	brcc	.+10     	; 0x11b4 <__ftoa_engine+0xb8>
    11aa:	f8 0e       	add	r15, r24
    11ac:	49 1f       	adc	r20, r25
    11ae:	56 1f       	adc	r21, r22
    11b0:	c7 1f       	adc	r28, r23
    11b2:	d1 1d       	adc	r29, r1
    11b4:	88 0f       	add	r24, r24
    11b6:	99 1f       	adc	r25, r25
    11b8:	66 1f       	adc	r22, r22
    11ba:	77 1f       	adc	r23, r23
    11bc:	06 94       	lsr	r0
    11be:	a1 f7       	brne	.-24     	; 0x11a8 <__ftoa_engine+0xac>
    11c0:	05 90       	lpm	r0, Z+
    11c2:	07 94       	ror	r0
    11c4:	20 f4       	brcc	.+8      	; 0x11ce <__ftoa_engine+0xd2>
    11c6:	49 0f       	add	r20, r25
    11c8:	56 1f       	adc	r21, r22
    11ca:	c7 1f       	adc	r28, r23
    11cc:	d8 1f       	adc	r29, r24
    11ce:	99 0f       	add	r25, r25
    11d0:	66 1f       	adc	r22, r22
    11d2:	77 1f       	adc	r23, r23
    11d4:	88 1f       	adc	r24, r24
    11d6:	06 94       	lsr	r0
    11d8:	a9 f7       	brne	.-22     	; 0x11c4 <__ftoa_engine+0xc8>
    11da:	84 91       	lpm	r24, Z
    11dc:	10 95       	com	r17
    11de:	17 70       	andi	r17, 0x07	; 7
    11e0:	41 f0       	breq	.+16     	; 0x11f2 <__ftoa_engine+0xf6>
    11e2:	d6 95       	lsr	r29
    11e4:	c7 95       	ror	r28
    11e6:	57 95       	ror	r21
    11e8:	47 95       	ror	r20
    11ea:	f7 94       	ror	r15
    11ec:	e7 94       	ror	r14
    11ee:	1a 95       	dec	r17
    11f0:	c1 f7       	brne	.-16     	; 0x11e2 <__ftoa_engine+0xe6>
    11f2:	e6 ef       	ldi	r30, 0xF6	; 246
    11f4:	f0 e0       	ldi	r31, 0x00	; 0
    11f6:	68 94       	set
    11f8:	15 90       	lpm	r1, Z+
    11fa:	15 91       	lpm	r17, Z+
    11fc:	35 91       	lpm	r19, Z+
    11fe:	65 91       	lpm	r22, Z+
    1200:	95 91       	lpm	r25, Z+
    1202:	05 90       	lpm	r0, Z+
    1204:	7f e2       	ldi	r23, 0x2F	; 47
    1206:	73 95       	inc	r23
    1208:	e1 18       	sub	r14, r1
    120a:	f1 0a       	sbc	r15, r17
    120c:	43 0b       	sbc	r20, r19
    120e:	56 0b       	sbc	r21, r22
    1210:	c9 0b       	sbc	r28, r25
    1212:	d0 09       	sbc	r29, r0
    1214:	c0 f7       	brcc	.-16     	; 0x1206 <__ftoa_engine+0x10a>
    1216:	e1 0c       	add	r14, r1
    1218:	f1 1e       	adc	r15, r17
    121a:	43 1f       	adc	r20, r19
    121c:	56 1f       	adc	r21, r22
    121e:	c9 1f       	adc	r28, r25
    1220:	d0 1d       	adc	r29, r0
    1222:	7e f4       	brtc	.+30     	; 0x1242 <__ftoa_engine+0x146>
    1224:	70 33       	cpi	r23, 0x30	; 48
    1226:	11 f4       	brne	.+4      	; 0x122c <__ftoa_engine+0x130>
    1228:	8a 95       	dec	r24
    122a:	e6 cf       	rjmp	.-52     	; 0x11f8 <__ftoa_engine+0xfc>
    122c:	e8 94       	clt
    122e:	01 50       	subi	r16, 0x01	; 1
    1230:	30 f0       	brcs	.+12     	; 0x123e <__ftoa_engine+0x142>
    1232:	08 0f       	add	r16, r24
    1234:	0a f4       	brpl	.+2      	; 0x1238 <__ftoa_engine+0x13c>
    1236:	00 27       	eor	r16, r16
    1238:	02 17       	cp	r16, r18
    123a:	08 f4       	brcc	.+2      	; 0x123e <__ftoa_engine+0x142>
    123c:	20 2f       	mov	r18, r16
    123e:	23 95       	inc	r18
    1240:	02 2f       	mov	r16, r18
    1242:	7a 33       	cpi	r23, 0x3A	; 58
    1244:	28 f0       	brcs	.+10     	; 0x1250 <__ftoa_engine+0x154>
    1246:	79 e3       	ldi	r23, 0x39	; 57
    1248:	7d 93       	st	X+, r23
    124a:	2a 95       	dec	r18
    124c:	e9 f7       	brne	.-6      	; 0x1248 <__ftoa_engine+0x14c>
    124e:	10 c0       	rjmp	.+32     	; 0x1270 <__ftoa_engine+0x174>
    1250:	7d 93       	st	X+, r23
    1252:	2a 95       	dec	r18
    1254:	89 f6       	brne	.-94     	; 0x11f8 <__ftoa_engine+0xfc>
    1256:	06 94       	lsr	r0
    1258:	97 95       	ror	r25
    125a:	67 95       	ror	r22
    125c:	37 95       	ror	r19
    125e:	17 95       	ror	r17
    1260:	17 94       	ror	r1
    1262:	e1 18       	sub	r14, r1
    1264:	f1 0a       	sbc	r15, r17
    1266:	43 0b       	sbc	r20, r19
    1268:	56 0b       	sbc	r21, r22
    126a:	c9 0b       	sbc	r28, r25
    126c:	d0 09       	sbc	r29, r0
    126e:	98 f0       	brcs	.+38     	; 0x1296 <__ftoa_engine+0x19a>
    1270:	23 95       	inc	r18
    1272:	7e 91       	ld	r23, -X
    1274:	73 95       	inc	r23
    1276:	7a 33       	cpi	r23, 0x3A	; 58
    1278:	08 f0       	brcs	.+2      	; 0x127c <__ftoa_engine+0x180>
    127a:	70 e3       	ldi	r23, 0x30	; 48
    127c:	7c 93       	st	X, r23
    127e:	20 13       	cpse	r18, r16
    1280:	b8 f7       	brcc	.-18     	; 0x1270 <__ftoa_engine+0x174>
    1282:	7e 91       	ld	r23, -X
    1284:	70 61       	ori	r23, 0x10	; 16
    1286:	7d 93       	st	X+, r23
    1288:	30 f0       	brcs	.+12     	; 0x1296 <__ftoa_engine+0x19a>
    128a:	83 95       	inc	r24
    128c:	71 e3       	ldi	r23, 0x31	; 49
    128e:	7d 93       	st	X+, r23
    1290:	70 e3       	ldi	r23, 0x30	; 48
    1292:	2a 95       	dec	r18
    1294:	e1 f7       	brne	.-8      	; 0x128e <__ftoa_engine+0x192>
    1296:	11 24       	eor	r1, r1
    1298:	ef 90       	pop	r14
    129a:	ff 90       	pop	r15
    129c:	0f 91       	pop	r16
    129e:	1f 91       	pop	r17
    12a0:	cf 91       	pop	r28
    12a2:	df 91       	pop	r29
    12a4:	99 27       	eor	r25, r25
    12a6:	87 fd       	sbrc	r24, 7
    12a8:	90 95       	com	r25
    12aa:	08 95       	ret

000012ac <strnlen_P>:
    12ac:	fc 01       	movw	r30, r24
    12ae:	05 90       	lpm	r0, Z+
    12b0:	61 50       	subi	r22, 0x01	; 1
    12b2:	70 40       	sbci	r23, 0x00	; 0
    12b4:	01 10       	cpse	r0, r1
    12b6:	d8 f7       	brcc	.-10     	; 0x12ae <strnlen_P+0x2>
    12b8:	80 95       	com	r24
    12ba:	90 95       	com	r25
    12bc:	8e 0f       	add	r24, r30
    12be:	9f 1f       	adc	r25, r31
    12c0:	08 95       	ret

000012c2 <strnlen>:
    12c2:	fc 01       	movw	r30, r24
    12c4:	61 50       	subi	r22, 0x01	; 1
    12c6:	70 40       	sbci	r23, 0x00	; 0
    12c8:	01 90       	ld	r0, Z+
    12ca:	01 10       	cpse	r0, r1
    12cc:	d8 f7       	brcc	.-10     	; 0x12c4 <strnlen+0x2>
    12ce:	80 95       	com	r24
    12d0:	90 95       	com	r25
    12d2:	8e 0f       	add	r24, r30
    12d4:	9f 1f       	adc	r25, r31
    12d6:	08 95       	ret

000012d8 <fputc>:
    12d8:	0f 93       	push	r16
    12da:	1f 93       	push	r17
    12dc:	cf 93       	push	r28
    12de:	df 93       	push	r29
    12e0:	fb 01       	movw	r30, r22
    12e2:	23 81       	ldd	r18, Z+3	; 0x03
    12e4:	21 fd       	sbrc	r18, 1
    12e6:	03 c0       	rjmp	.+6      	; 0x12ee <fputc+0x16>
    12e8:	8f ef       	ldi	r24, 0xFF	; 255
    12ea:	9f ef       	ldi	r25, 0xFF	; 255
    12ec:	2c c0       	rjmp	.+88     	; 0x1346 <fputc+0x6e>
    12ee:	22 ff       	sbrs	r18, 2
    12f0:	16 c0       	rjmp	.+44     	; 0x131e <fputc+0x46>
    12f2:	46 81       	ldd	r20, Z+6	; 0x06
    12f4:	57 81       	ldd	r21, Z+7	; 0x07
    12f6:	24 81       	ldd	r18, Z+4	; 0x04
    12f8:	35 81       	ldd	r19, Z+5	; 0x05
    12fa:	42 17       	cp	r20, r18
    12fc:	53 07       	cpc	r21, r19
    12fe:	44 f4       	brge	.+16     	; 0x1310 <fputc+0x38>
    1300:	a0 81       	ld	r26, Z
    1302:	b1 81       	ldd	r27, Z+1	; 0x01
    1304:	9d 01       	movw	r18, r26
    1306:	2f 5f       	subi	r18, 0xFF	; 255
    1308:	3f 4f       	sbci	r19, 0xFF	; 255
    130a:	31 83       	std	Z+1, r19	; 0x01
    130c:	20 83       	st	Z, r18
    130e:	8c 93       	st	X, r24
    1310:	26 81       	ldd	r18, Z+6	; 0x06
    1312:	37 81       	ldd	r19, Z+7	; 0x07
    1314:	2f 5f       	subi	r18, 0xFF	; 255
    1316:	3f 4f       	sbci	r19, 0xFF	; 255
    1318:	37 83       	std	Z+7, r19	; 0x07
    131a:	26 83       	std	Z+6, r18	; 0x06
    131c:	14 c0       	rjmp	.+40     	; 0x1346 <fputc+0x6e>
    131e:	8b 01       	movw	r16, r22
    1320:	ec 01       	movw	r28, r24
    1322:	fb 01       	movw	r30, r22
    1324:	00 84       	ldd	r0, Z+8	; 0x08
    1326:	f1 85       	ldd	r31, Z+9	; 0x09
    1328:	e0 2d       	mov	r30, r0
    132a:	09 95       	icall
    132c:	89 2b       	or	r24, r25
    132e:	e1 f6       	brne	.-72     	; 0x12e8 <fputc+0x10>
    1330:	d8 01       	movw	r26, r16
    1332:	16 96       	adiw	r26, 0x06	; 6
    1334:	8d 91       	ld	r24, X+
    1336:	9c 91       	ld	r25, X
    1338:	17 97       	sbiw	r26, 0x07	; 7
    133a:	01 96       	adiw	r24, 0x01	; 1
    133c:	17 96       	adiw	r26, 0x07	; 7
    133e:	9c 93       	st	X, r25
    1340:	8e 93       	st	-X, r24
    1342:	16 97       	sbiw	r26, 0x06	; 6
    1344:	ce 01       	movw	r24, r28
    1346:	df 91       	pop	r29
    1348:	cf 91       	pop	r28
    134a:	1f 91       	pop	r17
    134c:	0f 91       	pop	r16
    134e:	08 95       	ret

00001350 <__ultoa_invert>:
    1350:	fa 01       	movw	r30, r20
    1352:	aa 27       	eor	r26, r26
    1354:	28 30       	cpi	r18, 0x08	; 8
    1356:	51 f1       	breq	.+84     	; 0x13ac <__ultoa_invert+0x5c>
    1358:	20 31       	cpi	r18, 0x10	; 16
    135a:	81 f1       	breq	.+96     	; 0x13bc <__ultoa_invert+0x6c>
    135c:	e8 94       	clt
    135e:	6f 93       	push	r22
    1360:	6e 7f       	andi	r22, 0xFE	; 254
    1362:	6e 5f       	subi	r22, 0xFE	; 254
    1364:	7f 4f       	sbci	r23, 0xFF	; 255
    1366:	8f 4f       	sbci	r24, 0xFF	; 255
    1368:	9f 4f       	sbci	r25, 0xFF	; 255
    136a:	af 4f       	sbci	r26, 0xFF	; 255
    136c:	b1 e0       	ldi	r27, 0x01	; 1
    136e:	3e d0       	rcall	.+124    	; 0x13ec <__ultoa_invert+0x9c>
    1370:	b4 e0       	ldi	r27, 0x04	; 4
    1372:	3c d0       	rcall	.+120    	; 0x13ec <__ultoa_invert+0x9c>
    1374:	67 0f       	add	r22, r23
    1376:	78 1f       	adc	r23, r24
    1378:	89 1f       	adc	r24, r25
    137a:	9a 1f       	adc	r25, r26
    137c:	a1 1d       	adc	r26, r1
    137e:	68 0f       	add	r22, r24
    1380:	79 1f       	adc	r23, r25
    1382:	8a 1f       	adc	r24, r26
    1384:	91 1d       	adc	r25, r1
    1386:	a1 1d       	adc	r26, r1
    1388:	6a 0f       	add	r22, r26
    138a:	71 1d       	adc	r23, r1
    138c:	81 1d       	adc	r24, r1
    138e:	91 1d       	adc	r25, r1
    1390:	a1 1d       	adc	r26, r1
    1392:	20 d0       	rcall	.+64     	; 0x13d4 <__ultoa_invert+0x84>
    1394:	09 f4       	brne	.+2      	; 0x1398 <__ultoa_invert+0x48>
    1396:	68 94       	set
    1398:	3f 91       	pop	r19
    139a:	2a e0       	ldi	r18, 0x0A	; 10
    139c:	26 9f       	mul	r18, r22
    139e:	11 24       	eor	r1, r1
    13a0:	30 19       	sub	r19, r0
    13a2:	30 5d       	subi	r19, 0xD0	; 208
    13a4:	31 93       	st	Z+, r19
    13a6:	de f6       	brtc	.-74     	; 0x135e <__ultoa_invert+0xe>
    13a8:	cf 01       	movw	r24, r30
    13aa:	08 95       	ret
    13ac:	46 2f       	mov	r20, r22
    13ae:	47 70       	andi	r20, 0x07	; 7
    13b0:	40 5d       	subi	r20, 0xD0	; 208
    13b2:	41 93       	st	Z+, r20
    13b4:	b3 e0       	ldi	r27, 0x03	; 3
    13b6:	0f d0       	rcall	.+30     	; 0x13d6 <__ultoa_invert+0x86>
    13b8:	c9 f7       	brne	.-14     	; 0x13ac <__ultoa_invert+0x5c>
    13ba:	f6 cf       	rjmp	.-20     	; 0x13a8 <__ultoa_invert+0x58>
    13bc:	46 2f       	mov	r20, r22
    13be:	4f 70       	andi	r20, 0x0F	; 15
    13c0:	40 5d       	subi	r20, 0xD0	; 208
    13c2:	4a 33       	cpi	r20, 0x3A	; 58
    13c4:	18 f0       	brcs	.+6      	; 0x13cc <__ultoa_invert+0x7c>
    13c6:	49 5d       	subi	r20, 0xD9	; 217
    13c8:	31 fd       	sbrc	r19, 1
    13ca:	40 52       	subi	r20, 0x20	; 32
    13cc:	41 93       	st	Z+, r20
    13ce:	02 d0       	rcall	.+4      	; 0x13d4 <__ultoa_invert+0x84>
    13d0:	a9 f7       	brne	.-22     	; 0x13bc <__ultoa_invert+0x6c>
    13d2:	ea cf       	rjmp	.-44     	; 0x13a8 <__ultoa_invert+0x58>
    13d4:	b4 e0       	ldi	r27, 0x04	; 4
    13d6:	a6 95       	lsr	r26
    13d8:	97 95       	ror	r25
    13da:	87 95       	ror	r24
    13dc:	77 95       	ror	r23
    13de:	67 95       	ror	r22
    13e0:	ba 95       	dec	r27
    13e2:	c9 f7       	brne	.-14     	; 0x13d6 <__ultoa_invert+0x86>
    13e4:	00 97       	sbiw	r24, 0x00	; 0
    13e6:	61 05       	cpc	r22, r1
    13e8:	71 05       	cpc	r23, r1
    13ea:	08 95       	ret
    13ec:	9b 01       	movw	r18, r22
    13ee:	ac 01       	movw	r20, r24
    13f0:	0a 2e       	mov	r0, r26
    13f2:	06 94       	lsr	r0
    13f4:	57 95       	ror	r21
    13f6:	47 95       	ror	r20
    13f8:	37 95       	ror	r19
    13fa:	27 95       	ror	r18
    13fc:	ba 95       	dec	r27
    13fe:	c9 f7       	brne	.-14     	; 0x13f2 <__ultoa_invert+0xa2>
    1400:	62 0f       	add	r22, r18
    1402:	73 1f       	adc	r23, r19
    1404:	84 1f       	adc	r24, r20
    1406:	95 1f       	adc	r25, r21
    1408:	a0 1d       	adc	r26, r0
    140a:	08 95       	ret

0000140c <__prologue_saves__>:
    140c:	2f 92       	push	r2
    140e:	3f 92       	push	r3
    1410:	4f 92       	push	r4
    1412:	5f 92       	push	r5
    1414:	6f 92       	push	r6
    1416:	7f 92       	push	r7
    1418:	8f 92       	push	r8
    141a:	9f 92       	push	r9
    141c:	af 92       	push	r10
    141e:	bf 92       	push	r11
    1420:	cf 92       	push	r12
    1422:	df 92       	push	r13
    1424:	ef 92       	push	r14
    1426:	ff 92       	push	r15
    1428:	0f 93       	push	r16
    142a:	1f 93       	push	r17
    142c:	cf 93       	push	r28
    142e:	df 93       	push	r29
    1430:	cd b7       	in	r28, 0x3d	; 61
    1432:	de b7       	in	r29, 0x3e	; 62
    1434:	ca 1b       	sub	r28, r26
    1436:	db 0b       	sbc	r29, r27
    1438:	0f b6       	in	r0, 0x3f	; 63
    143a:	f8 94       	cli
    143c:	de bf       	out	0x3e, r29	; 62
    143e:	0f be       	out	0x3f, r0	; 63
    1440:	cd bf       	out	0x3d, r28	; 61
    1442:	09 94       	ijmp

00001444 <__epilogue_restores__>:
    1444:	2a 88       	ldd	r2, Y+18	; 0x12
    1446:	39 88       	ldd	r3, Y+17	; 0x11
    1448:	48 88       	ldd	r4, Y+16	; 0x10
    144a:	5f 84       	ldd	r5, Y+15	; 0x0f
    144c:	6e 84       	ldd	r6, Y+14	; 0x0e
    144e:	7d 84       	ldd	r7, Y+13	; 0x0d
    1450:	8c 84       	ldd	r8, Y+12	; 0x0c
    1452:	9b 84       	ldd	r9, Y+11	; 0x0b
    1454:	aa 84       	ldd	r10, Y+10	; 0x0a
    1456:	b9 84       	ldd	r11, Y+9	; 0x09
    1458:	c8 84       	ldd	r12, Y+8	; 0x08
    145a:	df 80       	ldd	r13, Y+7	; 0x07
    145c:	ee 80       	ldd	r14, Y+6	; 0x06
    145e:	fd 80       	ldd	r15, Y+5	; 0x05
    1460:	0c 81       	ldd	r16, Y+4	; 0x04
    1462:	1b 81       	ldd	r17, Y+3	; 0x03
    1464:	aa 81       	ldd	r26, Y+2	; 0x02
    1466:	b9 81       	ldd	r27, Y+1	; 0x01
    1468:	ce 0f       	add	r28, r30
    146a:	d1 1d       	adc	r29, r1
    146c:	0f b6       	in	r0, 0x3f	; 63
    146e:	f8 94       	cli
    1470:	de bf       	out	0x3e, r29	; 62
    1472:	0f be       	out	0x3f, r0	; 63
    1474:	cd bf       	out	0x3d, r28	; 61
    1476:	ed 01       	movw	r28, r26
    1478:	08 95       	ret

0000147a <_exit>:
    147a:	f8 94       	cli

0000147c <__stop_program>:
    147c:	ff cf       	rjmp	.-2      	; 0x147c <__stop_program>
