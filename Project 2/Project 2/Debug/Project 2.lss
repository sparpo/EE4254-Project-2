
Project 2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000017c  00800100  00001756  000017ea  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001756  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000057  0080027c  0080027c  00001966  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001966  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000019c4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000078  00000000  00000000  00001a04  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000d83  00000000  00000000  00001a7c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000735  00000000  00000000  000027ff  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000622  00000000  00000000  00002f34  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000170  00000000  00000000  00003558  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004df  00000000  00000000  000036c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000037a  00000000  00000000  00003ba7  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000068  00000000  00000000  00003f21  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__ctors_end>
       4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
       8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
       c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      10:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      14:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      18:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      1c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      20:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      24:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      28:	0c 94 68 04 	jmp	0x8d0	; 0x8d0 <__vector_10>
      2c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      30:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      34:	0c 94 51 04 	jmp	0x8a2	; 0x8a2 <__vector_13>
      38:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      3c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      40:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      44:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      48:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      4c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      50:	0c 94 31 04 	jmp	0x862	; 0x862 <__vector_20>
      54:	0c 94 e2 04 	jmp	0x9c4	; 0x9c4 <__vector_21>
      58:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      5c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      60:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      64:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      68:	33 03       	mulsu	r19, r19
      6a:	33 03       	mulsu	r19, r19
      6c:	33 03       	mulsu	r19, r19
      6e:	33 03       	mulsu	r19, r19
      70:	33 03       	mulsu	r19, r19
      72:	33 03       	mulsu	r19, r19
      74:	33 03       	mulsu	r19, r19
      76:	33 03       	mulsu	r19, r19
      78:	33 03       	mulsu	r19, r19
      7a:	33 03       	mulsu	r19, r19
      7c:	48 03       	fmul	r20, r16
      7e:	48 03       	fmul	r20, r16
      80:	48 03       	fmul	r20, r16
      82:	48 03       	fmul	r20, r16
      84:	48 03       	fmul	r20, r16
      86:	48 03       	fmul	r20, r16
      88:	48 03       	fmul	r20, r16
      8a:	60 02       	muls	r22, r16
      8c:	48 03       	fmul	r20, r16
      8e:	bd 02       	muls	r27, r29
      90:	48 03       	fmul	r20, r16
      92:	c2 02       	muls	r28, r18
      94:	48 03       	fmul	r20, r16
      96:	e7 02       	muls	r30, r23
      98:	fe 02       	muls	r31, r30
      9a:	48 03       	fmul	r20, r16
      9c:	48 03       	fmul	r20, r16
      9e:	48 03       	fmul	r20, r16
      a0:	40 02       	muls	r20, r16
      a2:	e3 01       	movw	r28, r6
      a4:	eb 01       	movw	r28, r22
      a6:	48 03       	fmul	r20, r16
      a8:	f3 01       	movw	r30, r6
      aa:	48 03       	fmul	r20, r16
      ac:	48 03       	fmul	r20, r16
      ae:	d1 02       	muls	r29, r17
      b0:	fa 01       	movw	r30, r20
      b2:	48 03       	fmul	r20, r16
      b4:	7e 02       	muls	r23, r30
      b6:	15 03       	mulsu	r17, r21
      b8:	48 03       	fmul	r20, r16
      ba:	48 03       	fmul	r20, r16
      bc:	48 03       	fmul	r20, r16
      be:	48 03       	fmul	r20, r16
      c0:	48 03       	fmul	r20, r16
      c2:	48 03       	fmul	r20, r16
      c4:	48 03       	fmul	r20, r16
      c6:	48 03       	fmul	r20, r16
      c8:	48 03       	fmul	r20, r16
      ca:	60 02       	muls	r22, r16
      cc:	48 03       	fmul	r20, r16
      ce:	bd 02       	muls	r27, r29
      d0:	48 03       	fmul	r20, r16
      d2:	c2 02       	muls	r28, r18
      d4:	48 03       	fmul	r20, r16
      d6:	e7 02       	muls	r30, r23
      d8:	fe 02       	muls	r31, r30
      da:	48 03       	fmul	r20, r16
      dc:	48 03       	fmul	r20, r16
      de:	48 03       	fmul	r20, r16
      e0:	40 02       	muls	r20, r16
      e2:	e3 01       	movw	r28, r6
      e4:	eb 01       	movw	r28, r22
      e6:	48 03       	fmul	r20, r16
      e8:	f3 01       	movw	r30, r6
      ea:	48 03       	fmul	r20, r16
      ec:	48 03       	fmul	r20, r16
      ee:	d1 02       	muls	r29, r17
      f0:	fa 01       	movw	r30, r20
      f2:	48 03       	fmul	r20, r16
      f4:	7e 02       	muls	r23, r30
      f6:	15 03       	mulsu	r17, r21

000000f8 <__trampolines_end>:
      f8:	00 40       	sbci	r16, 0x00	; 0
      fa:	7a 10       	cpse	r7, r10
      fc:	f3 5a       	subi	r31, 0xA3	; 163
      fe:	00 a0       	ldd	r0, Z+32	; 0x20
     100:	72 4e       	sbci	r23, 0xE2	; 226
     102:	18 09       	sbc	r17, r8
     104:	00 10       	cpse	r0, r0
     106:	a5 d4       	rcall	.+2378   	; 0xa52 <__fixunssfsi+0xc>
     108:	e8 00       	.word	0x00e8	; ????
     10a:	00 e8       	ldi	r16, 0x80	; 128
     10c:	76 48       	sbci	r23, 0x86	; 134
     10e:	17 00       	.word	0x0017	; ????
     110:	00 e4       	ldi	r16, 0x40	; 64
     112:	0b 54       	subi	r16, 0x4B	; 75
     114:	02 00       	.word	0x0002	; ????
     116:	00 ca       	rjmp	.-3072   	; 0xfffff518 <__eeprom_end+0xff7ef518>
     118:	9a 3b       	cpi	r25, 0xBA	; 186
     11a:	00 00       	nop
     11c:	00 e1       	ldi	r16, 0x10	; 16
     11e:	f5 05       	cpc	r31, r5
     120:	00 00       	nop
     122:	80 96       	adiw	r24, 0x20	; 32
     124:	98 00       	.word	0x0098	; ????
     126:	00 00       	nop
     128:	40 42       	sbci	r20, 0x20	; 32
     12a:	0f 00       	.word	0x000f	; ????
     12c:	00 00       	nop
     12e:	a0 86       	std	Z+8, r10	; 0x08
     130:	01 00       	.word	0x0001	; ????
     132:	00 00       	nop
     134:	10 27       	eor	r17, r16
     136:	00 00       	nop
     138:	00 00       	nop
     13a:	e8 03       	fmulsu	r22, r16
     13c:	00 00       	nop
     13e:	00 00       	nop
     140:	64 00       	.word	0x0064	; ????
     142:	00 00       	nop
     144:	00 00       	nop
     146:	0a 00       	.word	0x000a	; ????
     148:	00 00       	nop
     14a:	00 00       	nop
     14c:	01 00       	.word	0x0001	; ????
     14e:	00 00       	nop
     150:	00 00       	nop
     152:	2c 76       	andi	r18, 0x6C	; 108
     154:	d8 88       	ldd	r13, Y+16	; 0x10
     156:	dc 67       	ori	r29, 0x7C	; 124
     158:	4f 08       	sbc	r4, r15
     15a:	23 df       	rcall	.-442    	; 0xffffffa2 <__eeprom_end+0xff7effa2>
     15c:	c1 df       	rcall	.-126    	; 0xe0 <__SREG__+0xa1>
     15e:	ae 59       	subi	r26, 0x9E	; 158
     160:	e1 b1       	in	r30, 0x01	; 1
     162:	b7 96       	adiw	r30, 0x27	; 39
     164:	e5 e3       	ldi	r30, 0x35	; 53
     166:	e4 53       	subi	r30, 0x34	; 52
     168:	c6 3a       	cpi	r28, 0xA6	; 166
     16a:	e6 51       	subi	r30, 0x16	; 22
     16c:	99 76       	andi	r25, 0x69	; 105
     16e:	96 e8       	ldi	r25, 0x86	; 134
     170:	e6 c2       	rjmp	.+1484   	; 0x73e <__LOCK_REGION_LENGTH__+0x33e>
     172:	84 26       	eor	r8, r20
     174:	eb 89       	ldd	r30, Y+19	; 0x13
     176:	8c 9b       	sbis	0x11, 4	; 17
     178:	62 ed       	ldi	r22, 0xD2	; 210
     17a:	40 7c       	andi	r20, 0xC0	; 192
     17c:	6f fc       	.word	0xfc6f	; ????
     17e:	ef bc       	out	0x2f, r14	; 47
     180:	9c 9f       	mul	r25, r28
     182:	40 f2       	brcs	.-112    	; 0x114 <__trampolines_end+0x1c>
     184:	ba a5       	ldd	r27, Y+42	; 0x2a
     186:	6f a5       	ldd	r22, Y+47	; 0x2f
     188:	f4 90       	lpm	r15, Z
     18a:	05 5a       	subi	r16, 0xA5	; 165
     18c:	2a f7       	brpl	.-54     	; 0x158 <__trampolines_end+0x60>
     18e:	5c 93       	st	X, r21
     190:	6b 6c       	ori	r22, 0xCB	; 203
     192:	f9 67       	ori	r31, 0x79	; 121
     194:	6d c1       	rjmp	.+730    	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
     196:	1b fc       	.word	0xfc1b	; ????
     198:	e0 e4       	ldi	r30, 0x40	; 64
     19a:	0d 47       	sbci	r16, 0x7D	; 125
     19c:	fe f5       	brtc	.+126    	; 0x21c <.do_clear_bss_loop>
     19e:	20 e6       	ldi	r18, 0x60	; 96
     1a0:	b5 00       	.word	0x00b5	; ????
     1a2:	d0 ed       	ldi	r29, 0xD0	; 208
     1a4:	90 2e       	mov	r9, r16
     1a6:	03 00       	.word	0x0003	; ????
     1a8:	94 35       	cpi	r25, 0x54	; 84
     1aa:	77 05       	cpc	r23, r7
     1ac:	00 80       	ld	r0, Z
     1ae:	84 1e       	adc	r8, r20
     1b0:	08 00       	.word	0x0008	; ????
     1b2:	00 20       	and	r0, r0
     1b4:	4e 0a       	sbc	r4, r30
     1b6:	00 00       	nop
     1b8:	00 c8       	rjmp	.-4096   	; 0xfffff1ba <__eeprom_end+0xff7ef1ba>
     1ba:	0c 33       	cpi	r16, 0x3C	; 60
     1bc:	33 33       	cpi	r19, 0x33	; 51
     1be:	33 0f       	add	r19, r19
     1c0:	98 6e       	ori	r25, 0xE8	; 232
     1c2:	12 83       	std	Z+2, r17	; 0x02
     1c4:	11 41       	sbci	r17, 0x11	; 17
     1c6:	ef 8d       	ldd	r30, Y+31	; 0x1f
     1c8:	21 14       	cp	r2, r1
     1ca:	89 3b       	cpi	r24, 0xB9	; 185
     1cc:	e6 55       	subi	r30, 0x56	; 86
     1ce:	16 cf       	rjmp	.-468    	; 0xfffffffc <__eeprom_end+0xff7efffc>
     1d0:	fe e6       	ldi	r31, 0x6E	; 110
     1d2:	db 18       	sub	r13, r11
     1d4:	d1 84       	ldd	r13, Z+9	; 0x09
     1d6:	4b 38       	cpi	r20, 0x8B	; 139
     1d8:	1b f7       	brvc	.-58     	; 0x1a0 <__trampolines_end+0xa8>
     1da:	7c 1d       	adc	r23, r12
     1dc:	90 1d       	adc	r25, r0
     1de:	a4 bb       	out	0x14, r26	; 20
     1e0:	e4 24       	eor	r14, r4
     1e2:	20 32       	cpi	r18, 0x20	; 32
     1e4:	84 72       	andi	r24, 0x24	; 36
     1e6:	5e 22       	and	r5, r30
     1e8:	81 00       	.word	0x0081	; ????
     1ea:	c9 f1       	breq	.+114    	; 0x25e <init_USART+0x12>
     1ec:	24 ec       	ldi	r18, 0xC4	; 196
     1ee:	a1 e5       	ldi	r26, 0x51	; 81
     1f0:	3d 27       	eor	r19, r29

000001f2 <__ctors_end>:
     1f2:	11 24       	eor	r1, r1
     1f4:	1f be       	out	0x3f, r1	; 63
     1f6:	cf ef       	ldi	r28, 0xFF	; 255
     1f8:	d8 e0       	ldi	r29, 0x08	; 8
     1fa:	de bf       	out	0x3e, r29	; 62
     1fc:	cd bf       	out	0x3d, r28	; 61

000001fe <__do_copy_data>:
     1fe:	12 e0       	ldi	r17, 0x02	; 2
     200:	a0 e0       	ldi	r26, 0x00	; 0
     202:	b1 e0       	ldi	r27, 0x01	; 1
     204:	e6 e5       	ldi	r30, 0x56	; 86
     206:	f7 e1       	ldi	r31, 0x17	; 23
     208:	02 c0       	rjmp	.+4      	; 0x20e <__do_copy_data+0x10>
     20a:	05 90       	lpm	r0, Z+
     20c:	0d 92       	st	X+, r0
     20e:	ac 37       	cpi	r26, 0x7C	; 124
     210:	b1 07       	cpc	r27, r17
     212:	d9 f7       	brne	.-10     	; 0x20a <__do_copy_data+0xc>

00000214 <__do_clear_bss>:
     214:	22 e0       	ldi	r18, 0x02	; 2
     216:	ac e7       	ldi	r26, 0x7C	; 124
     218:	b2 e0       	ldi	r27, 0x02	; 2
     21a:	01 c0       	rjmp	.+2      	; 0x21e <.do_clear_bss_start>

0000021c <.do_clear_bss_loop>:
     21c:	1d 92       	st	X+, r1

0000021e <.do_clear_bss_start>:
     21e:	a3 3d       	cpi	r26, 0xD3	; 211
     220:	b2 07       	cpc	r27, r18
     222:	e1 f7       	brne	.-8      	; 0x21c <.do_clear_bss_loop>
     224:	0e 94 6e 01 	call	0x2dc	; 0x2dc <main>
     228:	0c 94 a9 0b 	jmp	0x1752	; 0x1752 <_exit>

0000022c <__bad_interrupt>:
     22c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000230 <init_adc>:
	
}

/* Initializing ADc registers */
void init_adc() {
	ADMUX = (1<<6)|(1<<1); //sets voltage ref to Vcc and starts ADC2
     230:	82 e4       	ldi	r24, 0x42	; 66
     232:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
	ADCSRA  = (1<<7)|(1<<6)|(1<<5)|(1<<3)|(7<<0); //enable adc, starts conversion, enable interrupt, sets prescalar 128
     236:	8f ee       	ldi	r24, 0xEF	; 239
     238:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__DATA_REGION_ORIGIN__+0x1a>
	ADCSRB = (1<<2);// sets timer0 overflow 
     23c:	84 e0       	ldi	r24, 0x04	; 4
     23e:	80 93 7b 00 	sts	0x007B, r24	; 0x80007b <__DATA_REGION_ORIGIN__+0x1b>
     242:	08 95       	ret

00000244 <init_ports>:
}

/* Initializing Ports */
void init_ports() {
	
	DDRB = (1<<3);		// Initialize turn bit 3 to output
     244:	88 e0       	ldi	r24, 0x08	; 8
     246:	84 b9       	out	0x04, r24	; 4
	PORTB = 0;		// Initialize to all off	
     248:	15 b8       	out	0x05, r1	; 5
     24a:	08 95       	ret

0000024c <init_USART>:
}

/* Initializing USART registers */
void init_USART() {
	UCSR0B	= (1<<RXEN0) | (1<<TXEN0) | (1<<TXCIE0) | (0<<UCSZ02);  //enable receiver, transmitter, TX Complete and transmit interrupt and setting data to 8 bits
     24c:	88 e5       	ldi	r24, 0x58	; 88
     24e:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
	UBRR0 = 16;  //baud rate = 58823, 57600
     252:	80 e1       	ldi	r24, 0x10	; 16
     254:	90 e0       	ldi	r25, 0x00	; 0
     256:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
     25a:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
     25e:	08 95       	ret

00000260 <init_timer0>:
}

/* Initializing Timer0 registers */
void init_timer0() {
	
	TCCR0A = 0;
     260:	14 bc       	out	0x24, r1	; 36
	TIMSK0 = 0;
     262:	10 92 6e 00 	sts	0x006E, r1	; 0x80006e <__DATA_REGION_ORIGIN__+0xe>
	TCCR0B = (5<<0); // prescalar 1024
     266:	85 e0       	ldi	r24, 0x05	; 5
     268:	85 bd       	out	0x25, r24	; 37
	TCNT0 = 6; // TCNT0 set to 6 so that will cause timer overflow after 16 ms
     26a:	86 e0       	ldi	r24, 0x06	; 6
     26c:	86 bd       	out	0x26, r24	; 38
     26e:	08 95       	ret

00000270 <init_timer1>:

}

void init_timer1() {
		TCCR1A = 0;											// Disable all o/p waveforms
     270:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__DATA_REGION_ORIGIN__+0x20>
		TCCR1B = ((1<<ICES1) | (2<<CS10));		//  Rising Edge, CLK/8 (2MHz) T1 source
     274:	82 e4       	ldi	r24, 0x42	; 66
     276:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__DATA_REGION_ORIGIN__+0x21>
		TIMSK1 = ((1<<ICIE1) | (1 << TOIE1));
     27a:	81 e2       	ldi	r24, 0x21	; 33
     27c:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__DATA_REGION_ORIGIN__+0xf>
     280:	08 95       	ret

00000282 <init_timer2>:
}
/* Initializing Timer2 registers */
void init_timer2() {
	
	TCCR2A = (1<<7)|(1<<0); // Clear OC2A on Compare Match when Upcounting , Phase Correct PWM Mode
     282:	81 e8       	ldi	r24, 0x81	; 129
     284:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__DATA_REGION_ORIGIN__+0x50>
	TCCR2B = (6<<0); // Phase Correct PWM Mode, prescalar 256
     288:	86 e0       	ldi	r24, 0x06	; 6
     28a:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__DATA_REGION_ORIGIN__+0x51>
	OCR2A = 0; // turn off led
     28e:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__DATA_REGION_ORIGIN__+0x53>
     292:	08 95       	ret

00000294 <sendmsg>:

/* sendmsg function*/
void sendmsg (char *s)
{
	qcntr = 0;    /*preset indices*/
	sndcntr = 1;  /*set to one because first character already sent*/
     294:	21 e0       	ldi	r18, 0x01	; 1
     296:	20 93 7e 02 	sts	0x027E, r18	; 0x80027e <sndcntr>
	
	queue[qcntr++] = 0x0d;   /*put CRLF into the queue first*/
     29a:	e8 e8       	ldi	r30, 0x88	; 136
     29c:	f2 e0       	ldi	r31, 0x02	; 2
     29e:	2d e0       	ldi	r18, 0x0D	; 13
     2a0:	20 83       	st	Z, r18
	queue[qcntr++] = 0x0a;
     2a2:	22 e0       	ldi	r18, 0x02	; 2
     2a4:	20 93 7f 02 	sts	0x027F, r18	; 0x80027f <qcntr>
     2a8:	2a e0       	ldi	r18, 0x0A	; 10
     2aa:	21 83       	std	Z+1, r18	; 0x01
	while (*s)
     2ac:	fc 01       	movw	r30, r24
     2ae:	20 81       	ld	r18, Z
     2b0:	22 23       	and	r18, r18
     2b2:	79 f0       	breq	.+30     	; 0x2d2 <sendmsg+0x3e>
     2b4:	dc 01       	movw	r26, r24
	queue[qcntr++] = *s++;   /*put characters into queue*/
     2b6:	e0 91 7f 02 	lds	r30, 0x027F	; 0x80027f <qcntr>
     2ba:	81 e0       	ldi	r24, 0x01	; 1
     2bc:	8e 0f       	add	r24, r30
     2be:	80 93 7f 02 	sts	0x027F, r24	; 0x80027f <qcntr>
     2c2:	8d 91       	ld	r24, X+
     2c4:	f0 e0       	ldi	r31, 0x00	; 0
     2c6:	e8 57       	subi	r30, 0x78	; 120
     2c8:	fd 4f       	sbci	r31, 0xFD	; 253
     2ca:	80 83       	st	Z, r24
	qcntr = 0;    /*preset indices*/
	sndcntr = 1;  /*set to one because first character already sent*/
	
	queue[qcntr++] = 0x0d;   /*put CRLF into the queue first*/
	queue[qcntr++] = 0x0a;
	while (*s)
     2cc:	8c 91       	ld	r24, X
     2ce:	81 11       	cpse	r24, r1
     2d0:	f2 cf       	rjmp	.-28     	; 0x2b6 <sendmsg+0x22>
	queue[qcntr++] = *s++;   /*put characters into queue*/
	
	UDR0 = queue[0];  /*send first character to start process*/
     2d2:	80 91 88 02 	lds	r24, 0x0288	; 0x800288 <queue>
     2d6:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
     2da:	08 95       	ret

000002dc <main>:
unsigned int enContDisplay = 0; //enable continuous display


/* Main */
int main(void)
{
     2dc:	cf 93       	push	r28
     2de:	df 93       	push	r29
     2e0:	cd b7       	in	r28, 0x3d	; 61
     2e2:	de b7       	in	r29, 0x3e	; 62
     2e4:	e8 97       	sbiw	r28, 0x38	; 56
     2e6:	0f b6       	in	r0, 0x3f	; 63
     2e8:	f8 94       	cli
     2ea:	de bf       	out	0x3e, r29	; 62
     2ec:	0f be       	out	0x3f, r0	; 63
     2ee:	cd bf       	out	0x3d, r28	; 61
	char ch;  /* character variable for received character*/
	char data[30]; // used to set of string in sprintf
	char str_temp[7]; // string written to user for temperature in /centigrade
	char str_adc_mV[9]; // string written to user for adc in mV

	start_edge = 0;
     2f0:	10 92 c4 02 	sts	0x02C4, r1	; 0x8002c4 <start_edge+0x1>
     2f4:	10 92 c3 02 	sts	0x02C3, r1	; 0x8002c3 <start_edge>
	timecount1 = 0;							/* Initialise timecount  */
     2f8:	10 92 d0 02 	sts	0x02D0, r1	; 0x8002d0 <timecount1+0x1>
     2fc:	10 92 cf 02 	sts	0x02CF, r1	; 0x8002cf <timecount1>
	Time_Period_High = 0;
     300:	10 92 c6 02 	sts	0x02C6, r1	; 0x8002c6 <Time_Period_High+0x1>
     304:	10 92 c5 02 	sts	0x02C5, r1	; 0x8002c5 <Time_Period_High>
	Time_Period_Low = 0;
     308:	10 92 c8 02 	sts	0x02C8, r1	; 0x8002c8 <Time_Period_Low+0x1>
     30c:	10 92 c7 02 	sts	0x02C7, r1	; 0x8002c7 <Time_Period_Low>
	Time_Period = 0;						/* Initialise Time_Period - not measured yet  */
     310:	10 92 84 02 	sts	0x0284, r1	; 0x800284 <Time_Period>
     314:	10 92 85 02 	sts	0x0285, r1	; 0x800285 <Time_Period+0x1>
     318:	10 92 86 02 	sts	0x0286, r1	; 0x800286 <Time_Period+0x2>
     31c:	10 92 87 02 	sts	0x0287, r1	; 0x800287 <Time_Period+0x3>
	
	int Brightness; // variable that user will enter to set brightness of LED
	
	/* Calling Initialized Registers */
	init_ports(); // initializes ports
     320:	0e 94 22 01 	call	0x244	; 0x244 <init_ports>
	init_USART(); // initializes USART
     324:	0e 94 26 01 	call	0x24c	; 0x24c <init_USART>
	init_adc(); // initializes adc
     328:	0e 94 18 01 	call	0x230	; 0x230 <init_adc>
	init_timer0(); // initializes timer0
     32c:	0e 94 30 01 	call	0x260	; 0x260 <init_timer0>
	init_timer1(); // initializes timer1
     330:	0e 94 38 01 	call	0x270	; 0x270 <init_timer1>
	init_timer2(); // initializes timer2
     334:	0e 94 41 01 	call	0x282	; 0x282 <init_timer2>

	sei(); /*global interrupt enable */
     338:	78 94       	sei

	while (1)
	{	
		if (UCSR0A & (1<<RXC0)) /*check for character received*/
     33a:	0f 2e       	mov	r0, r31
     33c:	f0 ec       	ldi	r31, 0xC0	; 192
     33e:	2f 2e       	mov	r2, r31
     340:	31 2c       	mov	r3, r1
     342:	f0 2d       	mov	r31, r0
		{
			ch = UDR0;    /*get character sent from PC*/
     344:	0f 2e       	mov	r0, r31
     346:	f6 ec       	ldi	r31, 0xC6	; 198
     348:	cf 2e       	mov	r12, r31
     34a:	d1 2c       	mov	r13, r1
     34c:	f0 2d       	mov	r31, r0
					sendmsg(data);
				break;
				/* Report total time */
				case 'W':
				case 'w':
					sprintf(data, "Time period = %lu", Time_Period); // Report total time
     34e:	ce 01       	movw	r24, r28
     350:	01 96       	adiw	r24, 0x01	; 1
     352:	7c 01       	movw	r14, r24
				
				/* Report ADC Value in mV to user */
				case 'V':
				case 'v':
					adc_mV = ((adc_reading/divider)*5000); // Calculates ADC in mV
					dtostrf(adc_mV,8,2,str_adc_mV);  // Changes value from double to string
     354:	fe 01       	movw	r30, r28
     356:	b6 96       	adiw	r30, 0x26	; 38
     358:	f8 ab       	std	Y+48, r31	; 0x30
     35a:	ef a7       	std	Y+47, r30	; 0x2f
				/* Report Temperature to user */
				case 'T':
				case 't':
					if (input == Temp) {
						temp = (adc_reading*500)/divider; 
						dtostrf(temp,6,2,str_temp); // Changes value from double to string
     35c:	4e 96       	adiw	r24, 0x1e	; 30
     35e:	9a ab       	std	Y+50, r25	; 0x32
     360:	89 ab       	std	Y+49, r24	; 0x31
					sendmsg(data);
				break;
				/* Report total time */
				case 'W':
				case 'w':
					sprintf(data, "Time period = %lu", Time_Period); // Report total time
     362:	eb aa       	std	Y+51, r14	; 0x33
     364:	fc aa       	std	Y+52, r15	; 0x34
				
				/* Report ADC Value in mV to user */
				case 'V':
				case 'v':
					adc_mV = ((adc_reading/divider)*5000); // Calculates ADC in mV
					dtostrf(adc_mV,8,2,str_adc_mV);  // Changes value from double to string
     366:	9f a5       	ldd	r25, Y+47	; 0x2f
     368:	9d ab       	std	Y+53, r25	; 0x35
     36a:	e8 a9       	ldd	r30, Y+48	; 0x30
     36c:	ee ab       	std	Y+54, r30	; 0x36
				/* Report Temperature to user */
				case 'T':
				case 't':
					if (input == Temp) {
						temp = (adc_reading*500)/divider; 
						dtostrf(temp,6,2,str_temp); // Changes value from double to string
     36e:	f9 a9       	ldd	r31, Y+49	; 0x31
     370:	ff ab       	std	Y+55, r31	; 0x37
     372:	2a a9       	ldd	r18, Y+50	; 0x32
     374:	28 af       	std	Y+56, r18	; 0x38
					sendmsg(data);
				break;
				/* Report time period high */
				case 'H':
				case 'h':
					sprintf(data, "Time period high = %d", Time_Period_High); // Report time high
     376:	0f 2e       	mov	r0, r31
     378:	f4 e5       	ldi	r31, 0x54	; 84
     37a:	6f 2e       	mov	r6, r31
     37c:	f2 e0       	ldi	r31, 0x02	; 2
     37e:	7f 2e       	mov	r7, r31
     380:	f0 2d       	mov	r31, r0
				break;
				
				/* Report time period low */
				case 'G':
				case 'g':
					sprintf(data, "Time period low = %d", Time_Period_Low); // Report time low
     382:	0f 2e       	mov	r0, r31
     384:	ff e3       	ldi	r31, 0x3F	; 63
     386:	8f 2e       	mov	r8, r31
     388:	f2 e0       	ldi	r31, 0x02	; 2
     38a:	9f 2e       	mov	r9, r31
     38c:	f0 2d       	mov	r31, r0
				break;
				
				/* Report OCR2A Value */
				case 'S':
				case 's':
					sprintf(data, "OCR2A = %d", OCR2A); // Report OCR2A value
     38e:	0f 2e       	mov	r0, r31
     390:	f4 e3       	ldi	r31, 0x34	; 52
     392:	af 2e       	mov	r10, r31
     394:	f2 e0       	ldi	r31, 0x02	; 2
     396:	bf 2e       	mov	r11, r31
     398:	f0 2d       	mov	r31, r0
				break;
				
				/* Report Values Continuously */
				case 'C':
				case 'c':
					enContDisplay = 1; //enable continuous adc display
     39a:	44 24       	eor	r4, r4
     39c:	43 94       	inc	r4
     39e:	51 2c       	mov	r5, r1

	sei(); /*global interrupt enable */

	while (1)
	{	
		if (UCSR0A & (1<<RXC0)) /*check for character received*/
     3a0:	f1 01       	movw	r30, r2
     3a2:	80 81       	ld	r24, Z
     3a4:	88 23       	and	r24, r24
     3a6:	0c f0       	brlt	.+2      	; 0x3aa <main+0xce>
     3a8:	77 c1       	rjmp	.+750    	; 0x698 <__LOCK_REGION_LENGTH__+0x298>
		{
			ch = UDR0;    /*get character sent from PC*/
     3aa:	f6 01       	movw	r30, r12
     3ac:	60 81       	ld	r22, Z
			switch (ch) { //character input
     3ae:	86 2f       	mov	r24, r22
     3b0:	90 e0       	ldi	r25, 0x00	; 0
     3b2:	fc 01       	movw	r30, r24
     3b4:	f0 97       	sbiw	r30, 0x30	; 48
     3b6:	e8 34       	cpi	r30, 0x48	; 72
     3b8:	f1 05       	cpc	r31, r1
     3ba:	08 f0       	brcs	.+2      	; 0x3be <main+0xe2>
     3bc:	69 c1       	rjmp	.+722    	; 0x690 <__LOCK_REGION_LENGTH__+0x290>
     3be:	ec 5c       	subi	r30, 0xCC	; 204
     3c0:	ff 4f       	sbci	r31, 0xFF	; 255
     3c2:	0c 94 4d 06 	jmp	0xc9a	; 0xc9a <__tablejump2__>
				
				/* Sets ADC to ADC2 */
				case 'M':
				case 'm':
					input = Temp;
     3c6:	82 e0       	ldi	r24, 0x02	; 2
     3c8:	80 93 ba 02 	sts	0x02BA, r24	; 0x8002ba <input>
					sendmsg(msg2);
     3cc:	82 ec       	ldi	r24, 0xC2	; 194
     3ce:	91 e0       	ldi	r25, 0x01	; 1
     3d0:	0e 94 4a 01 	call	0x294	; 0x294 <sendmsg>
				break;
     3d4:	61 c1       	rjmp	.+706    	; 0x698 <__LOCK_REGION_LENGTH__+0x298>
				
				/* Sets ADC to ADC1 */
				case 'N':
				case 'n':
					input = LDR;
     3d6:	81 e0       	ldi	r24, 0x01	; 1
     3d8:	80 93 ba 02 	sts	0x02BA, r24	; 0x8002ba <input>
					sendmsg(msg3);
     3dc:	82 eb       	ldi	r24, 0xB2	; 178
     3de:	91 e0       	ldi	r25, 0x01	; 1
     3e0:	0e 94 4a 01 	call	0x294	; 0x294 <sendmsg>
				break;
     3e4:	59 c1       	rjmp	.+690    	; 0x698 <__LOCK_REGION_LENGTH__+0x298>
				
				/* Sets ADC to ADC0 */
				case 'P':
				case 'p':
					input = Volt;
     3e6:	10 92 ba 02 	sts	0x02BA, r1	; 0x8002ba <input>
					sendmsg(msg4);
     3ea:	88 e9       	ldi	r24, 0x98	; 152
     3ec:	91 e0       	ldi	r25, 0x01	; 1
     3ee:	0e 94 4a 01 	call	0x294	; 0x294 <sendmsg>
				break;
     3f2:	52 c1       	rjmp	.+676    	; 0x698 <__LOCK_REGION_LENGTH__+0x298>
				
				/* Report Temperature to user */
				case 'T':
				case 't':
					if (input == Temp) {
     3f4:	80 91 ba 02 	lds	r24, 0x02BA	; 0x8002ba <input>
     3f8:	82 30       	cpi	r24, 0x02	; 2
     3fa:	e9 f5       	brne	.+122    	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
						temp = (adc_reading*500)/divider; 
     3fc:	20 91 bb 02 	lds	r18, 0x02BB	; 0x8002bb <adc_reading>
     400:	30 91 bc 02 	lds	r19, 0x02BC	; 0x8002bc <adc_reading+0x1>
     404:	40 91 bd 02 	lds	r20, 0x02BD	; 0x8002bd <adc_reading+0x2>
     408:	50 91 be 02 	lds	r21, 0x02BE	; 0x8002be <adc_reading+0x3>
     40c:	a4 ef       	ldi	r26, 0xF4	; 244
     40e:	b1 e0       	ldi	r27, 0x01	; 1
     410:	0e 94 53 06 	call	0xca6	; 0xca6 <__muluhisi3>
     414:	0e 94 52 05 	call	0xaa4	; 0xaa4 <__floatunsisf>
     418:	20 e0       	ldi	r18, 0x00	; 0
     41a:	30 e0       	ldi	r19, 0x00	; 0
     41c:	40 e8       	ldi	r20, 0x80	; 128
     41e:	5a e3       	ldi	r21, 0x3A	; 58
     420:	0e 94 b8 05 	call	0xb70	; 0xb70 <__mulsf3>
     424:	0e 94 23 05 	call	0xa46	; 0xa46 <__fixunssfsi>
     428:	60 93 bf 02 	sts	0x02BF, r22	; 0x8002bf <temp>
     42c:	70 93 c0 02 	sts	0x02C0, r23	; 0x8002c0 <temp+0x1>
     430:	80 93 c1 02 	sts	0x02C1, r24	; 0x8002c1 <temp+0x2>
     434:	90 93 c2 02 	sts	0x02C2, r25	; 0x8002c2 <temp+0x3>
						dtostrf(temp,6,2,str_temp); // Changes value from double to string
     438:	0e 94 52 05 	call	0xaa4	; 0xaa4 <__floatunsisf>
     43c:	0f a9       	ldd	r16, Y+55	; 0x37
     43e:	18 ad       	ldd	r17, Y+56	; 0x38
     440:	22 e0       	ldi	r18, 0x02	; 2
     442:	46 e0       	ldi	r20, 0x06	; 6
     444:	0e 94 6d 06 	call	0xcda	; 0xcda <dtostrf>
						sprintf(data,"LM35 Temperature = %s deg C",str_temp); //Report Temperature value
     448:	fa a9       	ldd	r31, Y+50	; 0x32
     44a:	ff 93       	push	r31
     44c:	29 a9       	ldd	r18, Y+49	; 0x31
     44e:	2f 93       	push	r18
     450:	86 ef       	ldi	r24, 0xF6	; 246
     452:	91 e0       	ldi	r25, 0x01	; 1
     454:	9f 93       	push	r25
     456:	8f 93       	push	r24
     458:	ff 92       	push	r15
     45a:	ef 92       	push	r14
     45c:	0e 94 8d 06 	call	0xd1a	; 0xd1a <sprintf>
						sendmsg(data);
     460:	8b a9       	ldd	r24, Y+51	; 0x33
     462:	9c a9       	ldd	r25, Y+52	; 0x34
     464:	0e 94 4a 01 	call	0x294	; 0x294 <sendmsg>
     468:	0f 90       	pop	r0
     46a:	0f 90       	pop	r0
     46c:	0f 90       	pop	r0
     46e:	0f 90       	pop	r0
     470:	0f 90       	pop	r0
     472:	0f 90       	pop	r0
     474:	11 c1       	rjmp	.+546    	; 0x698 <__LOCK_REGION_LENGTH__+0x298>
					} else {
						//Give warning
						sendmsg(msg5);
     476:	86 e6       	ldi	r24, 0x66	; 102
     478:	91 e0       	ldi	r25, 0x01	; 1
     47a:	0e 94 4a 01 	call	0x294	; 0x294 <sendmsg>
     47e:	0c c1       	rjmp	.+536    	; 0x698 <__LOCK_REGION_LENGTH__+0x298>
				break;
				
				/* Report Bright/Dark to user */
				case 'L':
				case 'l':
					if (input == LDR) {
     480:	80 91 ba 02 	lds	r24, 0x02BA	; 0x8002ba <input>
     484:	81 30       	cpi	r24, 0x01	; 1
     486:	b9 f4       	brne	.+46     	; 0x4b6 <__LOCK_REGION_LENGTH__+0xb6>
							if(adc_reading>Light_Threshold)
     488:	80 91 bb 02 	lds	r24, 0x02BB	; 0x8002bb <adc_reading>
     48c:	90 91 bc 02 	lds	r25, 0x02BC	; 0x8002bc <adc_reading+0x1>
     490:	a0 91 bd 02 	lds	r26, 0x02BD	; 0x8002bd <adc_reading+0x2>
     494:	b0 91 be 02 	lds	r27, 0x02BE	; 0x8002be <adc_reading+0x3>
     498:	81 30       	cpi	r24, 0x01	; 1
     49a:	92 40       	sbci	r25, 0x02	; 2
     49c:	a1 05       	cpc	r26, r1
     49e:	b1 05       	cpc	r27, r1
     4a0:	28 f0       	brcs	.+10     	; 0x4ac <__LOCK_REGION_LENGTH__+0xac>
							{
								sendmsg(msg7); // Report Bright
     4a2:	8f e2       	ldi	r24, 0x2F	; 47
     4a4:	91 e0       	ldi	r25, 0x01	; 1
     4a6:	0e 94 4a 01 	call	0x294	; 0x294 <sendmsg>
     4aa:	f6 c0       	rjmp	.+492    	; 0x698 <__LOCK_REGION_LENGTH__+0x298>
							}
							else
							{
								sendmsg(msg8); // Report Dark
     4ac:	84 e2       	ldi	r24, 0x24	; 36
     4ae:	91 e0       	ldi	r25, 0x01	; 1
     4b0:	0e 94 4a 01 	call	0x294	; 0x294 <sendmsg>
     4b4:	f1 c0       	rjmp	.+482    	; 0x698 <__LOCK_REGION_LENGTH__+0x298>
							}
					} else {
						//Give warning
						sendmsg(msg6);
     4b6:	8c e3       	ldi	r24, 0x3C	; 60
     4b8:	91 e0       	ldi	r25, 0x01	; 1
     4ba:	0e 94 4a 01 	call	0x294	; 0x294 <sendmsg>
     4be:	ec c0       	rjmp	.+472    	; 0x698 <__LOCK_REGION_LENGTH__+0x298>
				break;
				
				/* Report ADC Value to user */
				case 'A':
				case 'a':
					sprintf(data, "ADC value = %lu", adc_reading); //Report ADC value
     4c0:	80 91 be 02 	lds	r24, 0x02BE	; 0x8002be <adc_reading+0x3>
     4c4:	8f 93       	push	r24
     4c6:	80 91 bd 02 	lds	r24, 0x02BD	; 0x8002bd <adc_reading+0x2>
     4ca:	8f 93       	push	r24
     4cc:	80 91 bc 02 	lds	r24, 0x02BC	; 0x8002bc <adc_reading+0x1>
     4d0:	8f 93       	push	r24
     4d2:	80 91 bb 02 	lds	r24, 0x02BB	; 0x8002bb <adc_reading>
     4d6:	8f 93       	push	r24
     4d8:	82 e1       	ldi	r24, 0x12	; 18
     4da:	92 e0       	ldi	r25, 0x02	; 2
     4dc:	9f 93       	push	r25
     4de:	8f 93       	push	r24
     4e0:	ff 92       	push	r15
     4e2:	ef 92       	push	r14
     4e4:	0e 94 8d 06 	call	0xd1a	; 0xd1a <sprintf>
					sendmsg(data);
     4e8:	8b a9       	ldd	r24, Y+51	; 0x33
     4ea:	9c a9       	ldd	r25, Y+52	; 0x34
     4ec:	0e 94 4a 01 	call	0x294	; 0x294 <sendmsg>
				break;
     4f0:	0f b6       	in	r0, 0x3f	; 63
     4f2:	f8 94       	cli
     4f4:	de bf       	out	0x3e, r29	; 62
     4f6:	0f be       	out	0x3f, r0	; 63
     4f8:	cd bf       	out	0x3d, r28	; 61
     4fa:	ce c0       	rjmp	.+412    	; 0x698 <__LOCK_REGION_LENGTH__+0x298>
				
				/* Report ADC Value in mV to user */
				case 'V':
				case 'v':
					adc_mV = ((adc_reading/divider)*5000); // Calculates ADC in mV
     4fc:	60 91 bb 02 	lds	r22, 0x02BB	; 0x8002bb <adc_reading>
     500:	70 91 bc 02 	lds	r23, 0x02BC	; 0x8002bc <adc_reading+0x1>
     504:	80 91 bd 02 	lds	r24, 0x02BD	; 0x8002bd <adc_reading+0x2>
     508:	90 91 be 02 	lds	r25, 0x02BE	; 0x8002be <adc_reading+0x3>
     50c:	0e 94 52 05 	call	0xaa4	; 0xaa4 <__floatunsisf>
     510:	20 e0       	ldi	r18, 0x00	; 0
     512:	30 e0       	ldi	r19, 0x00	; 0
     514:	40 e8       	ldi	r20, 0x80	; 128
     516:	5a e3       	ldi	r21, 0x3A	; 58
     518:	0e 94 b8 05 	call	0xb70	; 0xb70 <__mulsf3>
     51c:	20 e0       	ldi	r18, 0x00	; 0
     51e:	30 e4       	ldi	r19, 0x40	; 64
     520:	4c e9       	ldi	r20, 0x9C	; 156
     522:	55 e4       	ldi	r21, 0x45	; 69
     524:	0e 94 b8 05 	call	0xb70	; 0xb70 <__mulsf3>
     528:	0e 94 23 05 	call	0xa46	; 0xa46 <__fixunssfsi>
     52c:	60 93 80 02 	sts	0x0280, r22	; 0x800280 <adc_mV>
     530:	70 93 81 02 	sts	0x0281, r23	; 0x800281 <adc_mV+0x1>
     534:	80 93 82 02 	sts	0x0282, r24	; 0x800282 <adc_mV+0x2>
     538:	90 93 83 02 	sts	0x0283, r25	; 0x800283 <adc_mV+0x3>
					dtostrf(adc_mV,8,2,str_adc_mV);  // Changes value from double to string
     53c:	0e 94 52 05 	call	0xaa4	; 0xaa4 <__floatunsisf>
     540:	0d a9       	ldd	r16, Y+53	; 0x35
     542:	1e a9       	ldd	r17, Y+54	; 0x36
     544:	22 e0       	ldi	r18, 0x02	; 2
     546:	48 e0       	ldi	r20, 0x08	; 8
     548:	0e 94 6d 06 	call	0xcda	; 0xcda <dtostrf>
					sprintf(data, "ADC value = %s mV",str_adc_mV); //Report ADC value in mV
     54c:	98 a9       	ldd	r25, Y+48	; 0x30
     54e:	9f 93       	push	r25
     550:	ef a5       	ldd	r30, Y+47	; 0x2f
     552:	ef 93       	push	r30
     554:	82 e2       	ldi	r24, 0x22	; 34
     556:	92 e0       	ldi	r25, 0x02	; 2
     558:	9f 93       	push	r25
     55a:	8f 93       	push	r24
     55c:	ff 92       	push	r15
     55e:	ef 92       	push	r14
     560:	0e 94 8d 06 	call	0xd1a	; 0xd1a <sprintf>
					sendmsg(data);	
     564:	8b a9       	ldd	r24, Y+51	; 0x33
     566:	9c a9       	ldd	r25, Y+52	; 0x34
     568:	0e 94 4a 01 	call	0x294	; 0x294 <sendmsg>
				break;
     56c:	0f 90       	pop	r0
     56e:	0f 90       	pop	r0
     570:	0f 90       	pop	r0
     572:	0f 90       	pop	r0
     574:	0f 90       	pop	r0
     576:	0f 90       	pop	r0
     578:	8f c0       	rjmp	.+286    	; 0x698 <__LOCK_REGION_LENGTH__+0x298>
				
				/* Report Values Continuously */
				case 'C':
				case 'c':
					enContDisplay = 1; //enable continuous adc display
     57a:	50 92 7d 02 	sts	0x027D, r5	; 0x80027d <__data_end+0x1>
     57e:	40 92 7c 02 	sts	0x027C, r4	; 0x80027c <__data_end>
				break;
     582:	8a c0       	rjmp	.+276    	; 0x698 <__LOCK_REGION_LENGTH__+0x298>
				
				/* Stop Reporting Values Continuously */
				case 'E':
				case 'e':
					if(enContDisplay==0) {
     584:	80 91 7c 02 	lds	r24, 0x027C	; 0x80027c <__data_end>
     588:	90 91 7d 02 	lds	r25, 0x027D	; 0x80027d <__data_end+0x1>
     58c:	89 2b       	or	r24, r25
     58e:	21 f4       	brne	.+8      	; 0x598 <__LOCK_REGION_LENGTH__+0x198>
						sendmsg(msg9);
     590:	80 e0       	ldi	r24, 0x00	; 0
     592:	91 e0       	ldi	r25, 0x01	; 1
     594:	0e 94 4a 01 	call	0x294	; 0x294 <sendmsg>
					}
					enContDisplay = 0; //disable continuous adc display
     598:	10 92 7d 02 	sts	0x027D, r1	; 0x80027d <__data_end+0x1>
     59c:	10 92 7c 02 	sts	0x027C, r1	; 0x80027c <__data_end>
				break;
     5a0:	7b c0       	rjmp	.+246    	; 0x698 <__LOCK_REGION_LENGTH__+0x298>
				
				/* Report OCR2A Value */
				case 'S':
				case 's':
					sprintf(data, "OCR2A = %d", OCR2A); // Report OCR2A value
     5a2:	e3 eb       	ldi	r30, 0xB3	; 179
     5a4:	f0 e0       	ldi	r31, 0x00	; 0
     5a6:	80 81       	ld	r24, Z
     5a8:	1f 92       	push	r1
     5aa:	8f 93       	push	r24
     5ac:	bf 92       	push	r11
     5ae:	af 92       	push	r10
     5b0:	ff 92       	push	r15
     5b2:	ef 92       	push	r14
     5b4:	0e 94 8d 06 	call	0xd1a	; 0xd1a <sprintf>
					sendmsg(data);
     5b8:	8b a9       	ldd	r24, Y+51	; 0x33
     5ba:	9c a9       	ldd	r25, Y+52	; 0x34
     5bc:	0e 94 4a 01 	call	0x294	; 0x294 <sendmsg>
				break;
     5c0:	0f 90       	pop	r0
     5c2:	0f 90       	pop	r0
     5c4:	0f 90       	pop	r0
     5c6:	0f 90       	pop	r0
     5c8:	0f 90       	pop	r0
     5ca:	0f 90       	pop	r0
     5cc:	65 c0       	rjmp	.+202    	; 0x698 <__LOCK_REGION_LENGTH__+0x298>
				
				/* Report time period low */
				case 'G':
				case 'g':
					sprintf(data, "Time period low = %d", Time_Period_Low); // Report time low
     5ce:	80 91 c8 02 	lds	r24, 0x02C8	; 0x8002c8 <Time_Period_Low+0x1>
     5d2:	8f 93       	push	r24
     5d4:	80 91 c7 02 	lds	r24, 0x02C7	; 0x8002c7 <Time_Period_Low>
     5d8:	8f 93       	push	r24
     5da:	9f 92       	push	r9
     5dc:	8f 92       	push	r8
     5de:	ff 92       	push	r15
     5e0:	ef 92       	push	r14
     5e2:	0e 94 8d 06 	call	0xd1a	; 0xd1a <sprintf>
					sendmsg(data);
     5e6:	8b a9       	ldd	r24, Y+51	; 0x33
     5e8:	9c a9       	ldd	r25, Y+52	; 0x34
     5ea:	0e 94 4a 01 	call	0x294	; 0x294 <sendmsg>
				break;
     5ee:	0f 90       	pop	r0
     5f0:	0f 90       	pop	r0
     5f2:	0f 90       	pop	r0
     5f4:	0f 90       	pop	r0
     5f6:	0f 90       	pop	r0
     5f8:	0f 90       	pop	r0
     5fa:	4e c0       	rjmp	.+156    	; 0x698 <__LOCK_REGION_LENGTH__+0x298>
				/* Report time period high */
				case 'H':
				case 'h':
					sprintf(data, "Time period high = %d", Time_Period_High); // Report time high
     5fc:	80 91 c6 02 	lds	r24, 0x02C6	; 0x8002c6 <Time_Period_High+0x1>
     600:	8f 93       	push	r24
     602:	80 91 c5 02 	lds	r24, 0x02C5	; 0x8002c5 <Time_Period_High>
     606:	8f 93       	push	r24
     608:	7f 92       	push	r7
     60a:	6f 92       	push	r6
     60c:	ff 92       	push	r15
     60e:	ef 92       	push	r14
     610:	0e 94 8d 06 	call	0xd1a	; 0xd1a <sprintf>
					sendmsg(data);
     614:	8b a9       	ldd	r24, Y+51	; 0x33
     616:	9c a9       	ldd	r25, Y+52	; 0x34
     618:	0e 94 4a 01 	call	0x294	; 0x294 <sendmsg>
				break;
     61c:	0f 90       	pop	r0
     61e:	0f 90       	pop	r0
     620:	0f 90       	pop	r0
     622:	0f 90       	pop	r0
     624:	0f 90       	pop	r0
     626:	0f 90       	pop	r0
     628:	37 c0       	rjmp	.+110    	; 0x698 <__LOCK_REGION_LENGTH__+0x298>
				/* Report total time */
				case 'W':
				case 'w':
					sprintf(data, "Time period = %lu", Time_Period); // Report total time
     62a:	80 91 87 02 	lds	r24, 0x0287	; 0x800287 <Time_Period+0x3>
     62e:	8f 93       	push	r24
     630:	80 91 86 02 	lds	r24, 0x0286	; 0x800286 <Time_Period+0x2>
     634:	8f 93       	push	r24
     636:	80 91 85 02 	lds	r24, 0x0285	; 0x800285 <Time_Period+0x1>
     63a:	8f 93       	push	r24
     63c:	80 91 84 02 	lds	r24, 0x0284	; 0x800284 <Time_Period>
     640:	8f 93       	push	r24
     642:	8a e6       	ldi	r24, 0x6A	; 106
     644:	92 e0       	ldi	r25, 0x02	; 2
     646:	9f 93       	push	r25
     648:	8f 93       	push	r24
     64a:	ff 92       	push	r15
     64c:	ef 92       	push	r14
     64e:	0e 94 8d 06 	call	0xd1a	; 0xd1a <sprintf>
					sendmsg(data);
     652:	8b a9       	ldd	r24, Y+51	; 0x33
     654:	9c a9       	ldd	r25, Y+52	; 0x34
     656:	0e 94 4a 01 	call	0x294	; 0x294 <sendmsg>
				break;
     65a:	0f b6       	in	r0, 0x3f	; 63
     65c:	f8 94       	cli
     65e:	de bf       	out	0x3e, r29	; 62
     660:	0f be       	out	0x3f, r0	; 63
     662:	cd bf       	out	0x3d, r28	; 61
     664:	19 c0       	rjmp	.+50     	; 0x698 <__LOCK_REGION_LENGTH__+0x298>
				
				/* Sets LED Brightness Level */
				case '0' ... '9':
					
					Brightness = ch - '0';
					OCR2A = Brightness * Brightness_Multiplier;
     666:	70 e0       	ldi	r23, 0x00	; 0
     668:	60 53       	subi	r22, 0x30	; 48
     66a:	71 09       	sbc	r23, r1
     66c:	07 2e       	mov	r0, r23
     66e:	00 0c       	add	r0, r0
     670:	88 0b       	sbc	r24, r24
     672:	99 0b       	sbc	r25, r25
     674:	0e 94 54 05 	call	0xaa8	; 0xaa8 <__floatsisf>
     678:	20 e0       	ldi	r18, 0x00	; 0
     67a:	30 e0       	ldi	r19, 0x00	; 0
     67c:	4c ec       	ldi	r20, 0xCC	; 204
     67e:	51 e4       	ldi	r21, 0x41	; 65
     680:	0e 94 b8 05 	call	0xb70	; 0xb70 <__mulsf3>
     684:	0e 94 23 05 	call	0xa46	; 0xa46 <__fixunssfsi>
     688:	e3 eb       	ldi	r30, 0xB3	; 179
     68a:	f0 e0       	ldi	r31, 0x00	; 0
     68c:	60 83       	st	Z, r22
				break;
     68e:	04 c0       	rjmp	.+8      	; 0x698 <__LOCK_REGION_LENGTH__+0x298>
				
				default:
				sendmsg(msg1); /*send default message*/
     690:	81 ee       	ldi	r24, 0xE1	; 225
     692:	91 e0       	ldi	r25, 0x01	; 1
     694:	0e 94 4a 01 	call	0x294	; 0x294 <sendmsg>
			}
		}
	/*Continuous Loop */   
	
		if(new_adc_data) {
     698:	80 91 d1 02 	lds	r24, 0x02D1	; 0x8002d1 <new_adc_data>
     69c:	90 91 d2 02 	lds	r25, 0x02D2	; 0x8002d2 <new_adc_data+0x1>
     6a0:	89 2b       	or	r24, r25
     6a2:	09 f4       	brne	.+2      	; 0x6a6 <__LOCK_REGION_LENGTH__+0x2a6>
     6a4:	7d ce       	rjmp	.-774    	; 0x3a0 <main+0xc4>
			if(enContDisplay) {
     6a6:	80 91 7c 02 	lds	r24, 0x027C	; 0x80027c <__data_end>
     6aa:	90 91 7d 02 	lds	r25, 0x027D	; 0x80027d <__data_end+0x1>
     6ae:	89 2b       	or	r24, r25
     6b0:	09 f4       	brne	.+2      	; 0x6b4 <__LOCK_REGION_LENGTH__+0x2b4>
     6b2:	d2 c0       	rjmp	.+420    	; 0x858 <__LOCK_REGION_LENGTH__+0x458>
				switch(input){
     6b4:	80 91 ba 02 	lds	r24, 0x02BA	; 0x8002ba <input>
     6b8:	81 30       	cpi	r24, 0x01	; 1
     6ba:	f1 f1       	breq	.+124    	; 0x738 <__LOCK_REGION_LENGTH__+0x338>
     6bc:	20 f0       	brcs	.+8      	; 0x6c6 <__LOCK_REGION_LENGTH__+0x2c6>
     6be:	82 30       	cpi	r24, 0x02	; 2
     6c0:	09 f4       	brne	.+2      	; 0x6c4 <__LOCK_REGION_LENGTH__+0x2c4>
     6c2:	51 c0       	rjmp	.+162    	; 0x766 <__LOCK_REGION_LENGTH__+0x366>
     6c4:	8d c0       	rjmp	.+282    	; 0x7e0 <__LOCK_REGION_LENGTH__+0x3e0>
					case Volt:
						adc_mV = (adc_reading/divider);
     6c6:	60 91 bb 02 	lds	r22, 0x02BB	; 0x8002bb <adc_reading>
     6ca:	70 91 bc 02 	lds	r23, 0x02BC	; 0x8002bc <adc_reading+0x1>
     6ce:	80 91 bd 02 	lds	r24, 0x02BD	; 0x8002bd <adc_reading+0x2>
     6d2:	90 91 be 02 	lds	r25, 0x02BE	; 0x8002be <adc_reading+0x3>
     6d6:	0e 94 52 05 	call	0xaa4	; 0xaa4 <__floatunsisf>
     6da:	20 e0       	ldi	r18, 0x00	; 0
     6dc:	30 e0       	ldi	r19, 0x00	; 0
     6de:	40 e8       	ldi	r20, 0x80	; 128
     6e0:	5a e3       	ldi	r21, 0x3A	; 58
     6e2:	0e 94 b8 05 	call	0xb70	; 0xb70 <__mulsf3>
     6e6:	0e 94 23 05 	call	0xa46	; 0xa46 <__fixunssfsi>
     6ea:	60 93 80 02 	sts	0x0280, r22	; 0x800280 <adc_mV>
     6ee:	70 93 81 02 	sts	0x0281, r23	; 0x800281 <adc_mV+0x1>
     6f2:	80 93 82 02 	sts	0x0282, r24	; 0x800282 <adc_mV+0x2>
     6f6:	90 93 83 02 	sts	0x0283, r25	; 0x800283 <adc_mV+0x3>
						dtostrf(adc_mV,8,2,str_adc_mV);
     6fa:	0e 94 52 05 	call	0xaa4	; 0xaa4 <__floatunsisf>
     6fe:	0d a9       	ldd	r16, Y+53	; 0x35
     700:	1e a9       	ldd	r17, Y+54	; 0x36
     702:	22 e0       	ldi	r18, 0x02	; 2
     704:	48 e0       	ldi	r20, 0x08	; 8
     706:	0e 94 6d 06 	call	0xcda	; 0xcda <dtostrf>
						sprintf(data, "ADC value = %s mV",str_adc_mV); //Report ADC value in mV
     70a:	f8 a9       	ldd	r31, Y+48	; 0x30
     70c:	ff 93       	push	r31
     70e:	2f a5       	ldd	r18, Y+47	; 0x2f
     710:	2f 93       	push	r18
     712:	82 e2       	ldi	r24, 0x22	; 34
     714:	92 e0       	ldi	r25, 0x02	; 2
     716:	9f 93       	push	r25
     718:	8f 93       	push	r24
     71a:	ff 92       	push	r15
     71c:	ef 92       	push	r14
     71e:	0e 94 8d 06 	call	0xd1a	; 0xd1a <sprintf>
						sendmsg(data);
     722:	8b a9       	ldd	r24, Y+51	; 0x33
     724:	9c a9       	ldd	r25, Y+52	; 0x34
     726:	0e 94 4a 01 	call	0x294	; 0x294 <sendmsg>
					break;
     72a:	0f 90       	pop	r0
     72c:	0f 90       	pop	r0
     72e:	0f 90       	pop	r0
     730:	0f 90       	pop	r0
     732:	0f 90       	pop	r0
     734:	0f 90       	pop	r0
     736:	90 c0       	rjmp	.+288    	; 0x858 <__LOCK_REGION_LENGTH__+0x458>
					
					case LDR:
						if(adc_reading>Light_Threshold)
     738:	80 91 bb 02 	lds	r24, 0x02BB	; 0x8002bb <adc_reading>
     73c:	90 91 bc 02 	lds	r25, 0x02BC	; 0x8002bc <adc_reading+0x1>
     740:	a0 91 bd 02 	lds	r26, 0x02BD	; 0x8002bd <adc_reading+0x2>
     744:	b0 91 be 02 	lds	r27, 0x02BE	; 0x8002be <adc_reading+0x3>
     748:	81 30       	cpi	r24, 0x01	; 1
     74a:	92 40       	sbci	r25, 0x02	; 2
     74c:	a1 05       	cpc	r26, r1
     74e:	b1 05       	cpc	r27, r1
     750:	28 f0       	brcs	.+10     	; 0x75c <__LOCK_REGION_LENGTH__+0x35c>
						{
							sendmsg(msg7);
     752:	8f e2       	ldi	r24, 0x2F	; 47
     754:	91 e0       	ldi	r25, 0x01	; 1
     756:	0e 94 4a 01 	call	0x294	; 0x294 <sendmsg>
     75a:	7e c0       	rjmp	.+252    	; 0x858 <__LOCK_REGION_LENGTH__+0x458>
						}
						else
						{
							sendmsg(msg8);
     75c:	84 e2       	ldi	r24, 0x24	; 36
     75e:	91 e0       	ldi	r25, 0x01	; 1
     760:	0e 94 4a 01 	call	0x294	; 0x294 <sendmsg>
     764:	79 c0       	rjmp	.+242    	; 0x858 <__LOCK_REGION_LENGTH__+0x458>
						}
					break;
					
					case Temp:
						temp = (adc_reading*500)/divider; //(5v/1023)=4.887mV = 5mV, every deg c is 10Mv voltage change therefore divide by 2
     766:	20 91 bb 02 	lds	r18, 0x02BB	; 0x8002bb <adc_reading>
     76a:	30 91 bc 02 	lds	r19, 0x02BC	; 0x8002bc <adc_reading+0x1>
     76e:	40 91 bd 02 	lds	r20, 0x02BD	; 0x8002bd <adc_reading+0x2>
     772:	50 91 be 02 	lds	r21, 0x02BE	; 0x8002be <adc_reading+0x3>
     776:	a4 ef       	ldi	r26, 0xF4	; 244
     778:	b1 e0       	ldi	r27, 0x01	; 1
     77a:	0e 94 53 06 	call	0xca6	; 0xca6 <__muluhisi3>
     77e:	0e 94 52 05 	call	0xaa4	; 0xaa4 <__floatunsisf>
     782:	20 e0       	ldi	r18, 0x00	; 0
     784:	30 e0       	ldi	r19, 0x00	; 0
     786:	40 e8       	ldi	r20, 0x80	; 128
     788:	5a e3       	ldi	r21, 0x3A	; 58
     78a:	0e 94 b8 05 	call	0xb70	; 0xb70 <__mulsf3>
     78e:	0e 94 23 05 	call	0xa46	; 0xa46 <__fixunssfsi>
     792:	60 93 bf 02 	sts	0x02BF, r22	; 0x8002bf <temp>
     796:	70 93 c0 02 	sts	0x02C0, r23	; 0x8002c0 <temp+0x1>
     79a:	80 93 c1 02 	sts	0x02C1, r24	; 0x8002c1 <temp+0x2>
     79e:	90 93 c2 02 	sts	0x02C2, r25	; 0x8002c2 <temp+0x3>
						dtostrf(temp,6,2,str_temp); // Changes value from double to string
     7a2:	0e 94 52 05 	call	0xaa4	; 0xaa4 <__floatunsisf>
     7a6:	0f a9       	ldd	r16, Y+55	; 0x37
     7a8:	18 ad       	ldd	r17, Y+56	; 0x38
     7aa:	22 e0       	ldi	r18, 0x02	; 2
     7ac:	46 e0       	ldi	r20, 0x06	; 6
     7ae:	0e 94 6d 06 	call	0xcda	; 0xcda <dtostrf>
						sprintf(data,"LM35 Temperature = %s deg C",str_temp); //Report Temperature value
     7b2:	fa a9       	ldd	r31, Y+50	; 0x32
     7b4:	ff 93       	push	r31
     7b6:	29 a9       	ldd	r18, Y+49	; 0x31
     7b8:	2f 93       	push	r18
     7ba:	86 ef       	ldi	r24, 0xF6	; 246
     7bc:	91 e0       	ldi	r25, 0x01	; 1
     7be:	9f 93       	push	r25
     7c0:	8f 93       	push	r24
     7c2:	ff 92       	push	r15
     7c4:	ef 92       	push	r14
     7c6:	0e 94 8d 06 	call	0xd1a	; 0xd1a <sprintf>
						sendmsg(data);
     7ca:	8b a9       	ldd	r24, Y+51	; 0x33
     7cc:	9c a9       	ldd	r25, Y+52	; 0x34
     7ce:	0e 94 4a 01 	call	0x294	; 0x294 <sendmsg>
					break;
     7d2:	0f 90       	pop	r0
     7d4:	0f 90       	pop	r0
     7d6:	0f 90       	pop	r0
     7d8:	0f 90       	pop	r0
     7da:	0f 90       	pop	r0
     7dc:	0f 90       	pop	r0
     7de:	3c c0       	rjmp	.+120    	; 0x858 <__LOCK_REGION_LENGTH__+0x458>
					
					default:
						temp = (adc_reading*500)/divider; //(5v/1023)=4.887mV = 5mV, every deg c is 10Mv voltage change therefore divide by 2
     7e0:	20 91 bb 02 	lds	r18, 0x02BB	; 0x8002bb <adc_reading>
     7e4:	30 91 bc 02 	lds	r19, 0x02BC	; 0x8002bc <adc_reading+0x1>
     7e8:	40 91 bd 02 	lds	r20, 0x02BD	; 0x8002bd <adc_reading+0x2>
     7ec:	50 91 be 02 	lds	r21, 0x02BE	; 0x8002be <adc_reading+0x3>
     7f0:	a4 ef       	ldi	r26, 0xF4	; 244
     7f2:	b1 e0       	ldi	r27, 0x01	; 1
     7f4:	0e 94 53 06 	call	0xca6	; 0xca6 <__muluhisi3>
     7f8:	0e 94 52 05 	call	0xaa4	; 0xaa4 <__floatunsisf>
     7fc:	20 e0       	ldi	r18, 0x00	; 0
     7fe:	30 e0       	ldi	r19, 0x00	; 0
     800:	40 e8       	ldi	r20, 0x80	; 128
     802:	5a e3       	ldi	r21, 0x3A	; 58
     804:	0e 94 b8 05 	call	0xb70	; 0xb70 <__mulsf3>
     808:	0e 94 23 05 	call	0xa46	; 0xa46 <__fixunssfsi>
     80c:	60 93 bf 02 	sts	0x02BF, r22	; 0x8002bf <temp>
     810:	70 93 c0 02 	sts	0x02C0, r23	; 0x8002c0 <temp+0x1>
     814:	80 93 c1 02 	sts	0x02C1, r24	; 0x8002c1 <temp+0x2>
     818:	90 93 c2 02 	sts	0x02C2, r25	; 0x8002c2 <temp+0x3>
						dtostrf(temp,6,2,str_temp); // Changes value from double to string
     81c:	0e 94 52 05 	call	0xaa4	; 0xaa4 <__floatunsisf>
     820:	0f a9       	ldd	r16, Y+55	; 0x37
     822:	18 ad       	ldd	r17, Y+56	; 0x38
     824:	22 e0       	ldi	r18, 0x02	; 2
     826:	46 e0       	ldi	r20, 0x06	; 6
     828:	0e 94 6d 06 	call	0xcda	; 0xcda <dtostrf>
						sprintf(data,"LM35 Temperature = %s deg C",str_temp); //Report Temperature value
     82c:	8a a9       	ldd	r24, Y+50	; 0x32
     82e:	8f 93       	push	r24
     830:	99 a9       	ldd	r25, Y+49	; 0x31
     832:	9f 93       	push	r25
     834:	86 ef       	ldi	r24, 0xF6	; 246
     836:	91 e0       	ldi	r25, 0x01	; 1
     838:	9f 93       	push	r25
     83a:	8f 93       	push	r24
     83c:	ff 92       	push	r15
     83e:	ef 92       	push	r14
     840:	0e 94 8d 06 	call	0xd1a	; 0xd1a <sprintf>
						sendmsg(data);
     844:	8b a9       	ldd	r24, Y+51	; 0x33
     846:	9c a9       	ldd	r25, Y+52	; 0x34
     848:	0e 94 4a 01 	call	0x294	; 0x294 <sendmsg>
     84c:	0f 90       	pop	r0
     84e:	0f 90       	pop	r0
     850:	0f 90       	pop	r0
     852:	0f 90       	pop	r0
     854:	0f 90       	pop	r0
     856:	0f 90       	pop	r0
				}
			}
			new_adc_data=0;
     858:	10 92 d2 02 	sts	0x02D2, r1	; 0x8002d2 <new_adc_data+0x1>
     85c:	10 92 d1 02 	sts	0x02D1, r1	; 0x8002d1 <new_adc_data>
     860:	8a cd       	rjmp	.-1260   	; 0x376 <main+0x9a>

00000862 <__vector_20>:

/*this interrupt occurs whenever the */
/*USART has completed sending a character*/

ISR(USART_TX_vect)
{
     862:	1f 92       	push	r1
     864:	0f 92       	push	r0
     866:	0f b6       	in	r0, 0x3f	; 63
     868:	0f 92       	push	r0
     86a:	11 24       	eor	r1, r1
     86c:	8f 93       	push	r24
     86e:	ef 93       	push	r30
     870:	ff 93       	push	r31
	/*send next character and increment index*/
	if (qcntr != sndcntr)
     872:	e0 91 7e 02 	lds	r30, 0x027E	; 0x80027e <sndcntr>
     876:	80 91 7f 02 	lds	r24, 0x027F	; 0x80027f <qcntr>
     87a:	8e 17       	cp	r24, r30
     87c:	51 f0       	breq	.+20     	; 0x892 <__vector_20+0x30>
		UDR0 = queue[sndcntr++];
     87e:	81 e0       	ldi	r24, 0x01	; 1
     880:	8e 0f       	add	r24, r30
     882:	80 93 7e 02 	sts	0x027E, r24	; 0x80027e <sndcntr>
     886:	f0 e0       	ldi	r31, 0x00	; 0
     888:	e8 57       	subi	r30, 0x78	; 120
     88a:	fd 4f       	sbci	r31, 0xFD	; 253
     88c:	80 81       	ld	r24, Z
     88e:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
}
     892:	ff 91       	pop	r31
     894:	ef 91       	pop	r30
     896:	8f 91       	pop	r24
     898:	0f 90       	pop	r0
     89a:	0f be       	out	0x3f, r0	; 63
     89c:	0f 90       	pop	r0
     89e:	1f 90       	pop	r1
     8a0:	18 95       	reti

000008a2 <__vector_13>:
ISR (TIMER1_OVF_vect) {
     8a2:	1f 92       	push	r1
     8a4:	0f 92       	push	r0
     8a6:	0f b6       	in	r0, 0x3f	; 63
     8a8:	0f 92       	push	r0
     8aa:	11 24       	eor	r1, r1
     8ac:	8f 93       	push	r24
     8ae:	9f 93       	push	r25
	++timecount1;		// Inc overflow counter on interrupt
     8b0:	80 91 cf 02 	lds	r24, 0x02CF	; 0x8002cf <timecount1>
     8b4:	90 91 d0 02 	lds	r25, 0x02D0	; 0x8002d0 <timecount1+0x1>
     8b8:	01 96       	adiw	r24, 0x01	; 1
     8ba:	90 93 d0 02 	sts	0x02D0, r25	; 0x8002d0 <timecount1+0x1>
     8be:	80 93 cf 02 	sts	0x02CF, r24	; 0x8002cf <timecount1>
}
     8c2:	9f 91       	pop	r25
     8c4:	8f 91       	pop	r24
     8c6:	0f 90       	pop	r0
     8c8:	0f be       	out	0x3f, r0	; 63
     8ca:	0f 90       	pop	r0
     8cc:	1f 90       	pop	r1
     8ce:	18 95       	reti

000008d0 <__vector_10>:
ISR(TIMER1_CAPT_vect) {
     8d0:	1f 92       	push	r1
     8d2:	0f 92       	push	r0
     8d4:	0f b6       	in	r0, 0x3f	; 63
     8d6:	0f 92       	push	r0
     8d8:	11 24       	eor	r1, r1
     8da:	2f 93       	push	r18
     8dc:	3f 93       	push	r19
     8de:	4f 93       	push	r20
     8e0:	5f 93       	push	r21
     8e2:	8f 93       	push	r24
     8e4:	9f 93       	push	r25
     8e6:	af 93       	push	r26
     8e8:	bf 93       	push	r27
     8ea:	ef 93       	push	r30
     8ec:	ff 93       	push	r31
	
	unsigned long clocks;					/* count of clocks in the pulse - not needed outside the ISR, so make it local */
	end_edge = ICR1;								/* The C compiler reads two 8bit regs for us  */
     8ee:	20 91 86 00 	lds	r18, 0x0086	; 0x800086 <__DATA_REGION_ORIGIN__+0x26>
     8f2:	30 91 87 00 	lds	r19, 0x0087	; 0x800087 <__DATA_REGION_ORIGIN__+0x27>
     8f6:	30 93 ca 02 	sts	0x02CA, r19	; 0x8002ca <end_edge+0x1>
     8fa:	20 93 c9 02 	sts	0x02C9, r18	; 0x8002c9 <end_edge>
	clocks = ((uint32_t)timecount1 * 65536) + (uint32_t)end_edge - (uint32_t)start_edge;
     8fe:	80 91 cf 02 	lds	r24, 0x02CF	; 0x8002cf <timecount1>
     902:	90 91 d0 02 	lds	r25, 0x02D0	; 0x8002d0 <timecount1+0x1>
     906:	a0 e0       	ldi	r26, 0x00	; 0
     908:	b0 e0       	ldi	r27, 0x00	; 0
     90a:	dc 01       	movw	r26, r24
     90c:	99 27       	eor	r25, r25
     90e:	88 27       	eor	r24, r24
     910:	40 91 c3 02 	lds	r20, 0x02C3	; 0x8002c3 <start_edge>
     914:	50 91 c4 02 	lds	r21, 0x02C4	; 0x8002c4 <start_edge+0x1>
     918:	84 1b       	sub	r24, r20
     91a:	95 0b       	sbc	r25, r21
     91c:	a1 09       	sbc	r26, r1
     91e:	b1 09       	sbc	r27, r1
     920:	82 0f       	add	r24, r18
     922:	93 1f       	adc	r25, r19
     924:	a1 1d       	adc	r26, r1
     926:	b1 1d       	adc	r27, r1
	
	if((1<<ICES1) & TCCR1B) { // if on high period
     928:	20 91 81 00 	lds	r18, 0x0081	; 0x800081 <__DATA_REGION_ORIGIN__+0x21>
     92c:	26 ff       	sbrs	r18, 6
     92e:	0e c0       	rjmp	.+28     	; 0x94c <__stack+0x4d>
		Time_Period_High = (clocks/2);						/* Result is in microseconds  */
     930:	b6 95       	lsr	r27
     932:	a7 95       	ror	r26
     934:	97 95       	ror	r25
     936:	87 95       	ror	r24
     938:	90 93 c6 02 	sts	0x02C6, r25	; 0x8002c6 <Time_Period_High+0x1>
     93c:	80 93 c5 02 	sts	0x02C5, r24	; 0x8002c5 <Time_Period_High>
		TCCR1B = TCCR1B & ~(1<<ICES1);		//  next edge is falling
     940:	e1 e8       	ldi	r30, 0x81	; 129
     942:	f0 e0       	ldi	r31, 0x00	; 0
     944:	80 81       	ld	r24, Z
     946:	8f 7b       	andi	r24, 0xBF	; 191
     948:	80 83       	st	Z, r24
     94a:	0d c0       	rjmp	.+26     	; 0x966 <__stack+0x67>
	} else { //if on low period
		Time_Period_Low = (clocks/2);						/* Result is in microseconds  */
     94c:	b6 95       	lsr	r27
     94e:	a7 95       	ror	r26
     950:	97 95       	ror	r25
     952:	87 95       	ror	r24
     954:	90 93 c8 02 	sts	0x02C8, r25	; 0x8002c8 <Time_Period_Low+0x1>
     958:	80 93 c7 02 	sts	0x02C7, r24	; 0x8002c7 <Time_Period_Low>
		TCCR1B = TCCR1B | (1<<ICES1);		//  next edge is rising
     95c:	e1 e8       	ldi	r30, 0x81	; 129
     95e:	f0 e0       	ldi	r31, 0x00	; 0
     960:	80 81       	ld	r24, Z
     962:	80 64       	ori	r24, 0x40	; 64
     964:	80 83       	st	Z, r24
	}	
	Time_Period = Time_Period_High+Time_Period_Low;
     966:	20 91 c5 02 	lds	r18, 0x02C5	; 0x8002c5 <Time_Period_High>
     96a:	30 91 c6 02 	lds	r19, 0x02C6	; 0x8002c6 <Time_Period_High+0x1>
     96e:	80 91 c7 02 	lds	r24, 0x02C7	; 0x8002c7 <Time_Period_Low>
     972:	90 91 c8 02 	lds	r25, 0x02C8	; 0x8002c8 <Time_Period_Low+0x1>
     976:	82 0f       	add	r24, r18
     978:	93 1f       	adc	r25, r19
     97a:	a0 e0       	ldi	r26, 0x00	; 0
     97c:	b0 e0       	ldi	r27, 0x00	; 0
     97e:	80 93 84 02 	sts	0x0284, r24	; 0x800284 <Time_Period>
     982:	90 93 85 02 	sts	0x0285, r25	; 0x800285 <Time_Period+0x1>
     986:	a0 93 86 02 	sts	0x0286, r26	; 0x800286 <Time_Period+0x2>
     98a:	b0 93 87 02 	sts	0x0287, r27	; 0x800287 <Time_Period+0x3>
	timecount1 = 0;					// Clear timecount for next time around
     98e:	10 92 d0 02 	sts	0x02D0, r1	; 0x8002d0 <timecount1+0x1>
     992:	10 92 cf 02 	sts	0x02CF, r1	; 0x8002cf <timecount1>
	start_edge = end_edge;			// We're counting rising to falling
     996:	80 91 c9 02 	lds	r24, 0x02C9	; 0x8002c9 <end_edge>
     99a:	90 91 ca 02 	lds	r25, 0x02CA	; 0x8002ca <end_edge+0x1>
     99e:	90 93 c4 02 	sts	0x02C4, r25	; 0x8002c4 <start_edge+0x1>
     9a2:	80 93 c3 02 	sts	0x02C3, r24	; 0x8002c3 <start_edge>
	// Save its time for next time through here
	
	
}
     9a6:	ff 91       	pop	r31
     9a8:	ef 91       	pop	r30
     9aa:	bf 91       	pop	r27
     9ac:	af 91       	pop	r26
     9ae:	9f 91       	pop	r25
     9b0:	8f 91       	pop	r24
     9b2:	5f 91       	pop	r21
     9b4:	4f 91       	pop	r20
     9b6:	3f 91       	pop	r19
     9b8:	2f 91       	pop	r18
     9ba:	0f 90       	pop	r0
     9bc:	0f be       	out	0x3f, r0	; 63
     9be:	0f 90       	pop	r0
     9c0:	1f 90       	pop	r1
     9c2:	18 95       	reti

000009c4 <__vector_21>:
ISR (ADC_vect)//handles ADC interrupts
{
     9c4:	1f 92       	push	r1
     9c6:	0f 92       	push	r0
     9c8:	0f b6       	in	r0, 0x3f	; 63
     9ca:	0f 92       	push	r0
     9cc:	11 24       	eor	r1, r1
     9ce:	8f 93       	push	r24
     9d0:	9f 93       	push	r25
     9d2:	af 93       	push	r26
     9d4:	bf 93       	push	r27
	
	//adc_reading = ADC;
	new_adc_data = 1;
     9d6:	81 e0       	ldi	r24, 0x01	; 1
     9d8:	90 e0       	ldi	r25, 0x00	; 0
     9da:	90 93 d2 02 	sts	0x02D2, r25	; 0x8002d2 <new_adc_data+0x1>
     9de:	80 93 d1 02 	sts	0x02D1, r24	; 0x8002d1 <new_adc_data>
	adc_reading = ADC;
     9e2:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__DATA_REGION_ORIGIN__+0x18>
     9e6:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__DATA_REGION_ORIGIN__+0x19>
     9ea:	a0 e0       	ldi	r26, 0x00	; 0
     9ec:	b0 e0       	ldi	r27, 0x00	; 0
     9ee:	80 93 bb 02 	sts	0x02BB, r24	; 0x8002bb <adc_reading>
     9f2:	90 93 bc 02 	sts	0x02BC, r25	; 0x8002bc <adc_reading+0x1>
     9f6:	a0 93 bd 02 	sts	0x02BD, r26	; 0x8002bd <adc_reading+0x2>
     9fa:	b0 93 be 02 	sts	0x02BE, r27	; 0x8002be <adc_reading+0x3>
	TCNT0 = 6;
     9fe:	86 e0       	ldi	r24, 0x06	; 6
     a00:	86 bd       	out	0x26, r24	; 38
	switch(input) {
     a02:	80 91 ba 02 	lds	r24, 0x02BA	; 0x8002ba <input>
     a06:	81 30       	cpi	r24, 0x01	; 1
     a08:	41 f0       	breq	.+16     	; 0xa1a <__vector_21+0x56>
     a0a:	18 f0       	brcs	.+6      	; 0xa12 <__vector_21+0x4e>
     a0c:	82 30       	cpi	r24, 0x02	; 2
     a0e:	49 f0       	breq	.+18     	; 0xa22 <__vector_21+0x5e>
     a10:	0c c0       	rjmp	.+24     	; 0xa2a <__vector_21+0x66>
		
		case Volt :
			ADMUX = (1<<6) | (0<<0); //adc0
     a12:	80 e4       	ldi	r24, 0x40	; 64
     a14:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
		break;
     a18:	0b c0       	rjmp	.+22     	; 0xa30 <__vector_21+0x6c>
		
		case LDR :
			ADMUX = (1<<6) | (1<<0); //adc1
     a1a:	81 e4       	ldi	r24, 0x41	; 65
     a1c:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
		break;
     a20:	07 c0       	rjmp	.+14     	; 0xa30 <__vector_21+0x6c>
		
		case Temp :
			ADMUX = (1<<6) | (1<<1) ; //adc2
     a22:	82 e4       	ldi	r24, 0x42	; 66
     a24:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
		break;
     a28:	03 c0       	rjmp	.+6      	; 0xa30 <__vector_21+0x6c>
		default:
			ADMUX = (1<<6) | (1<<1); //adc2
     a2a:	82 e4       	ldi	r24, 0x42	; 66
     a2c:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
	} 
	TIFR0 = (1<<0); //clears Counter0 overflow
     a30:	81 e0       	ldi	r24, 0x01	; 1
     a32:	85 bb       	out	0x15, r24	; 21
}
     a34:	bf 91       	pop	r27
     a36:	af 91       	pop	r26
     a38:	9f 91       	pop	r25
     a3a:	8f 91       	pop	r24
     a3c:	0f 90       	pop	r0
     a3e:	0f be       	out	0x3f, r0	; 63
     a40:	0f 90       	pop	r0
     a42:	1f 90       	pop	r1
     a44:	18 95       	reti

00000a46 <__fixunssfsi>:
     a46:	0e 94 97 05 	call	0xb2e	; 0xb2e <__fp_splitA>
     a4a:	88 f0       	brcs	.+34     	; 0xa6e <__fixunssfsi+0x28>
     a4c:	9f 57       	subi	r25, 0x7F	; 127
     a4e:	98 f0       	brcs	.+38     	; 0xa76 <__fixunssfsi+0x30>
     a50:	b9 2f       	mov	r27, r25
     a52:	99 27       	eor	r25, r25
     a54:	b7 51       	subi	r27, 0x17	; 23
     a56:	b0 f0       	brcs	.+44     	; 0xa84 <__fixunssfsi+0x3e>
     a58:	e1 f0       	breq	.+56     	; 0xa92 <__fixunssfsi+0x4c>
     a5a:	66 0f       	add	r22, r22
     a5c:	77 1f       	adc	r23, r23
     a5e:	88 1f       	adc	r24, r24
     a60:	99 1f       	adc	r25, r25
     a62:	1a f0       	brmi	.+6      	; 0xa6a <__fixunssfsi+0x24>
     a64:	ba 95       	dec	r27
     a66:	c9 f7       	brne	.-14     	; 0xa5a <__fixunssfsi+0x14>
     a68:	14 c0       	rjmp	.+40     	; 0xa92 <__fixunssfsi+0x4c>
     a6a:	b1 30       	cpi	r27, 0x01	; 1
     a6c:	91 f0       	breq	.+36     	; 0xa92 <__fixunssfsi+0x4c>
     a6e:	0e 94 b1 05 	call	0xb62	; 0xb62 <__fp_zero>
     a72:	b1 e0       	ldi	r27, 0x01	; 1
     a74:	08 95       	ret
     a76:	0c 94 b1 05 	jmp	0xb62	; 0xb62 <__fp_zero>
     a7a:	67 2f       	mov	r22, r23
     a7c:	78 2f       	mov	r23, r24
     a7e:	88 27       	eor	r24, r24
     a80:	b8 5f       	subi	r27, 0xF8	; 248
     a82:	39 f0       	breq	.+14     	; 0xa92 <__fixunssfsi+0x4c>
     a84:	b9 3f       	cpi	r27, 0xF9	; 249
     a86:	cc f3       	brlt	.-14     	; 0xa7a <__fixunssfsi+0x34>
     a88:	86 95       	lsr	r24
     a8a:	77 95       	ror	r23
     a8c:	67 95       	ror	r22
     a8e:	b3 95       	inc	r27
     a90:	d9 f7       	brne	.-10     	; 0xa88 <__fixunssfsi+0x42>
     a92:	3e f4       	brtc	.+14     	; 0xaa2 <__fixunssfsi+0x5c>
     a94:	90 95       	com	r25
     a96:	80 95       	com	r24
     a98:	70 95       	com	r23
     a9a:	61 95       	neg	r22
     a9c:	7f 4f       	sbci	r23, 0xFF	; 255
     a9e:	8f 4f       	sbci	r24, 0xFF	; 255
     aa0:	9f 4f       	sbci	r25, 0xFF	; 255
     aa2:	08 95       	ret

00000aa4 <__floatunsisf>:
     aa4:	e8 94       	clt
     aa6:	09 c0       	rjmp	.+18     	; 0xaba <__floatsisf+0x12>

00000aa8 <__floatsisf>:
     aa8:	97 fb       	bst	r25, 7
     aaa:	3e f4       	brtc	.+14     	; 0xaba <__floatsisf+0x12>
     aac:	90 95       	com	r25
     aae:	80 95       	com	r24
     ab0:	70 95       	com	r23
     ab2:	61 95       	neg	r22
     ab4:	7f 4f       	sbci	r23, 0xFF	; 255
     ab6:	8f 4f       	sbci	r24, 0xFF	; 255
     ab8:	9f 4f       	sbci	r25, 0xFF	; 255
     aba:	99 23       	and	r25, r25
     abc:	a9 f0       	breq	.+42     	; 0xae8 <__floatsisf+0x40>
     abe:	f9 2f       	mov	r31, r25
     ac0:	96 e9       	ldi	r25, 0x96	; 150
     ac2:	bb 27       	eor	r27, r27
     ac4:	93 95       	inc	r25
     ac6:	f6 95       	lsr	r31
     ac8:	87 95       	ror	r24
     aca:	77 95       	ror	r23
     acc:	67 95       	ror	r22
     ace:	b7 95       	ror	r27
     ad0:	f1 11       	cpse	r31, r1
     ad2:	f8 cf       	rjmp	.-16     	; 0xac4 <__floatsisf+0x1c>
     ad4:	fa f4       	brpl	.+62     	; 0xb14 <__floatsisf+0x6c>
     ad6:	bb 0f       	add	r27, r27
     ad8:	11 f4       	brne	.+4      	; 0xade <__floatsisf+0x36>
     ada:	60 ff       	sbrs	r22, 0
     adc:	1b c0       	rjmp	.+54     	; 0xb14 <__floatsisf+0x6c>
     ade:	6f 5f       	subi	r22, 0xFF	; 255
     ae0:	7f 4f       	sbci	r23, 0xFF	; 255
     ae2:	8f 4f       	sbci	r24, 0xFF	; 255
     ae4:	9f 4f       	sbci	r25, 0xFF	; 255
     ae6:	16 c0       	rjmp	.+44     	; 0xb14 <__floatsisf+0x6c>
     ae8:	88 23       	and	r24, r24
     aea:	11 f0       	breq	.+4      	; 0xaf0 <__floatsisf+0x48>
     aec:	96 e9       	ldi	r25, 0x96	; 150
     aee:	11 c0       	rjmp	.+34     	; 0xb12 <__floatsisf+0x6a>
     af0:	77 23       	and	r23, r23
     af2:	21 f0       	breq	.+8      	; 0xafc <__floatsisf+0x54>
     af4:	9e e8       	ldi	r25, 0x8E	; 142
     af6:	87 2f       	mov	r24, r23
     af8:	76 2f       	mov	r23, r22
     afa:	05 c0       	rjmp	.+10     	; 0xb06 <__floatsisf+0x5e>
     afc:	66 23       	and	r22, r22
     afe:	71 f0       	breq	.+28     	; 0xb1c <__floatsisf+0x74>
     b00:	96 e8       	ldi	r25, 0x86	; 134
     b02:	86 2f       	mov	r24, r22
     b04:	70 e0       	ldi	r23, 0x00	; 0
     b06:	60 e0       	ldi	r22, 0x00	; 0
     b08:	2a f0       	brmi	.+10     	; 0xb14 <__floatsisf+0x6c>
     b0a:	9a 95       	dec	r25
     b0c:	66 0f       	add	r22, r22
     b0e:	77 1f       	adc	r23, r23
     b10:	88 1f       	adc	r24, r24
     b12:	da f7       	brpl	.-10     	; 0xb0a <__floatsisf+0x62>
     b14:	88 0f       	add	r24, r24
     b16:	96 95       	lsr	r25
     b18:	87 95       	ror	r24
     b1a:	97 f9       	bld	r25, 7
     b1c:	08 95       	ret

00000b1e <__fp_split3>:
     b1e:	57 fd       	sbrc	r21, 7
     b20:	90 58       	subi	r25, 0x80	; 128
     b22:	44 0f       	add	r20, r20
     b24:	55 1f       	adc	r21, r21
     b26:	59 f0       	breq	.+22     	; 0xb3e <__fp_splitA+0x10>
     b28:	5f 3f       	cpi	r21, 0xFF	; 255
     b2a:	71 f0       	breq	.+28     	; 0xb48 <__fp_splitA+0x1a>
     b2c:	47 95       	ror	r20

00000b2e <__fp_splitA>:
     b2e:	88 0f       	add	r24, r24
     b30:	97 fb       	bst	r25, 7
     b32:	99 1f       	adc	r25, r25
     b34:	61 f0       	breq	.+24     	; 0xb4e <__fp_splitA+0x20>
     b36:	9f 3f       	cpi	r25, 0xFF	; 255
     b38:	79 f0       	breq	.+30     	; 0xb58 <__fp_splitA+0x2a>
     b3a:	87 95       	ror	r24
     b3c:	08 95       	ret
     b3e:	12 16       	cp	r1, r18
     b40:	13 06       	cpc	r1, r19
     b42:	14 06       	cpc	r1, r20
     b44:	55 1f       	adc	r21, r21
     b46:	f2 cf       	rjmp	.-28     	; 0xb2c <__fp_split3+0xe>
     b48:	46 95       	lsr	r20
     b4a:	f1 df       	rcall	.-30     	; 0xb2e <__fp_splitA>
     b4c:	08 c0       	rjmp	.+16     	; 0xb5e <__fp_splitA+0x30>
     b4e:	16 16       	cp	r1, r22
     b50:	17 06       	cpc	r1, r23
     b52:	18 06       	cpc	r1, r24
     b54:	99 1f       	adc	r25, r25
     b56:	f1 cf       	rjmp	.-30     	; 0xb3a <__fp_splitA+0xc>
     b58:	86 95       	lsr	r24
     b5a:	71 05       	cpc	r23, r1
     b5c:	61 05       	cpc	r22, r1
     b5e:	08 94       	sec
     b60:	08 95       	ret

00000b62 <__fp_zero>:
     b62:	e8 94       	clt

00000b64 <__fp_szero>:
     b64:	bb 27       	eor	r27, r27
     b66:	66 27       	eor	r22, r22
     b68:	77 27       	eor	r23, r23
     b6a:	cb 01       	movw	r24, r22
     b6c:	97 f9       	bld	r25, 7
     b6e:	08 95       	ret

00000b70 <__mulsf3>:
     b70:	0e 94 cb 05 	call	0xb96	; 0xb96 <__mulsf3x>
     b74:	0c 94 3c 06 	jmp	0xc78	; 0xc78 <__fp_round>
     b78:	0e 94 2e 06 	call	0xc5c	; 0xc5c <__fp_pscA>
     b7c:	38 f0       	brcs	.+14     	; 0xb8c <__mulsf3+0x1c>
     b7e:	0e 94 35 06 	call	0xc6a	; 0xc6a <__fp_pscB>
     b82:	20 f0       	brcs	.+8      	; 0xb8c <__mulsf3+0x1c>
     b84:	95 23       	and	r25, r21
     b86:	11 f0       	breq	.+4      	; 0xb8c <__mulsf3+0x1c>
     b88:	0c 94 25 06 	jmp	0xc4a	; 0xc4a <__fp_inf>
     b8c:	0c 94 2b 06 	jmp	0xc56	; 0xc56 <__fp_nan>
     b90:	11 24       	eor	r1, r1
     b92:	0c 94 b2 05 	jmp	0xb64	; 0xb64 <__fp_szero>

00000b96 <__mulsf3x>:
     b96:	0e 94 8f 05 	call	0xb1e	; 0xb1e <__fp_split3>
     b9a:	70 f3       	brcs	.-36     	; 0xb78 <__mulsf3+0x8>

00000b9c <__mulsf3_pse>:
     b9c:	95 9f       	mul	r25, r21
     b9e:	c1 f3       	breq	.-16     	; 0xb90 <__mulsf3+0x20>
     ba0:	95 0f       	add	r25, r21
     ba2:	50 e0       	ldi	r21, 0x00	; 0
     ba4:	55 1f       	adc	r21, r21
     ba6:	62 9f       	mul	r22, r18
     ba8:	f0 01       	movw	r30, r0
     baa:	72 9f       	mul	r23, r18
     bac:	bb 27       	eor	r27, r27
     bae:	f0 0d       	add	r31, r0
     bb0:	b1 1d       	adc	r27, r1
     bb2:	63 9f       	mul	r22, r19
     bb4:	aa 27       	eor	r26, r26
     bb6:	f0 0d       	add	r31, r0
     bb8:	b1 1d       	adc	r27, r1
     bba:	aa 1f       	adc	r26, r26
     bbc:	64 9f       	mul	r22, r20
     bbe:	66 27       	eor	r22, r22
     bc0:	b0 0d       	add	r27, r0
     bc2:	a1 1d       	adc	r26, r1
     bc4:	66 1f       	adc	r22, r22
     bc6:	82 9f       	mul	r24, r18
     bc8:	22 27       	eor	r18, r18
     bca:	b0 0d       	add	r27, r0
     bcc:	a1 1d       	adc	r26, r1
     bce:	62 1f       	adc	r22, r18
     bd0:	73 9f       	mul	r23, r19
     bd2:	b0 0d       	add	r27, r0
     bd4:	a1 1d       	adc	r26, r1
     bd6:	62 1f       	adc	r22, r18
     bd8:	83 9f       	mul	r24, r19
     bda:	a0 0d       	add	r26, r0
     bdc:	61 1d       	adc	r22, r1
     bde:	22 1f       	adc	r18, r18
     be0:	74 9f       	mul	r23, r20
     be2:	33 27       	eor	r19, r19
     be4:	a0 0d       	add	r26, r0
     be6:	61 1d       	adc	r22, r1
     be8:	23 1f       	adc	r18, r19
     bea:	84 9f       	mul	r24, r20
     bec:	60 0d       	add	r22, r0
     bee:	21 1d       	adc	r18, r1
     bf0:	82 2f       	mov	r24, r18
     bf2:	76 2f       	mov	r23, r22
     bf4:	6a 2f       	mov	r22, r26
     bf6:	11 24       	eor	r1, r1
     bf8:	9f 57       	subi	r25, 0x7F	; 127
     bfa:	50 40       	sbci	r21, 0x00	; 0
     bfc:	9a f0       	brmi	.+38     	; 0xc24 <__mulsf3_pse+0x88>
     bfe:	f1 f0       	breq	.+60     	; 0xc3c <__mulsf3_pse+0xa0>
     c00:	88 23       	and	r24, r24
     c02:	4a f0       	brmi	.+18     	; 0xc16 <__mulsf3_pse+0x7a>
     c04:	ee 0f       	add	r30, r30
     c06:	ff 1f       	adc	r31, r31
     c08:	bb 1f       	adc	r27, r27
     c0a:	66 1f       	adc	r22, r22
     c0c:	77 1f       	adc	r23, r23
     c0e:	88 1f       	adc	r24, r24
     c10:	91 50       	subi	r25, 0x01	; 1
     c12:	50 40       	sbci	r21, 0x00	; 0
     c14:	a9 f7       	brne	.-22     	; 0xc00 <__mulsf3_pse+0x64>
     c16:	9e 3f       	cpi	r25, 0xFE	; 254
     c18:	51 05       	cpc	r21, r1
     c1a:	80 f0       	brcs	.+32     	; 0xc3c <__mulsf3_pse+0xa0>
     c1c:	0c 94 25 06 	jmp	0xc4a	; 0xc4a <__fp_inf>
     c20:	0c 94 b2 05 	jmp	0xb64	; 0xb64 <__fp_szero>
     c24:	5f 3f       	cpi	r21, 0xFF	; 255
     c26:	e4 f3       	brlt	.-8      	; 0xc20 <__mulsf3_pse+0x84>
     c28:	98 3e       	cpi	r25, 0xE8	; 232
     c2a:	d4 f3       	brlt	.-12     	; 0xc20 <__mulsf3_pse+0x84>
     c2c:	86 95       	lsr	r24
     c2e:	77 95       	ror	r23
     c30:	67 95       	ror	r22
     c32:	b7 95       	ror	r27
     c34:	f7 95       	ror	r31
     c36:	e7 95       	ror	r30
     c38:	9f 5f       	subi	r25, 0xFF	; 255
     c3a:	c1 f7       	brne	.-16     	; 0xc2c <__mulsf3_pse+0x90>
     c3c:	fe 2b       	or	r31, r30
     c3e:	88 0f       	add	r24, r24
     c40:	91 1d       	adc	r25, r1
     c42:	96 95       	lsr	r25
     c44:	87 95       	ror	r24
     c46:	97 f9       	bld	r25, 7
     c48:	08 95       	ret

00000c4a <__fp_inf>:
     c4a:	97 f9       	bld	r25, 7
     c4c:	9f 67       	ori	r25, 0x7F	; 127
     c4e:	80 e8       	ldi	r24, 0x80	; 128
     c50:	70 e0       	ldi	r23, 0x00	; 0
     c52:	60 e0       	ldi	r22, 0x00	; 0
     c54:	08 95       	ret

00000c56 <__fp_nan>:
     c56:	9f ef       	ldi	r25, 0xFF	; 255
     c58:	80 ec       	ldi	r24, 0xC0	; 192
     c5a:	08 95       	ret

00000c5c <__fp_pscA>:
     c5c:	00 24       	eor	r0, r0
     c5e:	0a 94       	dec	r0
     c60:	16 16       	cp	r1, r22
     c62:	17 06       	cpc	r1, r23
     c64:	18 06       	cpc	r1, r24
     c66:	09 06       	cpc	r0, r25
     c68:	08 95       	ret

00000c6a <__fp_pscB>:
     c6a:	00 24       	eor	r0, r0
     c6c:	0a 94       	dec	r0
     c6e:	12 16       	cp	r1, r18
     c70:	13 06       	cpc	r1, r19
     c72:	14 06       	cpc	r1, r20
     c74:	05 06       	cpc	r0, r21
     c76:	08 95       	ret

00000c78 <__fp_round>:
     c78:	09 2e       	mov	r0, r25
     c7a:	03 94       	inc	r0
     c7c:	00 0c       	add	r0, r0
     c7e:	11 f4       	brne	.+4      	; 0xc84 <__fp_round+0xc>
     c80:	88 23       	and	r24, r24
     c82:	52 f0       	brmi	.+20     	; 0xc98 <__fp_round+0x20>
     c84:	bb 0f       	add	r27, r27
     c86:	40 f4       	brcc	.+16     	; 0xc98 <__fp_round+0x20>
     c88:	bf 2b       	or	r27, r31
     c8a:	11 f4       	brne	.+4      	; 0xc90 <__fp_round+0x18>
     c8c:	60 ff       	sbrs	r22, 0
     c8e:	04 c0       	rjmp	.+8      	; 0xc98 <__fp_round+0x20>
     c90:	6f 5f       	subi	r22, 0xFF	; 255
     c92:	7f 4f       	sbci	r23, 0xFF	; 255
     c94:	8f 4f       	sbci	r24, 0xFF	; 255
     c96:	9f 4f       	sbci	r25, 0xFF	; 255
     c98:	08 95       	ret

00000c9a <__tablejump2__>:
     c9a:	ee 0f       	add	r30, r30
     c9c:	ff 1f       	adc	r31, r31
     c9e:	05 90       	lpm	r0, Z+
     ca0:	f4 91       	lpm	r31, Z
     ca2:	e0 2d       	mov	r30, r0
     ca4:	09 94       	ijmp

00000ca6 <__muluhisi3>:
     ca6:	0e 94 5e 06 	call	0xcbc	; 0xcbc <__umulhisi3>
     caa:	a5 9f       	mul	r26, r21
     cac:	90 0d       	add	r25, r0
     cae:	b4 9f       	mul	r27, r20
     cb0:	90 0d       	add	r25, r0
     cb2:	a4 9f       	mul	r26, r20
     cb4:	80 0d       	add	r24, r0
     cb6:	91 1d       	adc	r25, r1
     cb8:	11 24       	eor	r1, r1
     cba:	08 95       	ret

00000cbc <__umulhisi3>:
     cbc:	a2 9f       	mul	r26, r18
     cbe:	b0 01       	movw	r22, r0
     cc0:	b3 9f       	mul	r27, r19
     cc2:	c0 01       	movw	r24, r0
     cc4:	a3 9f       	mul	r26, r19
     cc6:	70 0d       	add	r23, r0
     cc8:	81 1d       	adc	r24, r1
     cca:	11 24       	eor	r1, r1
     ccc:	91 1d       	adc	r25, r1
     cce:	b2 9f       	mul	r27, r18
     cd0:	70 0d       	add	r23, r0
     cd2:	81 1d       	adc	r24, r1
     cd4:	11 24       	eor	r1, r1
     cd6:	91 1d       	adc	r25, r1
     cd8:	08 95       	ret

00000cda <dtostrf>:
     cda:	ef 92       	push	r14
     cdc:	0f 93       	push	r16
     cde:	1f 93       	push	r17
     ce0:	cf 93       	push	r28
     ce2:	df 93       	push	r29
     ce4:	e8 01       	movw	r28, r16
     ce6:	47 fd       	sbrc	r20, 7
     ce8:	02 c0       	rjmp	.+4      	; 0xcee <dtostrf+0x14>
     cea:	34 e0       	ldi	r19, 0x04	; 4
     cec:	01 c0       	rjmp	.+2      	; 0xcf0 <dtostrf+0x16>
     cee:	34 e1       	ldi	r19, 0x14	; 20
     cf0:	04 2e       	mov	r0, r20
     cf2:	00 0c       	add	r0, r0
     cf4:	55 0b       	sbc	r21, r21
     cf6:	57 ff       	sbrs	r21, 7
     cf8:	03 c0       	rjmp	.+6      	; 0xd00 <dtostrf+0x26>
     cfa:	51 95       	neg	r21
     cfc:	41 95       	neg	r20
     cfe:	51 09       	sbc	r21, r1
     d00:	e3 2e       	mov	r14, r19
     d02:	02 2f       	mov	r16, r18
     d04:	24 2f       	mov	r18, r20
     d06:	ae 01       	movw	r20, r28
     d08:	0e 94 90 08 	call	0x1120	; 0x1120 <dtoa_prf>
     d0c:	ce 01       	movw	r24, r28
     d0e:	df 91       	pop	r29
     d10:	cf 91       	pop	r28
     d12:	1f 91       	pop	r17
     d14:	0f 91       	pop	r16
     d16:	ef 90       	pop	r14
     d18:	08 95       	ret

00000d1a <sprintf>:
     d1a:	ae e0       	ldi	r26, 0x0E	; 14
     d1c:	b0 e0       	ldi	r27, 0x00	; 0
     d1e:	e3 e9       	ldi	r30, 0x93	; 147
     d20:	f6 e0       	ldi	r31, 0x06	; 6
     d22:	0c 94 80 0b 	jmp	0x1700	; 0x1700 <__prologue_saves__+0x1c>
     d26:	0d 89       	ldd	r16, Y+21	; 0x15
     d28:	1e 89       	ldd	r17, Y+22	; 0x16
     d2a:	86 e0       	ldi	r24, 0x06	; 6
     d2c:	8c 83       	std	Y+4, r24	; 0x04
     d2e:	1a 83       	std	Y+2, r17	; 0x02
     d30:	09 83       	std	Y+1, r16	; 0x01
     d32:	8f ef       	ldi	r24, 0xFF	; 255
     d34:	9f e7       	ldi	r25, 0x7F	; 127
     d36:	9e 83       	std	Y+6, r25	; 0x06
     d38:	8d 83       	std	Y+5, r24	; 0x05
     d3a:	ae 01       	movw	r20, r28
     d3c:	47 5e       	subi	r20, 0xE7	; 231
     d3e:	5f 4f       	sbci	r21, 0xFF	; 255
     d40:	6f 89       	ldd	r22, Y+23	; 0x17
     d42:	78 8d       	ldd	r23, Y+24	; 0x18
     d44:	ce 01       	movw	r24, r28
     d46:	01 96       	adiw	r24, 0x01	; 1
     d48:	0e 94 af 06 	call	0xd5e	; 0xd5e <vfprintf>
     d4c:	ef 81       	ldd	r30, Y+7	; 0x07
     d4e:	f8 85       	ldd	r31, Y+8	; 0x08
     d50:	e0 0f       	add	r30, r16
     d52:	f1 1f       	adc	r31, r17
     d54:	10 82       	st	Z, r1
     d56:	2e 96       	adiw	r28, 0x0e	; 14
     d58:	e4 e0       	ldi	r30, 0x04	; 4
     d5a:	0c 94 9c 0b 	jmp	0x1738	; 0x1738 <__epilogue_restores__+0x1c>

00000d5e <vfprintf>:
     d5e:	ab e0       	ldi	r26, 0x0B	; 11
     d60:	b0 e0       	ldi	r27, 0x00	; 0
     d62:	e5 eb       	ldi	r30, 0xB5	; 181
     d64:	f6 e0       	ldi	r31, 0x06	; 6
     d66:	0c 94 72 0b 	jmp	0x16e4	; 0x16e4 <__prologue_saves__>
     d6a:	6c 01       	movw	r12, r24
     d6c:	7b 01       	movw	r14, r22
     d6e:	8a 01       	movw	r16, r20
     d70:	fc 01       	movw	r30, r24
     d72:	17 82       	std	Z+7, r1	; 0x07
     d74:	16 82       	std	Z+6, r1	; 0x06
     d76:	83 81       	ldd	r24, Z+3	; 0x03
     d78:	81 ff       	sbrs	r24, 1
     d7a:	cc c1       	rjmp	.+920    	; 0x1114 <vfprintf+0x3b6>
     d7c:	ce 01       	movw	r24, r28
     d7e:	01 96       	adiw	r24, 0x01	; 1
     d80:	3c 01       	movw	r6, r24
     d82:	f6 01       	movw	r30, r12
     d84:	93 81       	ldd	r25, Z+3	; 0x03
     d86:	f7 01       	movw	r30, r14
     d88:	93 fd       	sbrc	r25, 3
     d8a:	85 91       	lpm	r24, Z+
     d8c:	93 ff       	sbrs	r25, 3
     d8e:	81 91       	ld	r24, Z+
     d90:	7f 01       	movw	r14, r30
     d92:	88 23       	and	r24, r24
     d94:	09 f4       	brne	.+2      	; 0xd98 <vfprintf+0x3a>
     d96:	ba c1       	rjmp	.+884    	; 0x110c <vfprintf+0x3ae>
     d98:	85 32       	cpi	r24, 0x25	; 37
     d9a:	39 f4       	brne	.+14     	; 0xdaa <vfprintf+0x4c>
     d9c:	93 fd       	sbrc	r25, 3
     d9e:	85 91       	lpm	r24, Z+
     da0:	93 ff       	sbrs	r25, 3
     da2:	81 91       	ld	r24, Z+
     da4:	7f 01       	movw	r14, r30
     da6:	85 32       	cpi	r24, 0x25	; 37
     da8:	29 f4       	brne	.+10     	; 0xdb4 <vfprintf+0x56>
     daa:	b6 01       	movw	r22, r12
     dac:	90 e0       	ldi	r25, 0x00	; 0
     dae:	0e 94 d8 0a 	call	0x15b0	; 0x15b0 <fputc>
     db2:	e7 cf       	rjmp	.-50     	; 0xd82 <vfprintf+0x24>
     db4:	91 2c       	mov	r9, r1
     db6:	21 2c       	mov	r2, r1
     db8:	31 2c       	mov	r3, r1
     dba:	ff e1       	ldi	r31, 0x1F	; 31
     dbc:	f3 15       	cp	r31, r3
     dbe:	d8 f0       	brcs	.+54     	; 0xdf6 <vfprintf+0x98>
     dc0:	8b 32       	cpi	r24, 0x2B	; 43
     dc2:	79 f0       	breq	.+30     	; 0xde2 <vfprintf+0x84>
     dc4:	38 f4       	brcc	.+14     	; 0xdd4 <vfprintf+0x76>
     dc6:	80 32       	cpi	r24, 0x20	; 32
     dc8:	79 f0       	breq	.+30     	; 0xde8 <vfprintf+0x8a>
     dca:	83 32       	cpi	r24, 0x23	; 35
     dcc:	a1 f4       	brne	.+40     	; 0xdf6 <vfprintf+0x98>
     dce:	23 2d       	mov	r18, r3
     dd0:	20 61       	ori	r18, 0x10	; 16
     dd2:	1d c0       	rjmp	.+58     	; 0xe0e <vfprintf+0xb0>
     dd4:	8d 32       	cpi	r24, 0x2D	; 45
     dd6:	61 f0       	breq	.+24     	; 0xdf0 <vfprintf+0x92>
     dd8:	80 33       	cpi	r24, 0x30	; 48
     dda:	69 f4       	brne	.+26     	; 0xdf6 <vfprintf+0x98>
     ddc:	23 2d       	mov	r18, r3
     dde:	21 60       	ori	r18, 0x01	; 1
     de0:	16 c0       	rjmp	.+44     	; 0xe0e <vfprintf+0xb0>
     de2:	83 2d       	mov	r24, r3
     de4:	82 60       	ori	r24, 0x02	; 2
     de6:	38 2e       	mov	r3, r24
     de8:	e3 2d       	mov	r30, r3
     dea:	e4 60       	ori	r30, 0x04	; 4
     dec:	3e 2e       	mov	r3, r30
     dee:	2a c0       	rjmp	.+84     	; 0xe44 <vfprintf+0xe6>
     df0:	f3 2d       	mov	r31, r3
     df2:	f8 60       	ori	r31, 0x08	; 8
     df4:	1d c0       	rjmp	.+58     	; 0xe30 <vfprintf+0xd2>
     df6:	37 fc       	sbrc	r3, 7
     df8:	2d c0       	rjmp	.+90     	; 0xe54 <vfprintf+0xf6>
     dfa:	20 ed       	ldi	r18, 0xD0	; 208
     dfc:	28 0f       	add	r18, r24
     dfe:	2a 30       	cpi	r18, 0x0A	; 10
     e00:	40 f0       	brcs	.+16     	; 0xe12 <vfprintf+0xb4>
     e02:	8e 32       	cpi	r24, 0x2E	; 46
     e04:	b9 f4       	brne	.+46     	; 0xe34 <vfprintf+0xd6>
     e06:	36 fc       	sbrc	r3, 6
     e08:	81 c1       	rjmp	.+770    	; 0x110c <vfprintf+0x3ae>
     e0a:	23 2d       	mov	r18, r3
     e0c:	20 64       	ori	r18, 0x40	; 64
     e0e:	32 2e       	mov	r3, r18
     e10:	19 c0       	rjmp	.+50     	; 0xe44 <vfprintf+0xe6>
     e12:	36 fe       	sbrs	r3, 6
     e14:	06 c0       	rjmp	.+12     	; 0xe22 <vfprintf+0xc4>
     e16:	8a e0       	ldi	r24, 0x0A	; 10
     e18:	98 9e       	mul	r9, r24
     e1a:	20 0d       	add	r18, r0
     e1c:	11 24       	eor	r1, r1
     e1e:	92 2e       	mov	r9, r18
     e20:	11 c0       	rjmp	.+34     	; 0xe44 <vfprintf+0xe6>
     e22:	ea e0       	ldi	r30, 0x0A	; 10
     e24:	2e 9e       	mul	r2, r30
     e26:	20 0d       	add	r18, r0
     e28:	11 24       	eor	r1, r1
     e2a:	22 2e       	mov	r2, r18
     e2c:	f3 2d       	mov	r31, r3
     e2e:	f0 62       	ori	r31, 0x20	; 32
     e30:	3f 2e       	mov	r3, r31
     e32:	08 c0       	rjmp	.+16     	; 0xe44 <vfprintf+0xe6>
     e34:	8c 36       	cpi	r24, 0x6C	; 108
     e36:	21 f4       	brne	.+8      	; 0xe40 <vfprintf+0xe2>
     e38:	83 2d       	mov	r24, r3
     e3a:	80 68       	ori	r24, 0x80	; 128
     e3c:	38 2e       	mov	r3, r24
     e3e:	02 c0       	rjmp	.+4      	; 0xe44 <vfprintf+0xe6>
     e40:	88 36       	cpi	r24, 0x68	; 104
     e42:	41 f4       	brne	.+16     	; 0xe54 <vfprintf+0xf6>
     e44:	f7 01       	movw	r30, r14
     e46:	93 fd       	sbrc	r25, 3
     e48:	85 91       	lpm	r24, Z+
     e4a:	93 ff       	sbrs	r25, 3
     e4c:	81 91       	ld	r24, Z+
     e4e:	7f 01       	movw	r14, r30
     e50:	81 11       	cpse	r24, r1
     e52:	b3 cf       	rjmp	.-154    	; 0xdba <vfprintf+0x5c>
     e54:	98 2f       	mov	r25, r24
     e56:	9f 7d       	andi	r25, 0xDF	; 223
     e58:	95 54       	subi	r25, 0x45	; 69
     e5a:	93 30       	cpi	r25, 0x03	; 3
     e5c:	28 f4       	brcc	.+10     	; 0xe68 <vfprintf+0x10a>
     e5e:	0c 5f       	subi	r16, 0xFC	; 252
     e60:	1f 4f       	sbci	r17, 0xFF	; 255
     e62:	9f e3       	ldi	r25, 0x3F	; 63
     e64:	99 83       	std	Y+1, r25	; 0x01
     e66:	0d c0       	rjmp	.+26     	; 0xe82 <vfprintf+0x124>
     e68:	83 36       	cpi	r24, 0x63	; 99
     e6a:	31 f0       	breq	.+12     	; 0xe78 <vfprintf+0x11a>
     e6c:	83 37       	cpi	r24, 0x73	; 115
     e6e:	71 f0       	breq	.+28     	; 0xe8c <vfprintf+0x12e>
     e70:	83 35       	cpi	r24, 0x53	; 83
     e72:	09 f0       	breq	.+2      	; 0xe76 <vfprintf+0x118>
     e74:	59 c0       	rjmp	.+178    	; 0xf28 <vfprintf+0x1ca>
     e76:	21 c0       	rjmp	.+66     	; 0xeba <vfprintf+0x15c>
     e78:	f8 01       	movw	r30, r16
     e7a:	80 81       	ld	r24, Z
     e7c:	89 83       	std	Y+1, r24	; 0x01
     e7e:	0e 5f       	subi	r16, 0xFE	; 254
     e80:	1f 4f       	sbci	r17, 0xFF	; 255
     e82:	88 24       	eor	r8, r8
     e84:	83 94       	inc	r8
     e86:	91 2c       	mov	r9, r1
     e88:	53 01       	movw	r10, r6
     e8a:	13 c0       	rjmp	.+38     	; 0xeb2 <vfprintf+0x154>
     e8c:	28 01       	movw	r4, r16
     e8e:	f2 e0       	ldi	r31, 0x02	; 2
     e90:	4f 0e       	add	r4, r31
     e92:	51 1c       	adc	r5, r1
     e94:	f8 01       	movw	r30, r16
     e96:	a0 80       	ld	r10, Z
     e98:	b1 80       	ldd	r11, Z+1	; 0x01
     e9a:	36 fe       	sbrs	r3, 6
     e9c:	03 c0       	rjmp	.+6      	; 0xea4 <vfprintf+0x146>
     e9e:	69 2d       	mov	r22, r9
     ea0:	70 e0       	ldi	r23, 0x00	; 0
     ea2:	02 c0       	rjmp	.+4      	; 0xea8 <vfprintf+0x14a>
     ea4:	6f ef       	ldi	r22, 0xFF	; 255
     ea6:	7f ef       	ldi	r23, 0xFF	; 255
     ea8:	c5 01       	movw	r24, r10
     eaa:	0e 94 cd 0a 	call	0x159a	; 0x159a <strnlen>
     eae:	4c 01       	movw	r8, r24
     eb0:	82 01       	movw	r16, r4
     eb2:	f3 2d       	mov	r31, r3
     eb4:	ff 77       	andi	r31, 0x7F	; 127
     eb6:	3f 2e       	mov	r3, r31
     eb8:	16 c0       	rjmp	.+44     	; 0xee6 <vfprintf+0x188>
     eba:	28 01       	movw	r4, r16
     ebc:	22 e0       	ldi	r18, 0x02	; 2
     ebe:	42 0e       	add	r4, r18
     ec0:	51 1c       	adc	r5, r1
     ec2:	f8 01       	movw	r30, r16
     ec4:	a0 80       	ld	r10, Z
     ec6:	b1 80       	ldd	r11, Z+1	; 0x01
     ec8:	36 fe       	sbrs	r3, 6
     eca:	03 c0       	rjmp	.+6      	; 0xed2 <vfprintf+0x174>
     ecc:	69 2d       	mov	r22, r9
     ece:	70 e0       	ldi	r23, 0x00	; 0
     ed0:	02 c0       	rjmp	.+4      	; 0xed6 <vfprintf+0x178>
     ed2:	6f ef       	ldi	r22, 0xFF	; 255
     ed4:	7f ef       	ldi	r23, 0xFF	; 255
     ed6:	c5 01       	movw	r24, r10
     ed8:	0e 94 c2 0a 	call	0x1584	; 0x1584 <strnlen_P>
     edc:	4c 01       	movw	r8, r24
     ede:	f3 2d       	mov	r31, r3
     ee0:	f0 68       	ori	r31, 0x80	; 128
     ee2:	3f 2e       	mov	r3, r31
     ee4:	82 01       	movw	r16, r4
     ee6:	33 fc       	sbrc	r3, 3
     ee8:	1b c0       	rjmp	.+54     	; 0xf20 <vfprintf+0x1c2>
     eea:	82 2d       	mov	r24, r2
     eec:	90 e0       	ldi	r25, 0x00	; 0
     eee:	88 16       	cp	r8, r24
     ef0:	99 06       	cpc	r9, r25
     ef2:	b0 f4       	brcc	.+44     	; 0xf20 <vfprintf+0x1c2>
     ef4:	b6 01       	movw	r22, r12
     ef6:	80 e2       	ldi	r24, 0x20	; 32
     ef8:	90 e0       	ldi	r25, 0x00	; 0
     efa:	0e 94 d8 0a 	call	0x15b0	; 0x15b0 <fputc>
     efe:	2a 94       	dec	r2
     f00:	f4 cf       	rjmp	.-24     	; 0xeea <vfprintf+0x18c>
     f02:	f5 01       	movw	r30, r10
     f04:	37 fc       	sbrc	r3, 7
     f06:	85 91       	lpm	r24, Z+
     f08:	37 fe       	sbrs	r3, 7
     f0a:	81 91       	ld	r24, Z+
     f0c:	5f 01       	movw	r10, r30
     f0e:	b6 01       	movw	r22, r12
     f10:	90 e0       	ldi	r25, 0x00	; 0
     f12:	0e 94 d8 0a 	call	0x15b0	; 0x15b0 <fputc>
     f16:	21 10       	cpse	r2, r1
     f18:	2a 94       	dec	r2
     f1a:	21 e0       	ldi	r18, 0x01	; 1
     f1c:	82 1a       	sub	r8, r18
     f1e:	91 08       	sbc	r9, r1
     f20:	81 14       	cp	r8, r1
     f22:	91 04       	cpc	r9, r1
     f24:	71 f7       	brne	.-36     	; 0xf02 <vfprintf+0x1a4>
     f26:	e8 c0       	rjmp	.+464    	; 0x10f8 <vfprintf+0x39a>
     f28:	84 36       	cpi	r24, 0x64	; 100
     f2a:	11 f0       	breq	.+4      	; 0xf30 <vfprintf+0x1d2>
     f2c:	89 36       	cpi	r24, 0x69	; 105
     f2e:	41 f5       	brne	.+80     	; 0xf80 <vfprintf+0x222>
     f30:	f8 01       	movw	r30, r16
     f32:	37 fe       	sbrs	r3, 7
     f34:	07 c0       	rjmp	.+14     	; 0xf44 <vfprintf+0x1e6>
     f36:	60 81       	ld	r22, Z
     f38:	71 81       	ldd	r23, Z+1	; 0x01
     f3a:	82 81       	ldd	r24, Z+2	; 0x02
     f3c:	93 81       	ldd	r25, Z+3	; 0x03
     f3e:	0c 5f       	subi	r16, 0xFC	; 252
     f40:	1f 4f       	sbci	r17, 0xFF	; 255
     f42:	08 c0       	rjmp	.+16     	; 0xf54 <vfprintf+0x1f6>
     f44:	60 81       	ld	r22, Z
     f46:	71 81       	ldd	r23, Z+1	; 0x01
     f48:	07 2e       	mov	r0, r23
     f4a:	00 0c       	add	r0, r0
     f4c:	88 0b       	sbc	r24, r24
     f4e:	99 0b       	sbc	r25, r25
     f50:	0e 5f       	subi	r16, 0xFE	; 254
     f52:	1f 4f       	sbci	r17, 0xFF	; 255
     f54:	f3 2d       	mov	r31, r3
     f56:	ff 76       	andi	r31, 0x6F	; 111
     f58:	3f 2e       	mov	r3, r31
     f5a:	97 ff       	sbrs	r25, 7
     f5c:	09 c0       	rjmp	.+18     	; 0xf70 <vfprintf+0x212>
     f5e:	90 95       	com	r25
     f60:	80 95       	com	r24
     f62:	70 95       	com	r23
     f64:	61 95       	neg	r22
     f66:	7f 4f       	sbci	r23, 0xFF	; 255
     f68:	8f 4f       	sbci	r24, 0xFF	; 255
     f6a:	9f 4f       	sbci	r25, 0xFF	; 255
     f6c:	f0 68       	ori	r31, 0x80	; 128
     f6e:	3f 2e       	mov	r3, r31
     f70:	2a e0       	ldi	r18, 0x0A	; 10
     f72:	30 e0       	ldi	r19, 0x00	; 0
     f74:	a3 01       	movw	r20, r6
     f76:	0e 94 14 0b 	call	0x1628	; 0x1628 <__ultoa_invert>
     f7a:	88 2e       	mov	r8, r24
     f7c:	86 18       	sub	r8, r6
     f7e:	45 c0       	rjmp	.+138    	; 0x100a <vfprintf+0x2ac>
     f80:	85 37       	cpi	r24, 0x75	; 117
     f82:	31 f4       	brne	.+12     	; 0xf90 <vfprintf+0x232>
     f84:	23 2d       	mov	r18, r3
     f86:	2f 7e       	andi	r18, 0xEF	; 239
     f88:	b2 2e       	mov	r11, r18
     f8a:	2a e0       	ldi	r18, 0x0A	; 10
     f8c:	30 e0       	ldi	r19, 0x00	; 0
     f8e:	25 c0       	rjmp	.+74     	; 0xfda <vfprintf+0x27c>
     f90:	93 2d       	mov	r25, r3
     f92:	99 7f       	andi	r25, 0xF9	; 249
     f94:	b9 2e       	mov	r11, r25
     f96:	8f 36       	cpi	r24, 0x6F	; 111
     f98:	c1 f0       	breq	.+48     	; 0xfca <vfprintf+0x26c>
     f9a:	18 f4       	brcc	.+6      	; 0xfa2 <vfprintf+0x244>
     f9c:	88 35       	cpi	r24, 0x58	; 88
     f9e:	79 f0       	breq	.+30     	; 0xfbe <vfprintf+0x260>
     fa0:	b5 c0       	rjmp	.+362    	; 0x110c <vfprintf+0x3ae>
     fa2:	80 37       	cpi	r24, 0x70	; 112
     fa4:	19 f0       	breq	.+6      	; 0xfac <vfprintf+0x24e>
     fa6:	88 37       	cpi	r24, 0x78	; 120
     fa8:	21 f0       	breq	.+8      	; 0xfb2 <vfprintf+0x254>
     faa:	b0 c0       	rjmp	.+352    	; 0x110c <vfprintf+0x3ae>
     fac:	e9 2f       	mov	r30, r25
     fae:	e0 61       	ori	r30, 0x10	; 16
     fb0:	be 2e       	mov	r11, r30
     fb2:	b4 fe       	sbrs	r11, 4
     fb4:	0d c0       	rjmp	.+26     	; 0xfd0 <vfprintf+0x272>
     fb6:	fb 2d       	mov	r31, r11
     fb8:	f4 60       	ori	r31, 0x04	; 4
     fba:	bf 2e       	mov	r11, r31
     fbc:	09 c0       	rjmp	.+18     	; 0xfd0 <vfprintf+0x272>
     fbe:	34 fe       	sbrs	r3, 4
     fc0:	0a c0       	rjmp	.+20     	; 0xfd6 <vfprintf+0x278>
     fc2:	29 2f       	mov	r18, r25
     fc4:	26 60       	ori	r18, 0x06	; 6
     fc6:	b2 2e       	mov	r11, r18
     fc8:	06 c0       	rjmp	.+12     	; 0xfd6 <vfprintf+0x278>
     fca:	28 e0       	ldi	r18, 0x08	; 8
     fcc:	30 e0       	ldi	r19, 0x00	; 0
     fce:	05 c0       	rjmp	.+10     	; 0xfda <vfprintf+0x27c>
     fd0:	20 e1       	ldi	r18, 0x10	; 16
     fd2:	30 e0       	ldi	r19, 0x00	; 0
     fd4:	02 c0       	rjmp	.+4      	; 0xfda <vfprintf+0x27c>
     fd6:	20 e1       	ldi	r18, 0x10	; 16
     fd8:	32 e0       	ldi	r19, 0x02	; 2
     fda:	f8 01       	movw	r30, r16
     fdc:	b7 fe       	sbrs	r11, 7
     fde:	07 c0       	rjmp	.+14     	; 0xfee <vfprintf+0x290>
     fe0:	60 81       	ld	r22, Z
     fe2:	71 81       	ldd	r23, Z+1	; 0x01
     fe4:	82 81       	ldd	r24, Z+2	; 0x02
     fe6:	93 81       	ldd	r25, Z+3	; 0x03
     fe8:	0c 5f       	subi	r16, 0xFC	; 252
     fea:	1f 4f       	sbci	r17, 0xFF	; 255
     fec:	06 c0       	rjmp	.+12     	; 0xffa <vfprintf+0x29c>
     fee:	60 81       	ld	r22, Z
     ff0:	71 81       	ldd	r23, Z+1	; 0x01
     ff2:	80 e0       	ldi	r24, 0x00	; 0
     ff4:	90 e0       	ldi	r25, 0x00	; 0
     ff6:	0e 5f       	subi	r16, 0xFE	; 254
     ff8:	1f 4f       	sbci	r17, 0xFF	; 255
     ffa:	a3 01       	movw	r20, r6
     ffc:	0e 94 14 0b 	call	0x1628	; 0x1628 <__ultoa_invert>
    1000:	88 2e       	mov	r8, r24
    1002:	86 18       	sub	r8, r6
    1004:	fb 2d       	mov	r31, r11
    1006:	ff 77       	andi	r31, 0x7F	; 127
    1008:	3f 2e       	mov	r3, r31
    100a:	36 fe       	sbrs	r3, 6
    100c:	0d c0       	rjmp	.+26     	; 0x1028 <vfprintf+0x2ca>
    100e:	23 2d       	mov	r18, r3
    1010:	2e 7f       	andi	r18, 0xFE	; 254
    1012:	a2 2e       	mov	r10, r18
    1014:	89 14       	cp	r8, r9
    1016:	58 f4       	brcc	.+22     	; 0x102e <vfprintf+0x2d0>
    1018:	34 fe       	sbrs	r3, 4
    101a:	0b c0       	rjmp	.+22     	; 0x1032 <vfprintf+0x2d4>
    101c:	32 fc       	sbrc	r3, 2
    101e:	09 c0       	rjmp	.+18     	; 0x1032 <vfprintf+0x2d4>
    1020:	83 2d       	mov	r24, r3
    1022:	8e 7e       	andi	r24, 0xEE	; 238
    1024:	a8 2e       	mov	r10, r24
    1026:	05 c0       	rjmp	.+10     	; 0x1032 <vfprintf+0x2d4>
    1028:	b8 2c       	mov	r11, r8
    102a:	a3 2c       	mov	r10, r3
    102c:	03 c0       	rjmp	.+6      	; 0x1034 <vfprintf+0x2d6>
    102e:	b8 2c       	mov	r11, r8
    1030:	01 c0       	rjmp	.+2      	; 0x1034 <vfprintf+0x2d6>
    1032:	b9 2c       	mov	r11, r9
    1034:	a4 fe       	sbrs	r10, 4
    1036:	0f c0       	rjmp	.+30     	; 0x1056 <vfprintf+0x2f8>
    1038:	fe 01       	movw	r30, r28
    103a:	e8 0d       	add	r30, r8
    103c:	f1 1d       	adc	r31, r1
    103e:	80 81       	ld	r24, Z
    1040:	80 33       	cpi	r24, 0x30	; 48
    1042:	21 f4       	brne	.+8      	; 0x104c <vfprintf+0x2ee>
    1044:	9a 2d       	mov	r25, r10
    1046:	99 7e       	andi	r25, 0xE9	; 233
    1048:	a9 2e       	mov	r10, r25
    104a:	09 c0       	rjmp	.+18     	; 0x105e <vfprintf+0x300>
    104c:	a2 fe       	sbrs	r10, 2
    104e:	06 c0       	rjmp	.+12     	; 0x105c <vfprintf+0x2fe>
    1050:	b3 94       	inc	r11
    1052:	b3 94       	inc	r11
    1054:	04 c0       	rjmp	.+8      	; 0x105e <vfprintf+0x300>
    1056:	8a 2d       	mov	r24, r10
    1058:	86 78       	andi	r24, 0x86	; 134
    105a:	09 f0       	breq	.+2      	; 0x105e <vfprintf+0x300>
    105c:	b3 94       	inc	r11
    105e:	a3 fc       	sbrc	r10, 3
    1060:	11 c0       	rjmp	.+34     	; 0x1084 <vfprintf+0x326>
    1062:	a0 fe       	sbrs	r10, 0
    1064:	06 c0       	rjmp	.+12     	; 0x1072 <vfprintf+0x314>
    1066:	b2 14       	cp	r11, r2
    1068:	88 f4       	brcc	.+34     	; 0x108c <vfprintf+0x32e>
    106a:	28 0c       	add	r2, r8
    106c:	92 2c       	mov	r9, r2
    106e:	9b 18       	sub	r9, r11
    1070:	0e c0       	rjmp	.+28     	; 0x108e <vfprintf+0x330>
    1072:	b2 14       	cp	r11, r2
    1074:	60 f4       	brcc	.+24     	; 0x108e <vfprintf+0x330>
    1076:	b6 01       	movw	r22, r12
    1078:	80 e2       	ldi	r24, 0x20	; 32
    107a:	90 e0       	ldi	r25, 0x00	; 0
    107c:	0e 94 d8 0a 	call	0x15b0	; 0x15b0 <fputc>
    1080:	b3 94       	inc	r11
    1082:	f7 cf       	rjmp	.-18     	; 0x1072 <vfprintf+0x314>
    1084:	b2 14       	cp	r11, r2
    1086:	18 f4       	brcc	.+6      	; 0x108e <vfprintf+0x330>
    1088:	2b 18       	sub	r2, r11
    108a:	02 c0       	rjmp	.+4      	; 0x1090 <vfprintf+0x332>
    108c:	98 2c       	mov	r9, r8
    108e:	21 2c       	mov	r2, r1
    1090:	a4 fe       	sbrs	r10, 4
    1092:	10 c0       	rjmp	.+32     	; 0x10b4 <vfprintf+0x356>
    1094:	b6 01       	movw	r22, r12
    1096:	80 e3       	ldi	r24, 0x30	; 48
    1098:	90 e0       	ldi	r25, 0x00	; 0
    109a:	0e 94 d8 0a 	call	0x15b0	; 0x15b0 <fputc>
    109e:	a2 fe       	sbrs	r10, 2
    10a0:	17 c0       	rjmp	.+46     	; 0x10d0 <vfprintf+0x372>
    10a2:	a1 fc       	sbrc	r10, 1
    10a4:	03 c0       	rjmp	.+6      	; 0x10ac <vfprintf+0x34e>
    10a6:	88 e7       	ldi	r24, 0x78	; 120
    10a8:	90 e0       	ldi	r25, 0x00	; 0
    10aa:	02 c0       	rjmp	.+4      	; 0x10b0 <vfprintf+0x352>
    10ac:	88 e5       	ldi	r24, 0x58	; 88
    10ae:	90 e0       	ldi	r25, 0x00	; 0
    10b0:	b6 01       	movw	r22, r12
    10b2:	0c c0       	rjmp	.+24     	; 0x10cc <vfprintf+0x36e>
    10b4:	8a 2d       	mov	r24, r10
    10b6:	86 78       	andi	r24, 0x86	; 134
    10b8:	59 f0       	breq	.+22     	; 0x10d0 <vfprintf+0x372>
    10ba:	a1 fe       	sbrs	r10, 1
    10bc:	02 c0       	rjmp	.+4      	; 0x10c2 <vfprintf+0x364>
    10be:	8b e2       	ldi	r24, 0x2B	; 43
    10c0:	01 c0       	rjmp	.+2      	; 0x10c4 <vfprintf+0x366>
    10c2:	80 e2       	ldi	r24, 0x20	; 32
    10c4:	a7 fc       	sbrc	r10, 7
    10c6:	8d e2       	ldi	r24, 0x2D	; 45
    10c8:	b6 01       	movw	r22, r12
    10ca:	90 e0       	ldi	r25, 0x00	; 0
    10cc:	0e 94 d8 0a 	call	0x15b0	; 0x15b0 <fputc>
    10d0:	89 14       	cp	r8, r9
    10d2:	38 f4       	brcc	.+14     	; 0x10e2 <vfprintf+0x384>
    10d4:	b6 01       	movw	r22, r12
    10d6:	80 e3       	ldi	r24, 0x30	; 48
    10d8:	90 e0       	ldi	r25, 0x00	; 0
    10da:	0e 94 d8 0a 	call	0x15b0	; 0x15b0 <fputc>
    10de:	9a 94       	dec	r9
    10e0:	f7 cf       	rjmp	.-18     	; 0x10d0 <vfprintf+0x372>
    10e2:	8a 94       	dec	r8
    10e4:	f3 01       	movw	r30, r6
    10e6:	e8 0d       	add	r30, r8
    10e8:	f1 1d       	adc	r31, r1
    10ea:	80 81       	ld	r24, Z
    10ec:	b6 01       	movw	r22, r12
    10ee:	90 e0       	ldi	r25, 0x00	; 0
    10f0:	0e 94 d8 0a 	call	0x15b0	; 0x15b0 <fputc>
    10f4:	81 10       	cpse	r8, r1
    10f6:	f5 cf       	rjmp	.-22     	; 0x10e2 <vfprintf+0x384>
    10f8:	22 20       	and	r2, r2
    10fa:	09 f4       	brne	.+2      	; 0x10fe <vfprintf+0x3a0>
    10fc:	42 ce       	rjmp	.-892    	; 0xd82 <vfprintf+0x24>
    10fe:	b6 01       	movw	r22, r12
    1100:	80 e2       	ldi	r24, 0x20	; 32
    1102:	90 e0       	ldi	r25, 0x00	; 0
    1104:	0e 94 d8 0a 	call	0x15b0	; 0x15b0 <fputc>
    1108:	2a 94       	dec	r2
    110a:	f6 cf       	rjmp	.-20     	; 0x10f8 <vfprintf+0x39a>
    110c:	f6 01       	movw	r30, r12
    110e:	86 81       	ldd	r24, Z+6	; 0x06
    1110:	97 81       	ldd	r25, Z+7	; 0x07
    1112:	02 c0       	rjmp	.+4      	; 0x1118 <vfprintf+0x3ba>
    1114:	8f ef       	ldi	r24, 0xFF	; 255
    1116:	9f ef       	ldi	r25, 0xFF	; 255
    1118:	2b 96       	adiw	r28, 0x0b	; 11
    111a:	e2 e1       	ldi	r30, 0x12	; 18
    111c:	0c 94 8e 0b 	jmp	0x171c	; 0x171c <__epilogue_restores__>

00001120 <dtoa_prf>:
    1120:	a9 e0       	ldi	r26, 0x09	; 9
    1122:	b0 e0       	ldi	r27, 0x00	; 0
    1124:	e6 e9       	ldi	r30, 0x96	; 150
    1126:	f8 e0       	ldi	r31, 0x08	; 8
    1128:	0c 94 78 0b 	jmp	0x16f0	; 0x16f0 <__prologue_saves__+0xc>
    112c:	6a 01       	movw	r12, r20
    112e:	12 2f       	mov	r17, r18
    1130:	b0 2e       	mov	r11, r16
    1132:	2b e3       	ldi	r18, 0x3B	; 59
    1134:	20 17       	cp	r18, r16
    1136:	20 f0       	brcs	.+8      	; 0x1140 <dtoa_prf+0x20>
    1138:	ff 24       	eor	r15, r15
    113a:	f3 94       	inc	r15
    113c:	f0 0e       	add	r15, r16
    113e:	02 c0       	rjmp	.+4      	; 0x1144 <dtoa_prf+0x24>
    1140:	2c e3       	ldi	r18, 0x3C	; 60
    1142:	f2 2e       	mov	r15, r18
    1144:	0f 2d       	mov	r16, r15
    1146:	27 e0       	ldi	r18, 0x07	; 7
    1148:	ae 01       	movw	r20, r28
    114a:	4f 5f       	subi	r20, 0xFF	; 255
    114c:	5f 4f       	sbci	r21, 0xFF	; 255
    114e:	0e 94 ea 09 	call	0x13d4	; 0x13d4 <__ftoa_engine>
    1152:	bc 01       	movw	r22, r24
    1154:	49 81       	ldd	r20, Y+1	; 0x01
    1156:	84 2f       	mov	r24, r20
    1158:	89 70       	andi	r24, 0x09	; 9
    115a:	81 30       	cpi	r24, 0x01	; 1
    115c:	31 f0       	breq	.+12     	; 0x116a <dtoa_prf+0x4a>
    115e:	e1 fc       	sbrc	r14, 1
    1160:	06 c0       	rjmp	.+12     	; 0x116e <dtoa_prf+0x4e>
    1162:	e0 fe       	sbrs	r14, 0
    1164:	06 c0       	rjmp	.+12     	; 0x1172 <dtoa_prf+0x52>
    1166:	90 e2       	ldi	r25, 0x20	; 32
    1168:	05 c0       	rjmp	.+10     	; 0x1174 <dtoa_prf+0x54>
    116a:	9d e2       	ldi	r25, 0x2D	; 45
    116c:	03 c0       	rjmp	.+6      	; 0x1174 <dtoa_prf+0x54>
    116e:	9b e2       	ldi	r25, 0x2B	; 43
    1170:	01 c0       	rjmp	.+2      	; 0x1174 <dtoa_prf+0x54>
    1172:	90 e0       	ldi	r25, 0x00	; 0
    1174:	5e 2d       	mov	r21, r14
    1176:	50 71       	andi	r21, 0x10	; 16
    1178:	43 ff       	sbrs	r20, 3
    117a:	3c c0       	rjmp	.+120    	; 0x11f4 <dtoa_prf+0xd4>
    117c:	91 11       	cpse	r25, r1
    117e:	02 c0       	rjmp	.+4      	; 0x1184 <dtoa_prf+0x64>
    1180:	83 e0       	ldi	r24, 0x03	; 3
    1182:	01 c0       	rjmp	.+2      	; 0x1186 <dtoa_prf+0x66>
    1184:	84 e0       	ldi	r24, 0x04	; 4
    1186:	81 17       	cp	r24, r17
    1188:	18 f4       	brcc	.+6      	; 0x1190 <dtoa_prf+0x70>
    118a:	21 2f       	mov	r18, r17
    118c:	28 1b       	sub	r18, r24
    118e:	01 c0       	rjmp	.+2      	; 0x1192 <dtoa_prf+0x72>
    1190:	20 e0       	ldi	r18, 0x00	; 0
    1192:	51 11       	cpse	r21, r1
    1194:	0b c0       	rjmp	.+22     	; 0x11ac <dtoa_prf+0x8c>
    1196:	f6 01       	movw	r30, r12
    1198:	82 2f       	mov	r24, r18
    119a:	30 e2       	ldi	r19, 0x20	; 32
    119c:	88 23       	and	r24, r24
    119e:	19 f0       	breq	.+6      	; 0x11a6 <dtoa_prf+0x86>
    11a0:	31 93       	st	Z+, r19
    11a2:	81 50       	subi	r24, 0x01	; 1
    11a4:	fb cf       	rjmp	.-10     	; 0x119c <dtoa_prf+0x7c>
    11a6:	c2 0e       	add	r12, r18
    11a8:	d1 1c       	adc	r13, r1
    11aa:	20 e0       	ldi	r18, 0x00	; 0
    11ac:	99 23       	and	r25, r25
    11ae:	29 f0       	breq	.+10     	; 0x11ba <dtoa_prf+0x9a>
    11b0:	d6 01       	movw	r26, r12
    11b2:	9c 93       	st	X, r25
    11b4:	f6 01       	movw	r30, r12
    11b6:	31 96       	adiw	r30, 0x01	; 1
    11b8:	6f 01       	movw	r12, r30
    11ba:	c6 01       	movw	r24, r12
    11bc:	03 96       	adiw	r24, 0x03	; 3
    11be:	e2 fe       	sbrs	r14, 2
    11c0:	0a c0       	rjmp	.+20     	; 0x11d6 <dtoa_prf+0xb6>
    11c2:	3e e4       	ldi	r19, 0x4E	; 78
    11c4:	d6 01       	movw	r26, r12
    11c6:	3c 93       	st	X, r19
    11c8:	41 e4       	ldi	r20, 0x41	; 65
    11ca:	11 96       	adiw	r26, 0x01	; 1
    11cc:	4c 93       	st	X, r20
    11ce:	11 97       	sbiw	r26, 0x01	; 1
    11d0:	12 96       	adiw	r26, 0x02	; 2
    11d2:	3c 93       	st	X, r19
    11d4:	06 c0       	rjmp	.+12     	; 0x11e2 <dtoa_prf+0xc2>
    11d6:	3e e6       	ldi	r19, 0x6E	; 110
    11d8:	f6 01       	movw	r30, r12
    11da:	30 83       	st	Z, r19
    11dc:	41 e6       	ldi	r20, 0x61	; 97
    11de:	41 83       	std	Z+1, r20	; 0x01
    11e0:	32 83       	std	Z+2, r19	; 0x02
    11e2:	fc 01       	movw	r30, r24
    11e4:	32 2f       	mov	r19, r18
    11e6:	40 e2       	ldi	r20, 0x20	; 32
    11e8:	33 23       	and	r19, r19
    11ea:	09 f4       	brne	.+2      	; 0x11ee <dtoa_prf+0xce>
    11ec:	42 c0       	rjmp	.+132    	; 0x1272 <dtoa_prf+0x152>
    11ee:	41 93       	st	Z+, r20
    11f0:	31 50       	subi	r19, 0x01	; 1
    11f2:	fa cf       	rjmp	.-12     	; 0x11e8 <dtoa_prf+0xc8>
    11f4:	42 ff       	sbrs	r20, 2
    11f6:	44 c0       	rjmp	.+136    	; 0x1280 <dtoa_prf+0x160>
    11f8:	91 11       	cpse	r25, r1
    11fa:	02 c0       	rjmp	.+4      	; 0x1200 <dtoa_prf+0xe0>
    11fc:	83 e0       	ldi	r24, 0x03	; 3
    11fe:	01 c0       	rjmp	.+2      	; 0x1202 <dtoa_prf+0xe2>
    1200:	84 e0       	ldi	r24, 0x04	; 4
    1202:	81 17       	cp	r24, r17
    1204:	18 f4       	brcc	.+6      	; 0x120c <dtoa_prf+0xec>
    1206:	21 2f       	mov	r18, r17
    1208:	28 1b       	sub	r18, r24
    120a:	01 c0       	rjmp	.+2      	; 0x120e <dtoa_prf+0xee>
    120c:	20 e0       	ldi	r18, 0x00	; 0
    120e:	51 11       	cpse	r21, r1
    1210:	0b c0       	rjmp	.+22     	; 0x1228 <dtoa_prf+0x108>
    1212:	f6 01       	movw	r30, r12
    1214:	82 2f       	mov	r24, r18
    1216:	30 e2       	ldi	r19, 0x20	; 32
    1218:	88 23       	and	r24, r24
    121a:	19 f0       	breq	.+6      	; 0x1222 <dtoa_prf+0x102>
    121c:	31 93       	st	Z+, r19
    121e:	81 50       	subi	r24, 0x01	; 1
    1220:	fb cf       	rjmp	.-10     	; 0x1218 <dtoa_prf+0xf8>
    1222:	c2 0e       	add	r12, r18
    1224:	d1 1c       	adc	r13, r1
    1226:	20 e0       	ldi	r18, 0x00	; 0
    1228:	99 23       	and	r25, r25
    122a:	29 f0       	breq	.+10     	; 0x1236 <dtoa_prf+0x116>
    122c:	d6 01       	movw	r26, r12
    122e:	9c 93       	st	X, r25
    1230:	f6 01       	movw	r30, r12
    1232:	31 96       	adiw	r30, 0x01	; 1
    1234:	6f 01       	movw	r12, r30
    1236:	c6 01       	movw	r24, r12
    1238:	03 96       	adiw	r24, 0x03	; 3
    123a:	e2 fe       	sbrs	r14, 2
    123c:	0b c0       	rjmp	.+22     	; 0x1254 <dtoa_prf+0x134>
    123e:	39 e4       	ldi	r19, 0x49	; 73
    1240:	d6 01       	movw	r26, r12
    1242:	3c 93       	st	X, r19
    1244:	3e e4       	ldi	r19, 0x4E	; 78
    1246:	11 96       	adiw	r26, 0x01	; 1
    1248:	3c 93       	st	X, r19
    124a:	11 97       	sbiw	r26, 0x01	; 1
    124c:	36 e4       	ldi	r19, 0x46	; 70
    124e:	12 96       	adiw	r26, 0x02	; 2
    1250:	3c 93       	st	X, r19
    1252:	07 c0       	rjmp	.+14     	; 0x1262 <dtoa_prf+0x142>
    1254:	39 e6       	ldi	r19, 0x69	; 105
    1256:	f6 01       	movw	r30, r12
    1258:	30 83       	st	Z, r19
    125a:	3e e6       	ldi	r19, 0x6E	; 110
    125c:	31 83       	std	Z+1, r19	; 0x01
    125e:	36 e6       	ldi	r19, 0x66	; 102
    1260:	32 83       	std	Z+2, r19	; 0x02
    1262:	fc 01       	movw	r30, r24
    1264:	32 2f       	mov	r19, r18
    1266:	40 e2       	ldi	r20, 0x20	; 32
    1268:	33 23       	and	r19, r19
    126a:	19 f0       	breq	.+6      	; 0x1272 <dtoa_prf+0x152>
    126c:	41 93       	st	Z+, r20
    126e:	31 50       	subi	r19, 0x01	; 1
    1270:	fb cf       	rjmp	.-10     	; 0x1268 <dtoa_prf+0x148>
    1272:	fc 01       	movw	r30, r24
    1274:	e2 0f       	add	r30, r18
    1276:	f1 1d       	adc	r31, r1
    1278:	10 82       	st	Z, r1
    127a:	8e ef       	ldi	r24, 0xFE	; 254
    127c:	9f ef       	ldi	r25, 0xFF	; 255
    127e:	a6 c0       	rjmp	.+332    	; 0x13cc <dtoa_prf+0x2ac>
    1280:	21 e0       	ldi	r18, 0x01	; 1
    1282:	30 e0       	ldi	r19, 0x00	; 0
    1284:	91 11       	cpse	r25, r1
    1286:	02 c0       	rjmp	.+4      	; 0x128c <dtoa_prf+0x16c>
    1288:	20 e0       	ldi	r18, 0x00	; 0
    128a:	30 e0       	ldi	r19, 0x00	; 0
    128c:	16 16       	cp	r1, r22
    128e:	17 06       	cpc	r1, r23
    1290:	1c f4       	brge	.+6      	; 0x1298 <dtoa_prf+0x178>
    1292:	fb 01       	movw	r30, r22
    1294:	31 96       	adiw	r30, 0x01	; 1
    1296:	02 c0       	rjmp	.+4      	; 0x129c <dtoa_prf+0x17c>
    1298:	e1 e0       	ldi	r30, 0x01	; 1
    129a:	f0 e0       	ldi	r31, 0x00	; 0
    129c:	2e 0f       	add	r18, r30
    129e:	3f 1f       	adc	r19, r31
    12a0:	bb 20       	and	r11, r11
    12a2:	21 f0       	breq	.+8      	; 0x12ac <dtoa_prf+0x18c>
    12a4:	eb 2d       	mov	r30, r11
    12a6:	f0 e0       	ldi	r31, 0x00	; 0
    12a8:	31 96       	adiw	r30, 0x01	; 1
    12aa:	02 c0       	rjmp	.+4      	; 0x12b0 <dtoa_prf+0x190>
    12ac:	e0 e0       	ldi	r30, 0x00	; 0
    12ae:	f0 e0       	ldi	r31, 0x00	; 0
    12b0:	2e 0f       	add	r18, r30
    12b2:	3f 1f       	adc	r19, r31
    12b4:	e1 2f       	mov	r30, r17
    12b6:	f0 e0       	ldi	r31, 0x00	; 0
    12b8:	2e 17       	cp	r18, r30
    12ba:	3f 07       	cpc	r19, r31
    12bc:	1c f4       	brge	.+6      	; 0x12c4 <dtoa_prf+0x1a4>
    12be:	12 1b       	sub	r17, r18
    12c0:	21 2f       	mov	r18, r17
    12c2:	01 c0       	rjmp	.+2      	; 0x12c6 <dtoa_prf+0x1a6>
    12c4:	20 e0       	ldi	r18, 0x00	; 0
    12c6:	8e 2d       	mov	r24, r14
    12c8:	88 71       	andi	r24, 0x18	; 24
    12ca:	59 f4       	brne	.+22     	; 0x12e2 <dtoa_prf+0x1c2>
    12cc:	f6 01       	movw	r30, r12
    12ce:	82 2f       	mov	r24, r18
    12d0:	30 e2       	ldi	r19, 0x20	; 32
    12d2:	88 23       	and	r24, r24
    12d4:	19 f0       	breq	.+6      	; 0x12dc <dtoa_prf+0x1bc>
    12d6:	31 93       	st	Z+, r19
    12d8:	81 50       	subi	r24, 0x01	; 1
    12da:	fb cf       	rjmp	.-10     	; 0x12d2 <dtoa_prf+0x1b2>
    12dc:	c2 0e       	add	r12, r18
    12de:	d1 1c       	adc	r13, r1
    12e0:	20 e0       	ldi	r18, 0x00	; 0
    12e2:	99 23       	and	r25, r25
    12e4:	29 f0       	breq	.+10     	; 0x12f0 <dtoa_prf+0x1d0>
    12e6:	d6 01       	movw	r26, r12
    12e8:	9c 93       	st	X, r25
    12ea:	f6 01       	movw	r30, r12
    12ec:	31 96       	adiw	r30, 0x01	; 1
    12ee:	6f 01       	movw	r12, r30
    12f0:	51 11       	cpse	r21, r1
    12f2:	0b c0       	rjmp	.+22     	; 0x130a <dtoa_prf+0x1ea>
    12f4:	f6 01       	movw	r30, r12
    12f6:	82 2f       	mov	r24, r18
    12f8:	90 e3       	ldi	r25, 0x30	; 48
    12fa:	88 23       	and	r24, r24
    12fc:	19 f0       	breq	.+6      	; 0x1304 <dtoa_prf+0x1e4>
    12fe:	91 93       	st	Z+, r25
    1300:	81 50       	subi	r24, 0x01	; 1
    1302:	fb cf       	rjmp	.-10     	; 0x12fa <dtoa_prf+0x1da>
    1304:	c2 0e       	add	r12, r18
    1306:	d1 1c       	adc	r13, r1
    1308:	20 e0       	ldi	r18, 0x00	; 0
    130a:	0f 2d       	mov	r16, r15
    130c:	06 0f       	add	r16, r22
    130e:	9a 81       	ldd	r25, Y+2	; 0x02
    1310:	34 2f       	mov	r19, r20
    1312:	30 71       	andi	r19, 0x10	; 16
    1314:	44 ff       	sbrs	r20, 4
    1316:	03 c0       	rjmp	.+6      	; 0x131e <dtoa_prf+0x1fe>
    1318:	91 33       	cpi	r25, 0x31	; 49
    131a:	09 f4       	brne	.+2      	; 0x131e <dtoa_prf+0x1fe>
    131c:	01 50       	subi	r16, 0x01	; 1
    131e:	10 16       	cp	r1, r16
    1320:	24 f4       	brge	.+8      	; 0x132a <dtoa_prf+0x20a>
    1322:	09 30       	cpi	r16, 0x09	; 9
    1324:	18 f0       	brcs	.+6      	; 0x132c <dtoa_prf+0x20c>
    1326:	08 e0       	ldi	r16, 0x08	; 8
    1328:	01 c0       	rjmp	.+2      	; 0x132c <dtoa_prf+0x20c>
    132a:	01 e0       	ldi	r16, 0x01	; 1
    132c:	ab 01       	movw	r20, r22
    132e:	77 ff       	sbrs	r23, 7
    1330:	02 c0       	rjmp	.+4      	; 0x1336 <dtoa_prf+0x216>
    1332:	40 e0       	ldi	r20, 0x00	; 0
    1334:	50 e0       	ldi	r21, 0x00	; 0
    1336:	fb 01       	movw	r30, r22
    1338:	e4 1b       	sub	r30, r20
    133a:	f5 0b       	sbc	r31, r21
    133c:	a1 e0       	ldi	r26, 0x01	; 1
    133e:	b0 e0       	ldi	r27, 0x00	; 0
    1340:	ac 0f       	add	r26, r28
    1342:	bd 1f       	adc	r27, r29
    1344:	ea 0f       	add	r30, r26
    1346:	fb 1f       	adc	r31, r27
    1348:	8e e2       	ldi	r24, 0x2E	; 46
    134a:	a8 2e       	mov	r10, r24
    134c:	4b 01       	movw	r8, r22
    134e:	80 1a       	sub	r8, r16
    1350:	91 08       	sbc	r9, r1
    1352:	0b 2d       	mov	r16, r11
    1354:	10 e0       	ldi	r17, 0x00	; 0
    1356:	11 95       	neg	r17
    1358:	01 95       	neg	r16
    135a:	11 09       	sbc	r17, r1
    135c:	4f 3f       	cpi	r20, 0xFF	; 255
    135e:	bf ef       	ldi	r27, 0xFF	; 255
    1360:	5b 07       	cpc	r21, r27
    1362:	21 f4       	brne	.+8      	; 0x136c <dtoa_prf+0x24c>
    1364:	d6 01       	movw	r26, r12
    1366:	ac 92       	st	X, r10
    1368:	11 96       	adiw	r26, 0x01	; 1
    136a:	6d 01       	movw	r12, r26
    136c:	64 17       	cp	r22, r20
    136e:	75 07       	cpc	r23, r21
    1370:	2c f0       	brlt	.+10     	; 0x137c <dtoa_prf+0x25c>
    1372:	84 16       	cp	r8, r20
    1374:	95 06       	cpc	r9, r21
    1376:	14 f4       	brge	.+4      	; 0x137c <dtoa_prf+0x25c>
    1378:	81 81       	ldd	r24, Z+1	; 0x01
    137a:	01 c0       	rjmp	.+2      	; 0x137e <dtoa_prf+0x25e>
    137c:	80 e3       	ldi	r24, 0x30	; 48
    137e:	41 50       	subi	r20, 0x01	; 1
    1380:	51 09       	sbc	r21, r1
    1382:	31 96       	adiw	r30, 0x01	; 1
    1384:	d6 01       	movw	r26, r12
    1386:	11 96       	adiw	r26, 0x01	; 1
    1388:	7d 01       	movw	r14, r26
    138a:	40 17       	cp	r20, r16
    138c:	51 07       	cpc	r21, r17
    138e:	24 f0       	brlt	.+8      	; 0x1398 <dtoa_prf+0x278>
    1390:	d6 01       	movw	r26, r12
    1392:	8c 93       	st	X, r24
    1394:	67 01       	movw	r12, r14
    1396:	e2 cf       	rjmp	.-60     	; 0x135c <dtoa_prf+0x23c>
    1398:	64 17       	cp	r22, r20
    139a:	75 07       	cpc	r23, r21
    139c:	39 f4       	brne	.+14     	; 0x13ac <dtoa_prf+0x28c>
    139e:	96 33       	cpi	r25, 0x36	; 54
    13a0:	20 f4       	brcc	.+8      	; 0x13aa <dtoa_prf+0x28a>
    13a2:	95 33       	cpi	r25, 0x35	; 53
    13a4:	19 f4       	brne	.+6      	; 0x13ac <dtoa_prf+0x28c>
    13a6:	31 11       	cpse	r19, r1
    13a8:	01 c0       	rjmp	.+2      	; 0x13ac <dtoa_prf+0x28c>
    13aa:	81 e3       	ldi	r24, 0x31	; 49
    13ac:	f6 01       	movw	r30, r12
    13ae:	80 83       	st	Z, r24
    13b0:	f7 01       	movw	r30, r14
    13b2:	82 2f       	mov	r24, r18
    13b4:	90 e2       	ldi	r25, 0x20	; 32
    13b6:	88 23       	and	r24, r24
    13b8:	19 f0       	breq	.+6      	; 0x13c0 <dtoa_prf+0x2a0>
    13ba:	91 93       	st	Z+, r25
    13bc:	81 50       	subi	r24, 0x01	; 1
    13be:	fb cf       	rjmp	.-10     	; 0x13b6 <dtoa_prf+0x296>
    13c0:	f7 01       	movw	r30, r14
    13c2:	e2 0f       	add	r30, r18
    13c4:	f1 1d       	adc	r31, r1
    13c6:	10 82       	st	Z, r1
    13c8:	80 e0       	ldi	r24, 0x00	; 0
    13ca:	90 e0       	ldi	r25, 0x00	; 0
    13cc:	29 96       	adiw	r28, 0x09	; 9
    13ce:	ec e0       	ldi	r30, 0x0C	; 12
    13d0:	0c 94 94 0b 	jmp	0x1728	; 0x1728 <__epilogue_restores__+0xc>

000013d4 <__ftoa_engine>:
    13d4:	28 30       	cpi	r18, 0x08	; 8
    13d6:	08 f0       	brcs	.+2      	; 0x13da <__ftoa_engine+0x6>
    13d8:	27 e0       	ldi	r18, 0x07	; 7
    13da:	33 27       	eor	r19, r19
    13dc:	da 01       	movw	r26, r20
    13de:	99 0f       	add	r25, r25
    13e0:	31 1d       	adc	r19, r1
    13e2:	87 fd       	sbrc	r24, 7
    13e4:	91 60       	ori	r25, 0x01	; 1
    13e6:	00 96       	adiw	r24, 0x00	; 0
    13e8:	61 05       	cpc	r22, r1
    13ea:	71 05       	cpc	r23, r1
    13ec:	39 f4       	brne	.+14     	; 0x13fc <__ftoa_engine+0x28>
    13ee:	32 60       	ori	r19, 0x02	; 2
    13f0:	2e 5f       	subi	r18, 0xFE	; 254
    13f2:	3d 93       	st	X+, r19
    13f4:	30 e3       	ldi	r19, 0x30	; 48
    13f6:	2a 95       	dec	r18
    13f8:	e1 f7       	brne	.-8      	; 0x13f2 <__ftoa_engine+0x1e>
    13fa:	08 95       	ret
    13fc:	9f 3f       	cpi	r25, 0xFF	; 255
    13fe:	30 f0       	brcs	.+12     	; 0x140c <__ftoa_engine+0x38>
    1400:	80 38       	cpi	r24, 0x80	; 128
    1402:	71 05       	cpc	r23, r1
    1404:	61 05       	cpc	r22, r1
    1406:	09 f0       	breq	.+2      	; 0x140a <__ftoa_engine+0x36>
    1408:	3c 5f       	subi	r19, 0xFC	; 252
    140a:	3c 5f       	subi	r19, 0xFC	; 252
    140c:	3d 93       	st	X+, r19
    140e:	91 30       	cpi	r25, 0x01	; 1
    1410:	08 f0       	brcs	.+2      	; 0x1414 <__ftoa_engine+0x40>
    1412:	80 68       	ori	r24, 0x80	; 128
    1414:	91 1d       	adc	r25, r1
    1416:	df 93       	push	r29
    1418:	cf 93       	push	r28
    141a:	1f 93       	push	r17
    141c:	0f 93       	push	r16
    141e:	ff 92       	push	r15
    1420:	ef 92       	push	r14
    1422:	19 2f       	mov	r17, r25
    1424:	98 7f       	andi	r25, 0xF8	; 248
    1426:	96 95       	lsr	r25
    1428:	e9 2f       	mov	r30, r25
    142a:	96 95       	lsr	r25
    142c:	96 95       	lsr	r25
    142e:	e9 0f       	add	r30, r25
    1430:	ff 27       	eor	r31, r31
    1432:	ee 5a       	subi	r30, 0xAE	; 174
    1434:	fe 4f       	sbci	r31, 0xFE	; 254
    1436:	99 27       	eor	r25, r25
    1438:	33 27       	eor	r19, r19
    143a:	ee 24       	eor	r14, r14
    143c:	ff 24       	eor	r15, r15
    143e:	a7 01       	movw	r20, r14
    1440:	e7 01       	movw	r28, r14
    1442:	05 90       	lpm	r0, Z+
    1444:	08 94       	sec
    1446:	07 94       	ror	r0
    1448:	28 f4       	brcc	.+10     	; 0x1454 <__ftoa_engine+0x80>
    144a:	36 0f       	add	r19, r22
    144c:	e7 1e       	adc	r14, r23
    144e:	f8 1e       	adc	r15, r24
    1450:	49 1f       	adc	r20, r25
    1452:	51 1d       	adc	r21, r1
    1454:	66 0f       	add	r22, r22
    1456:	77 1f       	adc	r23, r23
    1458:	88 1f       	adc	r24, r24
    145a:	99 1f       	adc	r25, r25
    145c:	06 94       	lsr	r0
    145e:	a1 f7       	brne	.-24     	; 0x1448 <__ftoa_engine+0x74>
    1460:	05 90       	lpm	r0, Z+
    1462:	07 94       	ror	r0
    1464:	28 f4       	brcc	.+10     	; 0x1470 <__ftoa_engine+0x9c>
    1466:	e7 0e       	add	r14, r23
    1468:	f8 1e       	adc	r15, r24
    146a:	49 1f       	adc	r20, r25
    146c:	56 1f       	adc	r21, r22
    146e:	c1 1d       	adc	r28, r1
    1470:	77 0f       	add	r23, r23
    1472:	88 1f       	adc	r24, r24
    1474:	99 1f       	adc	r25, r25
    1476:	66 1f       	adc	r22, r22
    1478:	06 94       	lsr	r0
    147a:	a1 f7       	brne	.-24     	; 0x1464 <__ftoa_engine+0x90>
    147c:	05 90       	lpm	r0, Z+
    147e:	07 94       	ror	r0
    1480:	28 f4       	brcc	.+10     	; 0x148c <__ftoa_engine+0xb8>
    1482:	f8 0e       	add	r15, r24
    1484:	49 1f       	adc	r20, r25
    1486:	56 1f       	adc	r21, r22
    1488:	c7 1f       	adc	r28, r23
    148a:	d1 1d       	adc	r29, r1
    148c:	88 0f       	add	r24, r24
    148e:	99 1f       	adc	r25, r25
    1490:	66 1f       	adc	r22, r22
    1492:	77 1f       	adc	r23, r23
    1494:	06 94       	lsr	r0
    1496:	a1 f7       	brne	.-24     	; 0x1480 <__ftoa_engine+0xac>
    1498:	05 90       	lpm	r0, Z+
    149a:	07 94       	ror	r0
    149c:	20 f4       	brcc	.+8      	; 0x14a6 <__ftoa_engine+0xd2>
    149e:	49 0f       	add	r20, r25
    14a0:	56 1f       	adc	r21, r22
    14a2:	c7 1f       	adc	r28, r23
    14a4:	d8 1f       	adc	r29, r24
    14a6:	99 0f       	add	r25, r25
    14a8:	66 1f       	adc	r22, r22
    14aa:	77 1f       	adc	r23, r23
    14ac:	88 1f       	adc	r24, r24
    14ae:	06 94       	lsr	r0
    14b0:	a9 f7       	brne	.-22     	; 0x149c <__ftoa_engine+0xc8>
    14b2:	84 91       	lpm	r24, Z
    14b4:	10 95       	com	r17
    14b6:	17 70       	andi	r17, 0x07	; 7
    14b8:	41 f0       	breq	.+16     	; 0x14ca <__ftoa_engine+0xf6>
    14ba:	d6 95       	lsr	r29
    14bc:	c7 95       	ror	r28
    14be:	57 95       	ror	r21
    14c0:	47 95       	ror	r20
    14c2:	f7 94       	ror	r15
    14c4:	e7 94       	ror	r14
    14c6:	1a 95       	dec	r17
    14c8:	c1 f7       	brne	.-16     	; 0x14ba <__ftoa_engine+0xe6>
    14ca:	e8 ef       	ldi	r30, 0xF8	; 248
    14cc:	f0 e0       	ldi	r31, 0x00	; 0
    14ce:	68 94       	set
    14d0:	15 90       	lpm	r1, Z+
    14d2:	15 91       	lpm	r17, Z+
    14d4:	35 91       	lpm	r19, Z+
    14d6:	65 91       	lpm	r22, Z+
    14d8:	95 91       	lpm	r25, Z+
    14da:	05 90       	lpm	r0, Z+
    14dc:	7f e2       	ldi	r23, 0x2F	; 47
    14de:	73 95       	inc	r23
    14e0:	e1 18       	sub	r14, r1
    14e2:	f1 0a       	sbc	r15, r17
    14e4:	43 0b       	sbc	r20, r19
    14e6:	56 0b       	sbc	r21, r22
    14e8:	c9 0b       	sbc	r28, r25
    14ea:	d0 09       	sbc	r29, r0
    14ec:	c0 f7       	brcc	.-16     	; 0x14de <__ftoa_engine+0x10a>
    14ee:	e1 0c       	add	r14, r1
    14f0:	f1 1e       	adc	r15, r17
    14f2:	43 1f       	adc	r20, r19
    14f4:	56 1f       	adc	r21, r22
    14f6:	c9 1f       	adc	r28, r25
    14f8:	d0 1d       	adc	r29, r0
    14fa:	7e f4       	brtc	.+30     	; 0x151a <__ftoa_engine+0x146>
    14fc:	70 33       	cpi	r23, 0x30	; 48
    14fe:	11 f4       	brne	.+4      	; 0x1504 <__ftoa_engine+0x130>
    1500:	8a 95       	dec	r24
    1502:	e6 cf       	rjmp	.-52     	; 0x14d0 <__ftoa_engine+0xfc>
    1504:	e8 94       	clt
    1506:	01 50       	subi	r16, 0x01	; 1
    1508:	30 f0       	brcs	.+12     	; 0x1516 <__ftoa_engine+0x142>
    150a:	08 0f       	add	r16, r24
    150c:	0a f4       	brpl	.+2      	; 0x1510 <__ftoa_engine+0x13c>
    150e:	00 27       	eor	r16, r16
    1510:	02 17       	cp	r16, r18
    1512:	08 f4       	brcc	.+2      	; 0x1516 <__ftoa_engine+0x142>
    1514:	20 2f       	mov	r18, r16
    1516:	23 95       	inc	r18
    1518:	02 2f       	mov	r16, r18
    151a:	7a 33       	cpi	r23, 0x3A	; 58
    151c:	28 f0       	brcs	.+10     	; 0x1528 <__ftoa_engine+0x154>
    151e:	79 e3       	ldi	r23, 0x39	; 57
    1520:	7d 93       	st	X+, r23
    1522:	2a 95       	dec	r18
    1524:	e9 f7       	brne	.-6      	; 0x1520 <__ftoa_engine+0x14c>
    1526:	10 c0       	rjmp	.+32     	; 0x1548 <__ftoa_engine+0x174>
    1528:	7d 93       	st	X+, r23
    152a:	2a 95       	dec	r18
    152c:	89 f6       	brne	.-94     	; 0x14d0 <__ftoa_engine+0xfc>
    152e:	06 94       	lsr	r0
    1530:	97 95       	ror	r25
    1532:	67 95       	ror	r22
    1534:	37 95       	ror	r19
    1536:	17 95       	ror	r17
    1538:	17 94       	ror	r1
    153a:	e1 18       	sub	r14, r1
    153c:	f1 0a       	sbc	r15, r17
    153e:	43 0b       	sbc	r20, r19
    1540:	56 0b       	sbc	r21, r22
    1542:	c9 0b       	sbc	r28, r25
    1544:	d0 09       	sbc	r29, r0
    1546:	98 f0       	brcs	.+38     	; 0x156e <__ftoa_engine+0x19a>
    1548:	23 95       	inc	r18
    154a:	7e 91       	ld	r23, -X
    154c:	73 95       	inc	r23
    154e:	7a 33       	cpi	r23, 0x3A	; 58
    1550:	08 f0       	brcs	.+2      	; 0x1554 <__ftoa_engine+0x180>
    1552:	70 e3       	ldi	r23, 0x30	; 48
    1554:	7c 93       	st	X, r23
    1556:	20 13       	cpse	r18, r16
    1558:	b8 f7       	brcc	.-18     	; 0x1548 <__ftoa_engine+0x174>
    155a:	7e 91       	ld	r23, -X
    155c:	70 61       	ori	r23, 0x10	; 16
    155e:	7d 93       	st	X+, r23
    1560:	30 f0       	brcs	.+12     	; 0x156e <__ftoa_engine+0x19a>
    1562:	83 95       	inc	r24
    1564:	71 e3       	ldi	r23, 0x31	; 49
    1566:	7d 93       	st	X+, r23
    1568:	70 e3       	ldi	r23, 0x30	; 48
    156a:	2a 95       	dec	r18
    156c:	e1 f7       	brne	.-8      	; 0x1566 <__ftoa_engine+0x192>
    156e:	11 24       	eor	r1, r1
    1570:	ef 90       	pop	r14
    1572:	ff 90       	pop	r15
    1574:	0f 91       	pop	r16
    1576:	1f 91       	pop	r17
    1578:	cf 91       	pop	r28
    157a:	df 91       	pop	r29
    157c:	99 27       	eor	r25, r25
    157e:	87 fd       	sbrc	r24, 7
    1580:	90 95       	com	r25
    1582:	08 95       	ret

00001584 <strnlen_P>:
    1584:	fc 01       	movw	r30, r24
    1586:	05 90       	lpm	r0, Z+
    1588:	61 50       	subi	r22, 0x01	; 1
    158a:	70 40       	sbci	r23, 0x00	; 0
    158c:	01 10       	cpse	r0, r1
    158e:	d8 f7       	brcc	.-10     	; 0x1586 <strnlen_P+0x2>
    1590:	80 95       	com	r24
    1592:	90 95       	com	r25
    1594:	8e 0f       	add	r24, r30
    1596:	9f 1f       	adc	r25, r31
    1598:	08 95       	ret

0000159a <strnlen>:
    159a:	fc 01       	movw	r30, r24
    159c:	61 50       	subi	r22, 0x01	; 1
    159e:	70 40       	sbci	r23, 0x00	; 0
    15a0:	01 90       	ld	r0, Z+
    15a2:	01 10       	cpse	r0, r1
    15a4:	d8 f7       	brcc	.-10     	; 0x159c <strnlen+0x2>
    15a6:	80 95       	com	r24
    15a8:	90 95       	com	r25
    15aa:	8e 0f       	add	r24, r30
    15ac:	9f 1f       	adc	r25, r31
    15ae:	08 95       	ret

000015b0 <fputc>:
    15b0:	0f 93       	push	r16
    15b2:	1f 93       	push	r17
    15b4:	cf 93       	push	r28
    15b6:	df 93       	push	r29
    15b8:	fb 01       	movw	r30, r22
    15ba:	23 81       	ldd	r18, Z+3	; 0x03
    15bc:	21 fd       	sbrc	r18, 1
    15be:	03 c0       	rjmp	.+6      	; 0x15c6 <fputc+0x16>
    15c0:	8f ef       	ldi	r24, 0xFF	; 255
    15c2:	9f ef       	ldi	r25, 0xFF	; 255
    15c4:	2c c0       	rjmp	.+88     	; 0x161e <fputc+0x6e>
    15c6:	22 ff       	sbrs	r18, 2
    15c8:	16 c0       	rjmp	.+44     	; 0x15f6 <fputc+0x46>
    15ca:	46 81       	ldd	r20, Z+6	; 0x06
    15cc:	57 81       	ldd	r21, Z+7	; 0x07
    15ce:	24 81       	ldd	r18, Z+4	; 0x04
    15d0:	35 81       	ldd	r19, Z+5	; 0x05
    15d2:	42 17       	cp	r20, r18
    15d4:	53 07       	cpc	r21, r19
    15d6:	44 f4       	brge	.+16     	; 0x15e8 <fputc+0x38>
    15d8:	a0 81       	ld	r26, Z
    15da:	b1 81       	ldd	r27, Z+1	; 0x01
    15dc:	9d 01       	movw	r18, r26
    15de:	2f 5f       	subi	r18, 0xFF	; 255
    15e0:	3f 4f       	sbci	r19, 0xFF	; 255
    15e2:	31 83       	std	Z+1, r19	; 0x01
    15e4:	20 83       	st	Z, r18
    15e6:	8c 93       	st	X, r24
    15e8:	26 81       	ldd	r18, Z+6	; 0x06
    15ea:	37 81       	ldd	r19, Z+7	; 0x07
    15ec:	2f 5f       	subi	r18, 0xFF	; 255
    15ee:	3f 4f       	sbci	r19, 0xFF	; 255
    15f0:	37 83       	std	Z+7, r19	; 0x07
    15f2:	26 83       	std	Z+6, r18	; 0x06
    15f4:	14 c0       	rjmp	.+40     	; 0x161e <fputc+0x6e>
    15f6:	8b 01       	movw	r16, r22
    15f8:	ec 01       	movw	r28, r24
    15fa:	fb 01       	movw	r30, r22
    15fc:	00 84       	ldd	r0, Z+8	; 0x08
    15fe:	f1 85       	ldd	r31, Z+9	; 0x09
    1600:	e0 2d       	mov	r30, r0
    1602:	09 95       	icall
    1604:	89 2b       	or	r24, r25
    1606:	e1 f6       	brne	.-72     	; 0x15c0 <fputc+0x10>
    1608:	d8 01       	movw	r26, r16
    160a:	16 96       	adiw	r26, 0x06	; 6
    160c:	8d 91       	ld	r24, X+
    160e:	9c 91       	ld	r25, X
    1610:	17 97       	sbiw	r26, 0x07	; 7
    1612:	01 96       	adiw	r24, 0x01	; 1
    1614:	17 96       	adiw	r26, 0x07	; 7
    1616:	9c 93       	st	X, r25
    1618:	8e 93       	st	-X, r24
    161a:	16 97       	sbiw	r26, 0x06	; 6
    161c:	ce 01       	movw	r24, r28
    161e:	df 91       	pop	r29
    1620:	cf 91       	pop	r28
    1622:	1f 91       	pop	r17
    1624:	0f 91       	pop	r16
    1626:	08 95       	ret

00001628 <__ultoa_invert>:
    1628:	fa 01       	movw	r30, r20
    162a:	aa 27       	eor	r26, r26
    162c:	28 30       	cpi	r18, 0x08	; 8
    162e:	51 f1       	breq	.+84     	; 0x1684 <__ultoa_invert+0x5c>
    1630:	20 31       	cpi	r18, 0x10	; 16
    1632:	81 f1       	breq	.+96     	; 0x1694 <__ultoa_invert+0x6c>
    1634:	e8 94       	clt
    1636:	6f 93       	push	r22
    1638:	6e 7f       	andi	r22, 0xFE	; 254
    163a:	6e 5f       	subi	r22, 0xFE	; 254
    163c:	7f 4f       	sbci	r23, 0xFF	; 255
    163e:	8f 4f       	sbci	r24, 0xFF	; 255
    1640:	9f 4f       	sbci	r25, 0xFF	; 255
    1642:	af 4f       	sbci	r26, 0xFF	; 255
    1644:	b1 e0       	ldi	r27, 0x01	; 1
    1646:	3e d0       	rcall	.+124    	; 0x16c4 <__ultoa_invert+0x9c>
    1648:	b4 e0       	ldi	r27, 0x04	; 4
    164a:	3c d0       	rcall	.+120    	; 0x16c4 <__ultoa_invert+0x9c>
    164c:	67 0f       	add	r22, r23
    164e:	78 1f       	adc	r23, r24
    1650:	89 1f       	adc	r24, r25
    1652:	9a 1f       	adc	r25, r26
    1654:	a1 1d       	adc	r26, r1
    1656:	68 0f       	add	r22, r24
    1658:	79 1f       	adc	r23, r25
    165a:	8a 1f       	adc	r24, r26
    165c:	91 1d       	adc	r25, r1
    165e:	a1 1d       	adc	r26, r1
    1660:	6a 0f       	add	r22, r26
    1662:	71 1d       	adc	r23, r1
    1664:	81 1d       	adc	r24, r1
    1666:	91 1d       	adc	r25, r1
    1668:	a1 1d       	adc	r26, r1
    166a:	20 d0       	rcall	.+64     	; 0x16ac <__ultoa_invert+0x84>
    166c:	09 f4       	brne	.+2      	; 0x1670 <__ultoa_invert+0x48>
    166e:	68 94       	set
    1670:	3f 91       	pop	r19
    1672:	2a e0       	ldi	r18, 0x0A	; 10
    1674:	26 9f       	mul	r18, r22
    1676:	11 24       	eor	r1, r1
    1678:	30 19       	sub	r19, r0
    167a:	30 5d       	subi	r19, 0xD0	; 208
    167c:	31 93       	st	Z+, r19
    167e:	de f6       	brtc	.-74     	; 0x1636 <__ultoa_invert+0xe>
    1680:	cf 01       	movw	r24, r30
    1682:	08 95       	ret
    1684:	46 2f       	mov	r20, r22
    1686:	47 70       	andi	r20, 0x07	; 7
    1688:	40 5d       	subi	r20, 0xD0	; 208
    168a:	41 93       	st	Z+, r20
    168c:	b3 e0       	ldi	r27, 0x03	; 3
    168e:	0f d0       	rcall	.+30     	; 0x16ae <__ultoa_invert+0x86>
    1690:	c9 f7       	brne	.-14     	; 0x1684 <__ultoa_invert+0x5c>
    1692:	f6 cf       	rjmp	.-20     	; 0x1680 <__ultoa_invert+0x58>
    1694:	46 2f       	mov	r20, r22
    1696:	4f 70       	andi	r20, 0x0F	; 15
    1698:	40 5d       	subi	r20, 0xD0	; 208
    169a:	4a 33       	cpi	r20, 0x3A	; 58
    169c:	18 f0       	brcs	.+6      	; 0x16a4 <__ultoa_invert+0x7c>
    169e:	49 5d       	subi	r20, 0xD9	; 217
    16a0:	31 fd       	sbrc	r19, 1
    16a2:	40 52       	subi	r20, 0x20	; 32
    16a4:	41 93       	st	Z+, r20
    16a6:	02 d0       	rcall	.+4      	; 0x16ac <__ultoa_invert+0x84>
    16a8:	a9 f7       	brne	.-22     	; 0x1694 <__ultoa_invert+0x6c>
    16aa:	ea cf       	rjmp	.-44     	; 0x1680 <__ultoa_invert+0x58>
    16ac:	b4 e0       	ldi	r27, 0x04	; 4
    16ae:	a6 95       	lsr	r26
    16b0:	97 95       	ror	r25
    16b2:	87 95       	ror	r24
    16b4:	77 95       	ror	r23
    16b6:	67 95       	ror	r22
    16b8:	ba 95       	dec	r27
    16ba:	c9 f7       	brne	.-14     	; 0x16ae <__ultoa_invert+0x86>
    16bc:	00 97       	sbiw	r24, 0x00	; 0
    16be:	61 05       	cpc	r22, r1
    16c0:	71 05       	cpc	r23, r1
    16c2:	08 95       	ret
    16c4:	9b 01       	movw	r18, r22
    16c6:	ac 01       	movw	r20, r24
    16c8:	0a 2e       	mov	r0, r26
    16ca:	06 94       	lsr	r0
    16cc:	57 95       	ror	r21
    16ce:	47 95       	ror	r20
    16d0:	37 95       	ror	r19
    16d2:	27 95       	ror	r18
    16d4:	ba 95       	dec	r27
    16d6:	c9 f7       	brne	.-14     	; 0x16ca <__ultoa_invert+0xa2>
    16d8:	62 0f       	add	r22, r18
    16da:	73 1f       	adc	r23, r19
    16dc:	84 1f       	adc	r24, r20
    16de:	95 1f       	adc	r25, r21
    16e0:	a0 1d       	adc	r26, r0
    16e2:	08 95       	ret

000016e4 <__prologue_saves__>:
    16e4:	2f 92       	push	r2
    16e6:	3f 92       	push	r3
    16e8:	4f 92       	push	r4
    16ea:	5f 92       	push	r5
    16ec:	6f 92       	push	r6
    16ee:	7f 92       	push	r7
    16f0:	8f 92       	push	r8
    16f2:	9f 92       	push	r9
    16f4:	af 92       	push	r10
    16f6:	bf 92       	push	r11
    16f8:	cf 92       	push	r12
    16fa:	df 92       	push	r13
    16fc:	ef 92       	push	r14
    16fe:	ff 92       	push	r15
    1700:	0f 93       	push	r16
    1702:	1f 93       	push	r17
    1704:	cf 93       	push	r28
    1706:	df 93       	push	r29
    1708:	cd b7       	in	r28, 0x3d	; 61
    170a:	de b7       	in	r29, 0x3e	; 62
    170c:	ca 1b       	sub	r28, r26
    170e:	db 0b       	sbc	r29, r27
    1710:	0f b6       	in	r0, 0x3f	; 63
    1712:	f8 94       	cli
    1714:	de bf       	out	0x3e, r29	; 62
    1716:	0f be       	out	0x3f, r0	; 63
    1718:	cd bf       	out	0x3d, r28	; 61
    171a:	09 94       	ijmp

0000171c <__epilogue_restores__>:
    171c:	2a 88       	ldd	r2, Y+18	; 0x12
    171e:	39 88       	ldd	r3, Y+17	; 0x11
    1720:	48 88       	ldd	r4, Y+16	; 0x10
    1722:	5f 84       	ldd	r5, Y+15	; 0x0f
    1724:	6e 84       	ldd	r6, Y+14	; 0x0e
    1726:	7d 84       	ldd	r7, Y+13	; 0x0d
    1728:	8c 84       	ldd	r8, Y+12	; 0x0c
    172a:	9b 84       	ldd	r9, Y+11	; 0x0b
    172c:	aa 84       	ldd	r10, Y+10	; 0x0a
    172e:	b9 84       	ldd	r11, Y+9	; 0x09
    1730:	c8 84       	ldd	r12, Y+8	; 0x08
    1732:	df 80       	ldd	r13, Y+7	; 0x07
    1734:	ee 80       	ldd	r14, Y+6	; 0x06
    1736:	fd 80       	ldd	r15, Y+5	; 0x05
    1738:	0c 81       	ldd	r16, Y+4	; 0x04
    173a:	1b 81       	ldd	r17, Y+3	; 0x03
    173c:	aa 81       	ldd	r26, Y+2	; 0x02
    173e:	b9 81       	ldd	r27, Y+1	; 0x01
    1740:	ce 0f       	add	r28, r30
    1742:	d1 1d       	adc	r29, r1
    1744:	0f b6       	in	r0, 0x3f	; 63
    1746:	f8 94       	cli
    1748:	de bf       	out	0x3e, r29	; 62
    174a:	0f be       	out	0x3f, r0	; 63
    174c:	cd bf       	out	0x3d, r28	; 61
    174e:	ed 01       	movw	r28, r26
    1750:	08 95       	ret

00001752 <_exit>:
    1752:	f8 94       	cli

00001754 <__stop_program>:
    1754:	ff cf       	rjmp	.-2      	; 0x1754 <__stop_program>
