
Project 2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000140  00800100  0000154c  000015e0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000154c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000049  00800240  00800240  00001720  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001720  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000177c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000060  00000000  00000000  000017bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c6f  00000000  00000000  0000181c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000724  00000000  00000000  0000248b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000052c  00000000  00000000  00002baf  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000f0  00000000  00000000  000030dc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000045f  00000000  00000000  000031cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000022b  00000000  00000000  0000362b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  00003856  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__ctors_end>
       4:	0c 94 15 01 	jmp	0x22a	; 0x22a <__bad_interrupt>
       8:	0c 94 15 01 	jmp	0x22a	; 0x22a <__bad_interrupt>
       c:	0c 94 15 01 	jmp	0x22a	; 0x22a <__bad_interrupt>
      10:	0c 94 15 01 	jmp	0x22a	; 0x22a <__bad_interrupt>
      14:	0c 94 15 01 	jmp	0x22a	; 0x22a <__bad_interrupt>
      18:	0c 94 15 01 	jmp	0x22a	; 0x22a <__bad_interrupt>
      1c:	0c 94 15 01 	jmp	0x22a	; 0x22a <__bad_interrupt>
      20:	0c 94 15 01 	jmp	0x22a	; 0x22a <__bad_interrupt>
      24:	0c 94 15 01 	jmp	0x22a	; 0x22a <__bad_interrupt>
      28:	0c 94 15 01 	jmp	0x22a	; 0x22a <__bad_interrupt>
      2c:	0c 94 15 01 	jmp	0x22a	; 0x22a <__bad_interrupt>
      30:	0c 94 15 01 	jmp	0x22a	; 0x22a <__bad_interrupt>
      34:	0c 94 15 01 	jmp	0x22a	; 0x22a <__bad_interrupt>
      38:	0c 94 15 01 	jmp	0x22a	; 0x22a <__bad_interrupt>
      3c:	0c 94 15 01 	jmp	0x22a	; 0x22a <__bad_interrupt>
      40:	0c 94 15 01 	jmp	0x22a	; 0x22a <__bad_interrupt>
      44:	0c 94 15 01 	jmp	0x22a	; 0x22a <__bad_interrupt>
      48:	0c 94 15 01 	jmp	0x22a	; 0x22a <__bad_interrupt>
      4c:	0c 94 15 01 	jmp	0x22a	; 0x22a <__bad_interrupt>
      50:	0c 94 bd 03 	jmp	0x77a	; 0x77a <__vector_20>
      54:	0c 94 dd 03 	jmp	0x7ba	; 0x7ba <__vector_21>
      58:	0c 94 15 01 	jmp	0x22a	; 0x22a <__bad_interrupt>
      5c:	0c 94 15 01 	jmp	0x22a	; 0x22a <__bad_interrupt>
      60:	0c 94 15 01 	jmp	0x22a	; 0x22a <__bad_interrupt>
      64:	0c 94 15 01 	jmp	0x22a	; 0x22a <__bad_interrupt>
      68:	bf 02       	muls	r27, r31
      6a:	bf 02       	muls	r27, r31
      6c:	bf 02       	muls	r27, r31
      6e:	bf 02       	muls	r27, r31
      70:	bf 02       	muls	r27, r31
      72:	bf 02       	muls	r27, r31
      74:	bf 02       	muls	r27, r31
      76:	bf 02       	muls	r27, r31
      78:	bf 02       	muls	r27, r31
      7a:	bf 02       	muls	r27, r31
      7c:	d4 02       	muls	r29, r20
      7e:	d4 02       	muls	r29, r20
      80:	d4 02       	muls	r29, r20
      82:	d4 02       	muls	r29, r20
      84:	d4 02       	muls	r29, r20
      86:	d4 02       	muls	r29, r20
      88:	d4 02       	muls	r29, r20
      8a:	3a 02       	muls	r19, r26
      8c:	d4 02       	muls	r29, r20
      8e:	93 02       	muls	r25, r19
      90:	d4 02       	muls	r29, r20
      92:	98 02       	muls	r25, r24
      94:	d4 02       	muls	r29, r20
      96:	d4 02       	muls	r29, r20
      98:	d4 02       	muls	r29, r20
      9a:	d4 02       	muls	r29, r20
      9c:	d4 02       	muls	r29, r20
      9e:	d4 02       	muls	r29, r20
      a0:	1a 02       	muls	r17, r26
      a2:	bf 01       	movw	r22, r30
      a4:	c7 01       	movw	r24, r14
      a6:	d4 02       	muls	r29, r20
      a8:	cf 01       	movw	r24, r30
      aa:	d4 02       	muls	r29, r20
      ac:	d4 02       	muls	r29, r20
      ae:	a7 02       	muls	r26, r23
      b0:	d6 01       	movw	r26, r12
      b2:	d4 02       	muls	r29, r20
      b4:	56 02       	muls	r21, r22
      b6:	d4 02       	muls	r29, r20
      b8:	d4 02       	muls	r29, r20
      ba:	d4 02       	muls	r29, r20
      bc:	d4 02       	muls	r29, r20
      be:	d4 02       	muls	r29, r20
      c0:	d4 02       	muls	r29, r20
      c2:	d4 02       	muls	r29, r20
      c4:	d4 02       	muls	r29, r20
      c6:	d4 02       	muls	r29, r20
      c8:	d4 02       	muls	r29, r20
      ca:	3a 02       	muls	r19, r26
      cc:	d4 02       	muls	r29, r20
      ce:	93 02       	muls	r25, r19
      d0:	d4 02       	muls	r29, r20
      d2:	98 02       	muls	r25, r24
      d4:	d4 02       	muls	r29, r20
      d6:	d4 02       	muls	r29, r20
      d8:	d4 02       	muls	r29, r20
      da:	d4 02       	muls	r29, r20
      dc:	d4 02       	muls	r29, r20
      de:	d4 02       	muls	r29, r20
      e0:	1a 02       	muls	r17, r26
      e2:	bf 01       	movw	r22, r30
      e4:	c7 01       	movw	r24, r14
      e6:	d4 02       	muls	r29, r20
      e8:	cf 01       	movw	r24, r30
      ea:	d4 02       	muls	r29, r20
      ec:	d4 02       	muls	r29, r20
      ee:	a7 02       	muls	r26, r23
      f0:	d6 01       	movw	r26, r12
      f2:	d4 02       	muls	r29, r20
      f4:	56 02       	muls	r21, r22

000000f6 <__trampolines_end>:
      f6:	00 40       	sbci	r16, 0x00	; 0
      f8:	7a 10       	cpse	r7, r10
      fa:	f3 5a       	subi	r31, 0xA3	; 163
      fc:	00 a0       	ldd	r0, Z+32	; 0x20
      fe:	72 4e       	sbci	r23, 0xE2	; 226
     100:	18 09       	sbc	r17, r8
     102:	00 10       	cpse	r0, r0
     104:	a5 d4       	rcall	.+2378   	; 0xa50 <__fp_nan+0x4>
     106:	e8 00       	.word	0x00e8	; ????
     108:	00 e8       	ldi	r16, 0x80	; 128
     10a:	76 48       	sbci	r23, 0x86	; 134
     10c:	17 00       	.word	0x0017	; ????
     10e:	00 e4       	ldi	r16, 0x40	; 64
     110:	0b 54       	subi	r16, 0x4B	; 75
     112:	02 00       	.word	0x0002	; ????
     114:	00 ca       	rjmp	.-3072   	; 0xfffff516 <__eeprom_end+0xff7ef516>
     116:	9a 3b       	cpi	r25, 0xBA	; 186
     118:	00 00       	nop
     11a:	00 e1       	ldi	r16, 0x10	; 16
     11c:	f5 05       	cpc	r31, r5
     11e:	00 00       	nop
     120:	80 96       	adiw	r24, 0x20	; 32
     122:	98 00       	.word	0x0098	; ????
     124:	00 00       	nop
     126:	40 42       	sbci	r20, 0x20	; 32
     128:	0f 00       	.word	0x000f	; ????
     12a:	00 00       	nop
     12c:	a0 86       	std	Z+8, r10	; 0x08
     12e:	01 00       	.word	0x0001	; ????
     130:	00 00       	nop
     132:	10 27       	eor	r17, r16
     134:	00 00       	nop
     136:	00 00       	nop
     138:	e8 03       	fmulsu	r22, r16
     13a:	00 00       	nop
     13c:	00 00       	nop
     13e:	64 00       	.word	0x0064	; ????
     140:	00 00       	nop
     142:	00 00       	nop
     144:	0a 00       	.word	0x000a	; ????
     146:	00 00       	nop
     148:	00 00       	nop
     14a:	01 00       	.word	0x0001	; ????
     14c:	00 00       	nop
     14e:	00 00       	nop
     150:	2c 76       	andi	r18, 0x6C	; 108
     152:	d8 88       	ldd	r13, Y+16	; 0x10
     154:	dc 67       	ori	r29, 0x7C	; 124
     156:	4f 08       	sbc	r4, r15
     158:	23 df       	rcall	.-442    	; 0xffffffa0 <__eeprom_end+0xff7effa0>
     15a:	c1 df       	rcall	.-126    	; 0xde <__SREG__+0x9f>
     15c:	ae 59       	subi	r26, 0x9E	; 158
     15e:	e1 b1       	in	r30, 0x01	; 1
     160:	b7 96       	adiw	r30, 0x27	; 39
     162:	e5 e3       	ldi	r30, 0x35	; 53
     164:	e4 53       	subi	r30, 0x34	; 52
     166:	c6 3a       	cpi	r28, 0xA6	; 166
     168:	e6 51       	subi	r30, 0x16	; 22
     16a:	99 76       	andi	r25, 0x69	; 105
     16c:	96 e8       	ldi	r25, 0x86	; 134
     16e:	e6 c2       	rjmp	.+1484   	; 0x73c <__LOCK_REGION_LENGTH__+0x33c>
     170:	84 26       	eor	r8, r20
     172:	eb 89       	ldd	r30, Y+19	; 0x13
     174:	8c 9b       	sbis	0x11, 4	; 17
     176:	62 ed       	ldi	r22, 0xD2	; 210
     178:	40 7c       	andi	r20, 0xC0	; 192
     17a:	6f fc       	.word	0xfc6f	; ????
     17c:	ef bc       	out	0x2f, r14	; 47
     17e:	9c 9f       	mul	r25, r28
     180:	40 f2       	brcs	.-112    	; 0x112 <__trampolines_end+0x1c>
     182:	ba a5       	ldd	r27, Y+42	; 0x2a
     184:	6f a5       	ldd	r22, Y+47	; 0x2f
     186:	f4 90       	lpm	r15, Z
     188:	05 5a       	subi	r16, 0xA5	; 165
     18a:	2a f7       	brpl	.-54     	; 0x156 <__trampolines_end+0x60>
     18c:	5c 93       	st	X, r21
     18e:	6b 6c       	ori	r22, 0xCB	; 203
     190:	f9 67       	ori	r31, 0x79	; 121
     192:	6d c1       	rjmp	.+730    	; 0x46e <__LOCK_REGION_LENGTH__+0x6e>
     194:	1b fc       	.word	0xfc1b	; ????
     196:	e0 e4       	ldi	r30, 0x40	; 64
     198:	0d 47       	sbci	r16, 0x7D	; 125
     19a:	fe f5       	brtc	.+126    	; 0x21a <.do_clear_bss_loop>
     19c:	20 e6       	ldi	r18, 0x60	; 96
     19e:	b5 00       	.word	0x00b5	; ????
     1a0:	d0 ed       	ldi	r29, 0xD0	; 208
     1a2:	90 2e       	mov	r9, r16
     1a4:	03 00       	.word	0x0003	; ????
     1a6:	94 35       	cpi	r25, 0x54	; 84
     1a8:	77 05       	cpc	r23, r7
     1aa:	00 80       	ld	r0, Z
     1ac:	84 1e       	adc	r8, r20
     1ae:	08 00       	.word	0x0008	; ????
     1b0:	00 20       	and	r0, r0
     1b2:	4e 0a       	sbc	r4, r30
     1b4:	00 00       	nop
     1b6:	00 c8       	rjmp	.-4096   	; 0xfffff1b8 <__eeprom_end+0xff7ef1b8>
     1b8:	0c 33       	cpi	r16, 0x3C	; 60
     1ba:	33 33       	cpi	r19, 0x33	; 51
     1bc:	33 0f       	add	r19, r19
     1be:	98 6e       	ori	r25, 0xE8	; 232
     1c0:	12 83       	std	Z+2, r17	; 0x02
     1c2:	11 41       	sbci	r17, 0x11	; 17
     1c4:	ef 8d       	ldd	r30, Y+31	; 0x1f
     1c6:	21 14       	cp	r2, r1
     1c8:	89 3b       	cpi	r24, 0xB9	; 185
     1ca:	e6 55       	subi	r30, 0x56	; 86
     1cc:	16 cf       	rjmp	.-468    	; 0xfffffffa <__eeprom_end+0xff7efffa>
     1ce:	fe e6       	ldi	r31, 0x6E	; 110
     1d0:	db 18       	sub	r13, r11
     1d2:	d1 84       	ldd	r13, Z+9	; 0x09
     1d4:	4b 38       	cpi	r20, 0x8B	; 139
     1d6:	1b f7       	brvc	.-58     	; 0x19e <__trampolines_end+0xa8>
     1d8:	7c 1d       	adc	r23, r12
     1da:	90 1d       	adc	r25, r0
     1dc:	a4 bb       	out	0x14, r26	; 20
     1de:	e4 24       	eor	r14, r4
     1e0:	20 32       	cpi	r18, 0x20	; 32
     1e2:	84 72       	andi	r24, 0x24	; 36
     1e4:	5e 22       	and	r5, r30
     1e6:	81 00       	.word	0x0081	; ????
     1e8:	c9 f1       	breq	.+114    	; 0x25c <init_USART+0x12>
     1ea:	24 ec       	ldi	r18, 0xC4	; 196
     1ec:	a1 e5       	ldi	r26, 0x51	; 81
     1ee:	3d 27       	eor	r19, r29

000001f0 <__ctors_end>:
     1f0:	11 24       	eor	r1, r1
     1f2:	1f be       	out	0x3f, r1	; 63
     1f4:	cf ef       	ldi	r28, 0xFF	; 255
     1f6:	d8 e0       	ldi	r29, 0x08	; 8
     1f8:	de bf       	out	0x3e, r29	; 62
     1fa:	cd bf       	out	0x3d, r28	; 61

000001fc <__do_copy_data>:
     1fc:	12 e0       	ldi	r17, 0x02	; 2
     1fe:	a0 e0       	ldi	r26, 0x00	; 0
     200:	b1 e0       	ldi	r27, 0x01	; 1
     202:	ec e4       	ldi	r30, 0x4C	; 76
     204:	f5 e1       	ldi	r31, 0x15	; 21
     206:	02 c0       	rjmp	.+4      	; 0x20c <__do_copy_data+0x10>
     208:	05 90       	lpm	r0, Z+
     20a:	0d 92       	st	X+, r0
     20c:	a0 34       	cpi	r26, 0x40	; 64
     20e:	b1 07       	cpc	r27, r17
     210:	d9 f7       	brne	.-10     	; 0x208 <__do_copy_data+0xc>

00000212 <__do_clear_bss>:
     212:	22 e0       	ldi	r18, 0x02	; 2
     214:	a0 e4       	ldi	r26, 0x40	; 64
     216:	b2 e0       	ldi	r27, 0x02	; 2
     218:	01 c0       	rjmp	.+2      	; 0x21c <.do_clear_bss_start>

0000021a <.do_clear_bss_loop>:
     21a:	1d 92       	st	X+, r1

0000021c <.do_clear_bss_start>:
     21c:	a9 38       	cpi	r26, 0x89	; 137
     21e:	b2 07       	cpc	r27, r18
     220:	e1 f7       	brne	.-8      	; 0x21a <.do_clear_bss_loop>
     222:	0e 94 64 01 	call	0x2c8	; 0x2c8 <main>
     226:	0c 94 a4 0a 	jmp	0x1548	; 0x1548 <_exit>

0000022a <__bad_interrupt>:
     22a:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000022e <init_adc>:
	
}

/* Initializing ADc registers */
void init_adc() {
	ADMUX = (1<<6)|(1<<1); //sets voltage ref to Vcc and starts ADC2
     22e:	82 e4       	ldi	r24, 0x42	; 66
     230:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
	ADCSRA  = (1<<7)|(1<<6)|(1<<5)|(1<<3)|(7<<0); //enable adc, starts conversion, enable interrupt, sets prescalar 128
     234:	8f ee       	ldi	r24, 0xEF	; 239
     236:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__DATA_REGION_ORIGIN__+0x1a>
	ADCSRB = (1<<2);// sets timer0 overflow 
     23a:	84 e0       	ldi	r24, 0x04	; 4
     23c:	80 93 7b 00 	sts	0x007B, r24	; 0x80007b <__DATA_REGION_ORIGIN__+0x1b>
     240:	08 95       	ret

00000242 <init_ports>:
}

/* Initializing Ports */
void init_ports() {
	
	DDRB = (1<<3);		// Initialize turn bit 3 to output
     242:	88 e0       	ldi	r24, 0x08	; 8
     244:	84 b9       	out	0x04, r24	; 4
	PORTB = 0;		// Initialize to all off	
     246:	15 b8       	out	0x05, r1	; 5
     248:	08 95       	ret

0000024a <init_USART>:
}

/* Initializing USART registers */
void init_USART() {
	UCSR0B	= (1<<RXEN0) | (1<<TXEN0) | (1<<TXCIE0) | (0<<UCSZ02);  //enable receiver, transmitter, TX Complete and transmit interrupt and setting data to 8 bits
     24a:	88 e5       	ldi	r24, 0x58	; 88
     24c:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
	UBRR0 = 16;  //baud rate = 58823, 57600
     250:	80 e1       	ldi	r24, 0x10	; 16
     252:	90 e0       	ldi	r25, 0x00	; 0
     254:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
     258:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
     25c:	08 95       	ret

0000025e <init_timer0>:
}

/* Initializing Timer0 registers */
void init_timer0() {
	
	TCCR0A = 0;
     25e:	14 bc       	out	0x24, r1	; 36
	TIMSK0 = 0;
     260:	10 92 6e 00 	sts	0x006E, r1	; 0x80006e <__DATA_REGION_ORIGIN__+0xe>
	TCCR0B = (5<<0); // prescalar 1024
     264:	85 e0       	ldi	r24, 0x05	; 5
     266:	85 bd       	out	0x25, r24	; 37
	TCNT0 = 6; // TCNT0 set to 6 so that will cause timer overflow after 16 ms
     268:	86 e0       	ldi	r24, 0x06	; 6
     26a:	86 bd       	out	0x26, r24	; 38
     26c:	08 95       	ret

0000026e <init_timer2>:
}

/* Initializing Timer2 registers */
void init_timer2() {
	
	TCCR2A = (1<<7)|(1<<0); // Clear OC2A on Compare Match when Upcounting , Phase Correct PWM Mode
     26e:	81 e8       	ldi	r24, 0x81	; 129
     270:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__DATA_REGION_ORIGIN__+0x50>
	TCCR2B = (6<<0); // Phase Correct PWM Mode, prescalar 256
     274:	86 e0       	ldi	r24, 0x06	; 6
     276:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__DATA_REGION_ORIGIN__+0x51>
	OCR2A = 0; // turn off led
     27a:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__DATA_REGION_ORIGIN__+0x53>
     27e:	08 95       	ret

00000280 <sendmsg>:

/* sendmsg function*/
void sendmsg (char *s)
{
	qcntr = 0;    /*preset indices*/
	sndcntr = 1;  /*set to one because first character already sent*/
     280:	21 e0       	ldi	r18, 0x01	; 1
     282:	20 93 42 02 	sts	0x0242, r18	; 0x800242 <sndcntr>
	
	queue[qcntr++] = 0x0d;   /*put CRLF into the queue first*/
     286:	e8 e4       	ldi	r30, 0x48	; 72
     288:	f2 e0       	ldi	r31, 0x02	; 2
     28a:	2d e0       	ldi	r18, 0x0D	; 13
     28c:	20 83       	st	Z, r18
	queue[qcntr++] = 0x0a;
     28e:	22 e0       	ldi	r18, 0x02	; 2
     290:	20 93 43 02 	sts	0x0243, r18	; 0x800243 <qcntr>
     294:	2a e0       	ldi	r18, 0x0A	; 10
     296:	21 83       	std	Z+1, r18	; 0x01
	while (*s)
     298:	fc 01       	movw	r30, r24
     29a:	20 81       	ld	r18, Z
     29c:	22 23       	and	r18, r18
     29e:	79 f0       	breq	.+30     	; 0x2be <sendmsg+0x3e>
     2a0:	dc 01       	movw	r26, r24
	queue[qcntr++] = *s++;   /*put characters into queue*/
     2a2:	e0 91 43 02 	lds	r30, 0x0243	; 0x800243 <qcntr>
     2a6:	81 e0       	ldi	r24, 0x01	; 1
     2a8:	8e 0f       	add	r24, r30
     2aa:	80 93 43 02 	sts	0x0243, r24	; 0x800243 <qcntr>
     2ae:	8d 91       	ld	r24, X+
     2b0:	f0 e0       	ldi	r31, 0x00	; 0
     2b2:	e8 5b       	subi	r30, 0xB8	; 184
     2b4:	fd 4f       	sbci	r31, 0xFD	; 253
     2b6:	80 83       	st	Z, r24
	qcntr = 0;    /*preset indices*/
	sndcntr = 1;  /*set to one because first character already sent*/
	
	queue[qcntr++] = 0x0d;   /*put CRLF into the queue first*/
	queue[qcntr++] = 0x0a;
	while (*s)
     2b8:	8c 91       	ld	r24, X
     2ba:	81 11       	cpse	r24, r1
     2bc:	f2 cf       	rjmp	.-28     	; 0x2a2 <sendmsg+0x22>
	queue[qcntr++] = *s++;   /*put characters into queue*/
	
	UDR0 = queue[0];  /*send first character to start process*/
     2be:	80 91 48 02 	lds	r24, 0x0248	; 0x800248 <queue>
     2c2:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
     2c6:	08 95       	ret

000002c8 <main>:
unsigned int enContDisplay = 0; //enable continuous display


/* Main */
int main(void)
{
     2c8:	cf 93       	push	r28
     2ca:	df 93       	push	r29
     2cc:	cd b7       	in	r28, 0x3d	; 61
     2ce:	de b7       	in	r29, 0x3e	; 62
     2d0:	e8 97       	sbiw	r28, 0x38	; 56
     2d2:	0f b6       	in	r0, 0x3f	; 63
     2d4:	f8 94       	cli
     2d6:	de bf       	out	0x3e, r29	; 62
     2d8:	0f be       	out	0x3f, r0	; 63
     2da:	cd bf       	out	0x3d, r28	; 61
	char str_adc_mV[9]; // string written to user for adc in mV

	int Brightness; // variable that user will enter to set brightness of LED
	
	/* Calling Initialized Registers */
	init_ports(); // initializes ports
     2dc:	0e 94 21 01 	call	0x242	; 0x242 <init_ports>
	init_USART(); // initializes USART
     2e0:	0e 94 25 01 	call	0x24a	; 0x24a <init_USART>
	init_adc(); // initializes adc
     2e4:	0e 94 17 01 	call	0x22e	; 0x22e <init_adc>
	init_timer0(); // initializes timer0
     2e8:	0e 94 2f 01 	call	0x25e	; 0x25e <init_timer0>
	//init_timer1(); // initializes timer1
	init_timer2(); // initializes timer2
     2ec:	0e 94 37 01 	call	0x26e	; 0x26e <init_timer2>

	sei(); /*global interrupt enable */
     2f0:	78 94       	sei

	while (1)
	{	
		if (UCSR0A & (1<<RXC0)) /*check for character received*/
     2f2:	0f 2e       	mov	r0, r31
     2f4:	f0 ec       	ldi	r31, 0xC0	; 192
     2f6:	ef 2e       	mov	r14, r31
     2f8:	f1 2c       	mov	r15, r1
     2fa:	f0 2d       	mov	r31, r0
		{
			ch = UDR0;    /*get character sent from PC*/
     2fc:	0f 2e       	mov	r0, r31
     2fe:	f6 ec       	ldi	r31, 0xC6	; 198
     300:	4f 2e       	mov	r4, r31
     302:	51 2c       	mov	r5, r1
     304:	f0 2d       	mov	r31, r0
				break;
				
				/* Report OCR2A Value */
				case 'S':
				case 's':
					sprintf(data, "OCR2A = %d", OCR2A); // Report OCR2A value
     306:	ce 01       	movw	r24, r28
     308:	01 96       	adiw	r24, 0x01	; 1
     30a:	3c 01       	movw	r6, r24
				
				/* Report ADC Value in mV to user */
				case 'V':
				case 'v':
					adc_mV = ((adc_reading/divider)*5000); // Calculates ADC in mV
					dtostrf(adc_mV,8,2,str_adc_mV);  // Changes value from double to string
     30c:	fe 01       	movw	r30, r28
     30e:	b6 96       	adiw	r30, 0x26	; 38
     310:	f8 ab       	std	Y+48, r31	; 0x30
     312:	ef a7       	std	Y+47, r30	; 0x2f
				/* Report Temperature to user */
				case 'T':
				case 't':
					if (input == Temp) {
						temp = (adc_reading*500)/divider; 
						dtostrf(temp,6,2,str_temp); // Changes value from double to string
     314:	4e 96       	adiw	r24, 0x1e	; 30
     316:	9a ab       	std	Y+50, r25	; 0x32
     318:	89 ab       	std	Y+49, r24	; 0x31
				
				/* Report ADC Value in mV to user */
				case 'V':
				case 'v':
					adc_mV = ((adc_reading/divider)*5000); // Calculates ADC in mV
					dtostrf(adc_mV,8,2,str_adc_mV);  // Changes value from double to string
     31a:	9f a5       	ldd	r25, Y+47	; 0x2f
     31c:	9d ab       	std	Y+53, r25	; 0x35
     31e:	e8 a9       	ldd	r30, Y+48	; 0x30
     320:	ee ab       	std	Y+54, r30	; 0x36
				/* Report Temperature to user */
				case 'T':
				case 't':
					if (input == Temp) {
						temp = (adc_reading*500)/divider; 
						dtostrf(temp,6,2,str_temp); // Changes value from double to string
     322:	f9 a9       	ldd	r31, Y+49	; 0x31
     324:	ff ab       	std	Y+55, r31	; 0x37
     326:	2a a9       	ldd	r18, Y+50	; 0x32
     328:	28 af       	std	Y+56, r18	; 0x38
     32a:	6b aa       	std	Y+51, r6	; 0x33
     32c:	7c aa       	std	Y+52, r7	; 0x34
				break;
				
				/* Report Values Continuously */
				case 'C':
				case 'c':
					enContDisplay = 1; //enable continuous adc display
     32e:	88 24       	eor	r8, r8
     330:	83 94       	inc	r8
     332:	91 2c       	mov	r9, r1
				/* Report ADC Value in mV to user */
				case 'V':
				case 'v':
					adc_mV = ((adc_reading/divider)*5000); // Calculates ADC in mV
					dtostrf(adc_mV,8,2,str_adc_mV);  // Changes value from double to string
					sprintf(data, "ADC value = %s mV",str_adc_mV); //Report ADC value in mV
     334:	0f 2e       	mov	r0, r31
     336:	f2 e2       	ldi	r31, 0x22	; 34
     338:	af 2e       	mov	r10, r31
     33a:	f2 e0       	ldi	r31, 0x02	; 2
     33c:	bf 2e       	mov	r11, r31
     33e:	f0 2d       	mov	r31, r0
				break;
				
				/* Report ADC Value to user */
				case 'A':
				case 'a':
					sprintf(data, "ADC value = %lu", adc_reading); //Report ADC value
     340:	0f 2e       	mov	r0, r31
     342:	f2 e1       	ldi	r31, 0x12	; 18
     344:	cf 2e       	mov	r12, r31
     346:	f2 e0       	ldi	r31, 0x02	; 2
     348:	df 2e       	mov	r13, r31
     34a:	f0 2d       	mov	r31, r0
				case 'T':
				case 't':
					if (input == Temp) {
						temp = (adc_reading*500)/divider; 
						dtostrf(temp,6,2,str_temp); // Changes value from double to string
						sprintf(data,"LM35 Temperature = %s deg C",str_temp); //Report Temperature value
     34c:	0f 2e       	mov	r0, r31
     34e:	f6 ef       	ldi	r31, 0xF6	; 246
     350:	2f 2e       	mov	r2, r31
     352:	f1 e0       	ldi	r31, 0x01	; 1
     354:	3f 2e       	mov	r3, r31
     356:	f0 2d       	mov	r31, r0

	sei(); /*global interrupt enable */

	while (1)
	{	
		if (UCSR0A & (1<<RXC0)) /*check for character received*/
     358:	f7 01       	movw	r30, r14
     35a:	80 81       	ld	r24, Z
     35c:	88 23       	and	r24, r24
     35e:	0c f0       	brlt	.+2      	; 0x362 <main+0x9a>
     360:	27 c1       	rjmp	.+590    	; 0x5b0 <__LOCK_REGION_LENGTH__+0x1b0>
		{
			ch = UDR0;    /*get character sent from PC*/
     362:	f2 01       	movw	r30, r4
     364:	60 81       	ld	r22, Z
			switch (ch) { //character input
     366:	86 2f       	mov	r24, r22
     368:	90 e0       	ldi	r25, 0x00	; 0
     36a:	fc 01       	movw	r30, r24
     36c:	f0 97       	sbiw	r30, 0x30	; 48
     36e:	e7 34       	cpi	r30, 0x47	; 71
     370:	f1 05       	cpc	r31, r1
     372:	08 f0       	brcs	.+2      	; 0x376 <main+0xae>
     374:	19 c1       	rjmp	.+562    	; 0x5a8 <__LOCK_REGION_LENGTH__+0x1a8>
     376:	ec 5c       	subi	r30, 0xCC	; 204
     378:	ff 4f       	sbci	r31, 0xFF	; 255
     37a:	0c 94 48 05 	jmp	0xa90	; 0xa90 <__tablejump2__>
				
				/* Sets ADC to ADC2 */
				case 'M':
				case 'm':
					input = Temp;
     37e:	82 e0       	ldi	r24, 0x02	; 2
     380:	80 93 7a 02 	sts	0x027A, r24	; 0x80027a <input>
					sendmsg(msg2);
     384:	82 ec       	ldi	r24, 0xC2	; 194
     386:	91 e0       	ldi	r25, 0x01	; 1
     388:	0e 94 40 01 	call	0x280	; 0x280 <sendmsg>
				break;
     38c:	11 c1       	rjmp	.+546    	; 0x5b0 <__LOCK_REGION_LENGTH__+0x1b0>
				
				/* Sets ADC to ADC1 */
				case 'N':
				case 'n':
					input = LDR;
     38e:	f1 e0       	ldi	r31, 0x01	; 1
     390:	f0 93 7a 02 	sts	0x027A, r31	; 0x80027a <input>
					sendmsg(msg3);
     394:	82 eb       	ldi	r24, 0xB2	; 178
     396:	91 e0       	ldi	r25, 0x01	; 1
     398:	0e 94 40 01 	call	0x280	; 0x280 <sendmsg>
				break;
     39c:	09 c1       	rjmp	.+530    	; 0x5b0 <__LOCK_REGION_LENGTH__+0x1b0>
				
				/* Sets ADC to ADC0 */
				case 'P':
				case 'p':
					input = Volt;
     39e:	10 92 7a 02 	sts	0x027A, r1	; 0x80027a <input>
					sendmsg(msg4);
     3a2:	88 e9       	ldi	r24, 0x98	; 152
     3a4:	91 e0       	ldi	r25, 0x01	; 1
     3a6:	0e 94 40 01 	call	0x280	; 0x280 <sendmsg>
				break;
     3aa:	02 c1       	rjmp	.+516    	; 0x5b0 <__LOCK_REGION_LENGTH__+0x1b0>
				
				/* Report Temperature to user */
				case 'T':
				case 't':
					if (input == Temp) {
     3ac:	80 91 7a 02 	lds	r24, 0x027A	; 0x80027a <input>
     3b0:	82 30       	cpi	r24, 0x02	; 2
     3b2:	d9 f5       	brne	.+118    	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
						temp = (adc_reading*500)/divider; 
     3b4:	20 91 7b 02 	lds	r18, 0x027B	; 0x80027b <adc_reading>
     3b8:	30 91 7c 02 	lds	r19, 0x027C	; 0x80027c <adc_reading+0x1>
     3bc:	40 91 7d 02 	lds	r20, 0x027D	; 0x80027d <adc_reading+0x2>
     3c0:	50 91 7e 02 	lds	r21, 0x027E	; 0x80027e <adc_reading+0x3>
     3c4:	a4 ef       	ldi	r26, 0xF4	; 244
     3c6:	b1 e0       	ldi	r27, 0x01	; 1
     3c8:	0e 94 4e 05 	call	0xa9c	; 0xa9c <__muluhisi3>
     3cc:	0e 94 4d 04 	call	0x89a	; 0x89a <__floatunsisf>
     3d0:	20 e0       	ldi	r18, 0x00	; 0
     3d2:	30 e0       	ldi	r19, 0x00	; 0
     3d4:	40 e8       	ldi	r20, 0x80	; 128
     3d6:	5a e3       	ldi	r21, 0x3A	; 58
     3d8:	0e 94 b3 04 	call	0x966	; 0x966 <__mulsf3>
     3dc:	0e 94 1e 04 	call	0x83c	; 0x83c <__fixunssfsi>
     3e0:	60 93 7f 02 	sts	0x027F, r22	; 0x80027f <temp>
     3e4:	70 93 80 02 	sts	0x0280, r23	; 0x800280 <temp+0x1>
     3e8:	80 93 81 02 	sts	0x0281, r24	; 0x800281 <temp+0x2>
     3ec:	90 93 82 02 	sts	0x0282, r25	; 0x800282 <temp+0x3>
						dtostrf(temp,6,2,str_temp); // Changes value from double to string
     3f0:	0e 94 4d 04 	call	0x89a	; 0x89a <__floatunsisf>
     3f4:	0f a9       	ldd	r16, Y+55	; 0x37
     3f6:	18 ad       	ldd	r17, Y+56	; 0x38
     3f8:	22 e0       	ldi	r18, 0x02	; 2
     3fa:	46 e0       	ldi	r20, 0x06	; 6
     3fc:	0e 94 68 05 	call	0xad0	; 0xad0 <dtostrf>
						sprintf(data,"LM35 Temperature = %s deg C",str_temp); //Report Temperature value
     400:	2a a9       	ldd	r18, Y+50	; 0x32
     402:	2f 93       	push	r18
     404:	89 a9       	ldd	r24, Y+49	; 0x31
     406:	8f 93       	push	r24
     408:	3f 92       	push	r3
     40a:	2f 92       	push	r2
     40c:	7f 92       	push	r7
     40e:	6f 92       	push	r6
     410:	0e 94 88 05 	call	0xb10	; 0xb10 <sprintf>
						sendmsg(data);
     414:	8b a9       	ldd	r24, Y+51	; 0x33
     416:	9c a9       	ldd	r25, Y+52	; 0x34
     418:	0e 94 40 01 	call	0x280	; 0x280 <sendmsg>
     41c:	0f 90       	pop	r0
     41e:	0f 90       	pop	r0
     420:	0f 90       	pop	r0
     422:	0f 90       	pop	r0
     424:	0f 90       	pop	r0
     426:	0f 90       	pop	r0
     428:	c3 c0       	rjmp	.+390    	; 0x5b0 <__LOCK_REGION_LENGTH__+0x1b0>
					} else {
						//Give warning
						sendmsg(msg5);
     42a:	86 e6       	ldi	r24, 0x66	; 102
     42c:	91 e0       	ldi	r25, 0x01	; 1
     42e:	0e 94 40 01 	call	0x280	; 0x280 <sendmsg>
     432:	be c0       	rjmp	.+380    	; 0x5b0 <__LOCK_REGION_LENGTH__+0x1b0>
				break;
				
				/* Report Bright/Dark to user */
				case 'L':
				case 'l':
					if (input == LDR) {
     434:	80 91 7a 02 	lds	r24, 0x027A	; 0x80027a <input>
     438:	81 30       	cpi	r24, 0x01	; 1
     43a:	b9 f4       	brne	.+46     	; 0x46a <__LOCK_REGION_LENGTH__+0x6a>
							if(adc_reading>Light_Threshold)
     43c:	80 91 7b 02 	lds	r24, 0x027B	; 0x80027b <adc_reading>
     440:	90 91 7c 02 	lds	r25, 0x027C	; 0x80027c <adc_reading+0x1>
     444:	a0 91 7d 02 	lds	r26, 0x027D	; 0x80027d <adc_reading+0x2>
     448:	b0 91 7e 02 	lds	r27, 0x027E	; 0x80027e <adc_reading+0x3>
     44c:	81 30       	cpi	r24, 0x01	; 1
     44e:	92 40       	sbci	r25, 0x02	; 2
     450:	a1 05       	cpc	r26, r1
     452:	b1 05       	cpc	r27, r1
     454:	28 f0       	brcs	.+10     	; 0x460 <__LOCK_REGION_LENGTH__+0x60>
							{
								sendmsg(msg7); // Report Bright
     456:	8f e2       	ldi	r24, 0x2F	; 47
     458:	91 e0       	ldi	r25, 0x01	; 1
     45a:	0e 94 40 01 	call	0x280	; 0x280 <sendmsg>
     45e:	a8 c0       	rjmp	.+336    	; 0x5b0 <__LOCK_REGION_LENGTH__+0x1b0>
							}
							else
							{
								sendmsg(msg8); // Report Dark
     460:	84 e2       	ldi	r24, 0x24	; 36
     462:	91 e0       	ldi	r25, 0x01	; 1
     464:	0e 94 40 01 	call	0x280	; 0x280 <sendmsg>
     468:	a3 c0       	rjmp	.+326    	; 0x5b0 <__LOCK_REGION_LENGTH__+0x1b0>
							}
					} else {
						//Give warning
						sendmsg(msg6);
     46a:	8c e3       	ldi	r24, 0x3C	; 60
     46c:	91 e0       	ldi	r25, 0x01	; 1
     46e:	0e 94 40 01 	call	0x280	; 0x280 <sendmsg>
     472:	9e c0       	rjmp	.+316    	; 0x5b0 <__LOCK_REGION_LENGTH__+0x1b0>
				break;
				
				/* Report ADC Value to user */
				case 'A':
				case 'a':
					sprintf(data, "ADC value = %lu", adc_reading); //Report ADC value
     474:	80 91 7e 02 	lds	r24, 0x027E	; 0x80027e <adc_reading+0x3>
     478:	8f 93       	push	r24
     47a:	80 91 7d 02 	lds	r24, 0x027D	; 0x80027d <adc_reading+0x2>
     47e:	8f 93       	push	r24
     480:	80 91 7c 02 	lds	r24, 0x027C	; 0x80027c <adc_reading+0x1>
     484:	8f 93       	push	r24
     486:	80 91 7b 02 	lds	r24, 0x027B	; 0x80027b <adc_reading>
     48a:	8f 93       	push	r24
     48c:	df 92       	push	r13
     48e:	cf 92       	push	r12
     490:	7f 92       	push	r7
     492:	6f 92       	push	r6
     494:	0e 94 88 05 	call	0xb10	; 0xb10 <sprintf>
					sendmsg(data);
     498:	8b a9       	ldd	r24, Y+51	; 0x33
     49a:	9c a9       	ldd	r25, Y+52	; 0x34
     49c:	0e 94 40 01 	call	0x280	; 0x280 <sendmsg>
				break;
     4a0:	0f b6       	in	r0, 0x3f	; 63
     4a2:	f8 94       	cli
     4a4:	de bf       	out	0x3e, r29	; 62
     4a6:	0f be       	out	0x3f, r0	; 63
     4a8:	cd bf       	out	0x3d, r28	; 61
     4aa:	82 c0       	rjmp	.+260    	; 0x5b0 <__LOCK_REGION_LENGTH__+0x1b0>
				
				/* Report ADC Value in mV to user */
				case 'V':
				case 'v':
					adc_mV = ((adc_reading/divider)*5000); // Calculates ADC in mV
     4ac:	60 91 7b 02 	lds	r22, 0x027B	; 0x80027b <adc_reading>
     4b0:	70 91 7c 02 	lds	r23, 0x027C	; 0x80027c <adc_reading+0x1>
     4b4:	80 91 7d 02 	lds	r24, 0x027D	; 0x80027d <adc_reading+0x2>
     4b8:	90 91 7e 02 	lds	r25, 0x027E	; 0x80027e <adc_reading+0x3>
     4bc:	0e 94 4d 04 	call	0x89a	; 0x89a <__floatunsisf>
     4c0:	20 e0       	ldi	r18, 0x00	; 0
     4c2:	30 e0       	ldi	r19, 0x00	; 0
     4c4:	40 e8       	ldi	r20, 0x80	; 128
     4c6:	5a e3       	ldi	r21, 0x3A	; 58
     4c8:	0e 94 b3 04 	call	0x966	; 0x966 <__mulsf3>
     4cc:	20 e0       	ldi	r18, 0x00	; 0
     4ce:	30 e4       	ldi	r19, 0x40	; 64
     4d0:	4c e9       	ldi	r20, 0x9C	; 156
     4d2:	55 e4       	ldi	r21, 0x45	; 69
     4d4:	0e 94 b3 04 	call	0x966	; 0x966 <__mulsf3>
     4d8:	0e 94 1e 04 	call	0x83c	; 0x83c <__fixunssfsi>
     4dc:	60 93 44 02 	sts	0x0244, r22	; 0x800244 <adc_mV>
     4e0:	70 93 45 02 	sts	0x0245, r23	; 0x800245 <adc_mV+0x1>
     4e4:	80 93 46 02 	sts	0x0246, r24	; 0x800246 <adc_mV+0x2>
     4e8:	90 93 47 02 	sts	0x0247, r25	; 0x800247 <adc_mV+0x3>
					dtostrf(adc_mV,8,2,str_adc_mV);  // Changes value from double to string
     4ec:	0e 94 4d 04 	call	0x89a	; 0x89a <__floatunsisf>
     4f0:	0d a9       	ldd	r16, Y+53	; 0x35
     4f2:	1e a9       	ldd	r17, Y+54	; 0x36
     4f4:	22 e0       	ldi	r18, 0x02	; 2
     4f6:	48 e0       	ldi	r20, 0x08	; 8
     4f8:	0e 94 68 05 	call	0xad0	; 0xad0 <dtostrf>
					sprintf(data, "ADC value = %s mV",str_adc_mV); //Report ADC value in mV
     4fc:	98 a9       	ldd	r25, Y+48	; 0x30
     4fe:	9f 93       	push	r25
     500:	ef a5       	ldd	r30, Y+47	; 0x2f
     502:	ef 93       	push	r30
     504:	bf 92       	push	r11
     506:	af 92       	push	r10
     508:	7f 92       	push	r7
     50a:	6f 92       	push	r6
     50c:	0e 94 88 05 	call	0xb10	; 0xb10 <sprintf>
					sendmsg(data);	
     510:	8b a9       	ldd	r24, Y+51	; 0x33
     512:	9c a9       	ldd	r25, Y+52	; 0x34
     514:	0e 94 40 01 	call	0x280	; 0x280 <sendmsg>
				break;
     518:	0f 90       	pop	r0
     51a:	0f 90       	pop	r0
     51c:	0f 90       	pop	r0
     51e:	0f 90       	pop	r0
     520:	0f 90       	pop	r0
     522:	0f 90       	pop	r0
     524:	45 c0       	rjmp	.+138    	; 0x5b0 <__LOCK_REGION_LENGTH__+0x1b0>
				
				/* Report Values Continuously */
				case 'C':
				case 'c':
					enContDisplay = 1; //enable continuous adc display
     526:	90 92 41 02 	sts	0x0241, r9	; 0x800241 <__data_end+0x1>
     52a:	80 92 40 02 	sts	0x0240, r8	; 0x800240 <__data_end>
				break;
     52e:	40 c0       	rjmp	.+128    	; 0x5b0 <__LOCK_REGION_LENGTH__+0x1b0>
				
				/* Stop Reporting Values Continuously */
				case 'E':
				case 'e':
					if(enContDisplay==0) {
     530:	80 91 40 02 	lds	r24, 0x0240	; 0x800240 <__data_end>
     534:	90 91 41 02 	lds	r25, 0x0241	; 0x800241 <__data_end+0x1>
     538:	89 2b       	or	r24, r25
     53a:	21 f4       	brne	.+8      	; 0x544 <__LOCK_REGION_LENGTH__+0x144>
						sendmsg(msg9);
     53c:	80 e0       	ldi	r24, 0x00	; 0
     53e:	91 e0       	ldi	r25, 0x01	; 1
     540:	0e 94 40 01 	call	0x280	; 0x280 <sendmsg>
					}
					enContDisplay = 0; //disable continuous adc display
     544:	10 92 41 02 	sts	0x0241, r1	; 0x800241 <__data_end+0x1>
     548:	10 92 40 02 	sts	0x0240, r1	; 0x800240 <__data_end>
				break;
     54c:	31 c0       	rjmp	.+98     	; 0x5b0 <__LOCK_REGION_LENGTH__+0x1b0>
				
				/* Report OCR2A Value */
				case 'S':
				case 's':
					sprintf(data, "OCR2A = %d", OCR2A); // Report OCR2A value
     54e:	e3 eb       	ldi	r30, 0xB3	; 179
     550:	f0 e0       	ldi	r31, 0x00	; 0
     552:	80 81       	ld	r24, Z
     554:	1f 92       	push	r1
     556:	8f 93       	push	r24
     558:	84 e3       	ldi	r24, 0x34	; 52
     55a:	92 e0       	ldi	r25, 0x02	; 2
     55c:	9f 93       	push	r25
     55e:	8f 93       	push	r24
     560:	7f 92       	push	r7
     562:	6f 92       	push	r6
     564:	0e 94 88 05 	call	0xb10	; 0xb10 <sprintf>
					sendmsg(data);
     568:	8b a9       	ldd	r24, Y+51	; 0x33
     56a:	9c a9       	ldd	r25, Y+52	; 0x34
     56c:	0e 94 40 01 	call	0x280	; 0x280 <sendmsg>
				break;
     570:	0f 90       	pop	r0
     572:	0f 90       	pop	r0
     574:	0f 90       	pop	r0
     576:	0f 90       	pop	r0
     578:	0f 90       	pop	r0
     57a:	0f 90       	pop	r0
     57c:	19 c0       	rjmp	.+50     	; 0x5b0 <__LOCK_REGION_LENGTH__+0x1b0>
				
				/* Sets LED Brightness Level */
				case '0' ... '9':
					
					Brightness = ch - '0';
					OCR2A = Brightness * Brightness_Multiplier;
     57e:	70 e0       	ldi	r23, 0x00	; 0
     580:	60 53       	subi	r22, 0x30	; 48
     582:	71 09       	sbc	r23, r1
     584:	07 2e       	mov	r0, r23
     586:	00 0c       	add	r0, r0
     588:	88 0b       	sbc	r24, r24
     58a:	99 0b       	sbc	r25, r25
     58c:	0e 94 4f 04 	call	0x89e	; 0x89e <__floatsisf>
     590:	20 e0       	ldi	r18, 0x00	; 0
     592:	30 e0       	ldi	r19, 0x00	; 0
     594:	4c ec       	ldi	r20, 0xCC	; 204
     596:	51 e4       	ldi	r21, 0x41	; 65
     598:	0e 94 b3 04 	call	0x966	; 0x966 <__mulsf3>
     59c:	0e 94 1e 04 	call	0x83c	; 0x83c <__fixunssfsi>
     5a0:	e3 eb       	ldi	r30, 0xB3	; 179
     5a2:	f0 e0       	ldi	r31, 0x00	; 0
     5a4:	60 83       	st	Z, r22
				break;
     5a6:	04 c0       	rjmp	.+8      	; 0x5b0 <__LOCK_REGION_LENGTH__+0x1b0>
				
				default:
				sendmsg(msg1); /*send default message*/
     5a8:	81 ee       	ldi	r24, 0xE1	; 225
     5aa:	91 e0       	ldi	r25, 0x01	; 1
     5ac:	0e 94 40 01 	call	0x280	; 0x280 <sendmsg>
			}
		}
	/*Continuous Loop */   
	
		if(new_adc_data) {
     5b0:	80 91 87 02 	lds	r24, 0x0287	; 0x800287 <new_adc_data>
     5b4:	90 91 88 02 	lds	r25, 0x0288	; 0x800288 <new_adc_data+0x1>
     5b8:	89 2b       	or	r24, r25
     5ba:	09 f4       	brne	.+2      	; 0x5be <__LOCK_REGION_LENGTH__+0x1be>
     5bc:	cd ce       	rjmp	.-614    	; 0x358 <main+0x90>
			if(enContDisplay) {
     5be:	80 91 40 02 	lds	r24, 0x0240	; 0x800240 <__data_end>
     5c2:	90 91 41 02 	lds	r25, 0x0241	; 0x800241 <__data_end+0x1>
     5c6:	89 2b       	or	r24, r25
     5c8:	09 f4       	brne	.+2      	; 0x5cc <__LOCK_REGION_LENGTH__+0x1cc>
     5ca:	d2 c0       	rjmp	.+420    	; 0x770 <__LOCK_REGION_LENGTH__+0x370>
				switch(input){
     5cc:	80 91 7a 02 	lds	r24, 0x027A	; 0x80027a <input>
     5d0:	81 30       	cpi	r24, 0x01	; 1
     5d2:	f1 f1       	breq	.+124    	; 0x650 <__LOCK_REGION_LENGTH__+0x250>
     5d4:	20 f0       	brcs	.+8      	; 0x5de <__LOCK_REGION_LENGTH__+0x1de>
     5d6:	82 30       	cpi	r24, 0x02	; 2
     5d8:	09 f4       	brne	.+2      	; 0x5dc <__LOCK_REGION_LENGTH__+0x1dc>
     5da:	51 c0       	rjmp	.+162    	; 0x67e <__LOCK_REGION_LENGTH__+0x27e>
     5dc:	8d c0       	rjmp	.+282    	; 0x6f8 <__LOCK_REGION_LENGTH__+0x2f8>
					case Volt:
						adc_mV = (adc_reading/divider);
     5de:	60 91 7b 02 	lds	r22, 0x027B	; 0x80027b <adc_reading>
     5e2:	70 91 7c 02 	lds	r23, 0x027C	; 0x80027c <adc_reading+0x1>
     5e6:	80 91 7d 02 	lds	r24, 0x027D	; 0x80027d <adc_reading+0x2>
     5ea:	90 91 7e 02 	lds	r25, 0x027E	; 0x80027e <adc_reading+0x3>
     5ee:	0e 94 4d 04 	call	0x89a	; 0x89a <__floatunsisf>
     5f2:	20 e0       	ldi	r18, 0x00	; 0
     5f4:	30 e0       	ldi	r19, 0x00	; 0
     5f6:	40 e8       	ldi	r20, 0x80	; 128
     5f8:	5a e3       	ldi	r21, 0x3A	; 58
     5fa:	0e 94 b3 04 	call	0x966	; 0x966 <__mulsf3>
     5fe:	0e 94 1e 04 	call	0x83c	; 0x83c <__fixunssfsi>
     602:	60 93 44 02 	sts	0x0244, r22	; 0x800244 <adc_mV>
     606:	70 93 45 02 	sts	0x0245, r23	; 0x800245 <adc_mV+0x1>
     60a:	80 93 46 02 	sts	0x0246, r24	; 0x800246 <adc_mV+0x2>
     60e:	90 93 47 02 	sts	0x0247, r25	; 0x800247 <adc_mV+0x3>
						dtostrf(adc_mV,8,2,str_adc_mV);
     612:	0e 94 4d 04 	call	0x89a	; 0x89a <__floatunsisf>
     616:	0d a9       	ldd	r16, Y+53	; 0x35
     618:	1e a9       	ldd	r17, Y+54	; 0x36
     61a:	22 e0       	ldi	r18, 0x02	; 2
     61c:	48 e0       	ldi	r20, 0x08	; 8
     61e:	0e 94 68 05 	call	0xad0	; 0xad0 <dtostrf>
						sprintf(data, "ADC value = %s mV",str_adc_mV); //Report ADC value in mV
     622:	f8 a9       	ldd	r31, Y+48	; 0x30
     624:	ff 93       	push	r31
     626:	2f a5       	ldd	r18, Y+47	; 0x2f
     628:	2f 93       	push	r18
     62a:	82 e2       	ldi	r24, 0x22	; 34
     62c:	92 e0       	ldi	r25, 0x02	; 2
     62e:	9f 93       	push	r25
     630:	8f 93       	push	r24
     632:	7f 92       	push	r7
     634:	6f 92       	push	r6
     636:	0e 94 88 05 	call	0xb10	; 0xb10 <sprintf>
						sendmsg(data);
     63a:	8b a9       	ldd	r24, Y+51	; 0x33
     63c:	9c a9       	ldd	r25, Y+52	; 0x34
     63e:	0e 94 40 01 	call	0x280	; 0x280 <sendmsg>
					break;
     642:	0f 90       	pop	r0
     644:	0f 90       	pop	r0
     646:	0f 90       	pop	r0
     648:	0f 90       	pop	r0
     64a:	0f 90       	pop	r0
     64c:	0f 90       	pop	r0
     64e:	90 c0       	rjmp	.+288    	; 0x770 <__LOCK_REGION_LENGTH__+0x370>
					
					case LDR:
						if(adc_reading>Light_Threshold)
     650:	80 91 7b 02 	lds	r24, 0x027B	; 0x80027b <adc_reading>
     654:	90 91 7c 02 	lds	r25, 0x027C	; 0x80027c <adc_reading+0x1>
     658:	a0 91 7d 02 	lds	r26, 0x027D	; 0x80027d <adc_reading+0x2>
     65c:	b0 91 7e 02 	lds	r27, 0x027E	; 0x80027e <adc_reading+0x3>
     660:	81 30       	cpi	r24, 0x01	; 1
     662:	92 40       	sbci	r25, 0x02	; 2
     664:	a1 05       	cpc	r26, r1
     666:	b1 05       	cpc	r27, r1
     668:	28 f0       	brcs	.+10     	; 0x674 <__LOCK_REGION_LENGTH__+0x274>
						{
							sendmsg(msg7);
     66a:	8f e2       	ldi	r24, 0x2F	; 47
     66c:	91 e0       	ldi	r25, 0x01	; 1
     66e:	0e 94 40 01 	call	0x280	; 0x280 <sendmsg>
     672:	7e c0       	rjmp	.+252    	; 0x770 <__LOCK_REGION_LENGTH__+0x370>
						}
						else
						{
							sendmsg(msg8);
     674:	84 e2       	ldi	r24, 0x24	; 36
     676:	91 e0       	ldi	r25, 0x01	; 1
     678:	0e 94 40 01 	call	0x280	; 0x280 <sendmsg>
     67c:	79 c0       	rjmp	.+242    	; 0x770 <__LOCK_REGION_LENGTH__+0x370>
						}
					break;
					
					case Temp:
						temp = (adc_reading*500)/divider; //(5v/1023)=4.887mV = 5mV, every deg c is 10Mv voltage change therefore divide by 2
     67e:	20 91 7b 02 	lds	r18, 0x027B	; 0x80027b <adc_reading>
     682:	30 91 7c 02 	lds	r19, 0x027C	; 0x80027c <adc_reading+0x1>
     686:	40 91 7d 02 	lds	r20, 0x027D	; 0x80027d <adc_reading+0x2>
     68a:	50 91 7e 02 	lds	r21, 0x027E	; 0x80027e <adc_reading+0x3>
     68e:	a4 ef       	ldi	r26, 0xF4	; 244
     690:	b1 e0       	ldi	r27, 0x01	; 1
     692:	0e 94 4e 05 	call	0xa9c	; 0xa9c <__muluhisi3>
     696:	0e 94 4d 04 	call	0x89a	; 0x89a <__floatunsisf>
     69a:	20 e0       	ldi	r18, 0x00	; 0
     69c:	30 e0       	ldi	r19, 0x00	; 0
     69e:	40 e8       	ldi	r20, 0x80	; 128
     6a0:	5a e3       	ldi	r21, 0x3A	; 58
     6a2:	0e 94 b3 04 	call	0x966	; 0x966 <__mulsf3>
     6a6:	0e 94 1e 04 	call	0x83c	; 0x83c <__fixunssfsi>
     6aa:	60 93 7f 02 	sts	0x027F, r22	; 0x80027f <temp>
     6ae:	70 93 80 02 	sts	0x0280, r23	; 0x800280 <temp+0x1>
     6b2:	80 93 81 02 	sts	0x0281, r24	; 0x800281 <temp+0x2>
     6b6:	90 93 82 02 	sts	0x0282, r25	; 0x800282 <temp+0x3>
						dtostrf(temp,6,2,str_temp); // Changes value from double to string
     6ba:	0e 94 4d 04 	call	0x89a	; 0x89a <__floatunsisf>
     6be:	0f a9       	ldd	r16, Y+55	; 0x37
     6c0:	18 ad       	ldd	r17, Y+56	; 0x38
     6c2:	22 e0       	ldi	r18, 0x02	; 2
     6c4:	46 e0       	ldi	r20, 0x06	; 6
     6c6:	0e 94 68 05 	call	0xad0	; 0xad0 <dtostrf>
						sprintf(data,"LM35 Temperature = %s deg C",str_temp); //Report Temperature value
     6ca:	fa a9       	ldd	r31, Y+50	; 0x32
     6cc:	ff 93       	push	r31
     6ce:	29 a9       	ldd	r18, Y+49	; 0x31
     6d0:	2f 93       	push	r18
     6d2:	86 ef       	ldi	r24, 0xF6	; 246
     6d4:	91 e0       	ldi	r25, 0x01	; 1
     6d6:	9f 93       	push	r25
     6d8:	8f 93       	push	r24
     6da:	7f 92       	push	r7
     6dc:	6f 92       	push	r6
     6de:	0e 94 88 05 	call	0xb10	; 0xb10 <sprintf>
						sendmsg(data);
     6e2:	8b a9       	ldd	r24, Y+51	; 0x33
     6e4:	9c a9       	ldd	r25, Y+52	; 0x34
     6e6:	0e 94 40 01 	call	0x280	; 0x280 <sendmsg>
					break;
     6ea:	0f 90       	pop	r0
     6ec:	0f 90       	pop	r0
     6ee:	0f 90       	pop	r0
     6f0:	0f 90       	pop	r0
     6f2:	0f 90       	pop	r0
     6f4:	0f 90       	pop	r0
     6f6:	3c c0       	rjmp	.+120    	; 0x770 <__LOCK_REGION_LENGTH__+0x370>
					
					default:
						temp = (adc_reading*500)/divider; //(5v/1023)=4.887mV = 5mV, every deg c is 10Mv voltage change therefore divide by 2
     6f8:	20 91 7b 02 	lds	r18, 0x027B	; 0x80027b <adc_reading>
     6fc:	30 91 7c 02 	lds	r19, 0x027C	; 0x80027c <adc_reading+0x1>
     700:	40 91 7d 02 	lds	r20, 0x027D	; 0x80027d <adc_reading+0x2>
     704:	50 91 7e 02 	lds	r21, 0x027E	; 0x80027e <adc_reading+0x3>
     708:	a4 ef       	ldi	r26, 0xF4	; 244
     70a:	b1 e0       	ldi	r27, 0x01	; 1
     70c:	0e 94 4e 05 	call	0xa9c	; 0xa9c <__muluhisi3>
     710:	0e 94 4d 04 	call	0x89a	; 0x89a <__floatunsisf>
     714:	20 e0       	ldi	r18, 0x00	; 0
     716:	30 e0       	ldi	r19, 0x00	; 0
     718:	40 e8       	ldi	r20, 0x80	; 128
     71a:	5a e3       	ldi	r21, 0x3A	; 58
     71c:	0e 94 b3 04 	call	0x966	; 0x966 <__mulsf3>
     720:	0e 94 1e 04 	call	0x83c	; 0x83c <__fixunssfsi>
     724:	60 93 7f 02 	sts	0x027F, r22	; 0x80027f <temp>
     728:	70 93 80 02 	sts	0x0280, r23	; 0x800280 <temp+0x1>
     72c:	80 93 81 02 	sts	0x0281, r24	; 0x800281 <temp+0x2>
     730:	90 93 82 02 	sts	0x0282, r25	; 0x800282 <temp+0x3>
						dtostrf(temp,6,2,str_temp); // Changes value from double to string
     734:	0e 94 4d 04 	call	0x89a	; 0x89a <__floatunsisf>
     738:	0f a9       	ldd	r16, Y+55	; 0x37
     73a:	18 ad       	ldd	r17, Y+56	; 0x38
     73c:	22 e0       	ldi	r18, 0x02	; 2
     73e:	46 e0       	ldi	r20, 0x06	; 6
     740:	0e 94 68 05 	call	0xad0	; 0xad0 <dtostrf>
						sprintf(data,"LM35 Temperature = %s deg C",str_temp); //Report Temperature value
     744:	8a a9       	ldd	r24, Y+50	; 0x32
     746:	8f 93       	push	r24
     748:	99 a9       	ldd	r25, Y+49	; 0x31
     74a:	9f 93       	push	r25
     74c:	86 ef       	ldi	r24, 0xF6	; 246
     74e:	91 e0       	ldi	r25, 0x01	; 1
     750:	9f 93       	push	r25
     752:	8f 93       	push	r24
     754:	7f 92       	push	r7
     756:	6f 92       	push	r6
     758:	0e 94 88 05 	call	0xb10	; 0xb10 <sprintf>
						sendmsg(data);
     75c:	8b a9       	ldd	r24, Y+51	; 0x33
     75e:	9c a9       	ldd	r25, Y+52	; 0x34
     760:	0e 94 40 01 	call	0x280	; 0x280 <sendmsg>
     764:	0f 90       	pop	r0
     766:	0f 90       	pop	r0
     768:	0f 90       	pop	r0
     76a:	0f 90       	pop	r0
     76c:	0f 90       	pop	r0
     76e:	0f 90       	pop	r0
				}
			}
			new_adc_data=0;
     770:	10 92 88 02 	sts	0x0288, r1	; 0x800288 <new_adc_data+0x1>
     774:	10 92 87 02 	sts	0x0287, r1	; 0x800287 <new_adc_data>
     778:	da cd       	rjmp	.-1100   	; 0x32e <main+0x66>

0000077a <__vector_20>:

/*this interrupt occurs whenever the */
/*USART has completed sending a character*/

ISR(USART_TX_vect)
{
     77a:	1f 92       	push	r1
     77c:	0f 92       	push	r0
     77e:	0f b6       	in	r0, 0x3f	; 63
     780:	0f 92       	push	r0
     782:	11 24       	eor	r1, r1
     784:	8f 93       	push	r24
     786:	ef 93       	push	r30
     788:	ff 93       	push	r31
	/*send next character and increment index*/
	if (qcntr != sndcntr)
     78a:	e0 91 42 02 	lds	r30, 0x0242	; 0x800242 <sndcntr>
     78e:	80 91 43 02 	lds	r24, 0x0243	; 0x800243 <qcntr>
     792:	8e 17       	cp	r24, r30
     794:	51 f0       	breq	.+20     	; 0x7aa <__vector_20+0x30>
		UDR0 = queue[sndcntr++];
     796:	81 e0       	ldi	r24, 0x01	; 1
     798:	8e 0f       	add	r24, r30
     79a:	80 93 42 02 	sts	0x0242, r24	; 0x800242 <sndcntr>
     79e:	f0 e0       	ldi	r31, 0x00	; 0
     7a0:	e8 5b       	subi	r30, 0xB8	; 184
     7a2:	fd 4f       	sbci	r31, 0xFD	; 253
     7a4:	80 81       	ld	r24, Z
     7a6:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
}
     7aa:	ff 91       	pop	r31
     7ac:	ef 91       	pop	r30
     7ae:	8f 91       	pop	r24
     7b0:	0f 90       	pop	r0
     7b2:	0f be       	out	0x3f, r0	; 63
     7b4:	0f 90       	pop	r0
     7b6:	1f 90       	pop	r1
     7b8:	18 95       	reti

000007ba <__vector_21>:

ISR (ADC_vect)//handles ADC interrupts
{
     7ba:	1f 92       	push	r1
     7bc:	0f 92       	push	r0
     7be:	0f b6       	in	r0, 0x3f	; 63
     7c0:	0f 92       	push	r0
     7c2:	11 24       	eor	r1, r1
     7c4:	8f 93       	push	r24
     7c6:	9f 93       	push	r25
     7c8:	af 93       	push	r26
     7ca:	bf 93       	push	r27
	
	//adc_reading = ADC;
	new_adc_data = 1;
     7cc:	81 e0       	ldi	r24, 0x01	; 1
     7ce:	90 e0       	ldi	r25, 0x00	; 0
     7d0:	90 93 88 02 	sts	0x0288, r25	; 0x800288 <new_adc_data+0x1>
     7d4:	80 93 87 02 	sts	0x0287, r24	; 0x800287 <new_adc_data>
	adc_reading = ADC;
     7d8:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__DATA_REGION_ORIGIN__+0x18>
     7dc:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__DATA_REGION_ORIGIN__+0x19>
     7e0:	a0 e0       	ldi	r26, 0x00	; 0
     7e2:	b0 e0       	ldi	r27, 0x00	; 0
     7e4:	80 93 7b 02 	sts	0x027B, r24	; 0x80027b <adc_reading>
     7e8:	90 93 7c 02 	sts	0x027C, r25	; 0x80027c <adc_reading+0x1>
     7ec:	a0 93 7d 02 	sts	0x027D, r26	; 0x80027d <adc_reading+0x2>
     7f0:	b0 93 7e 02 	sts	0x027E, r27	; 0x80027e <adc_reading+0x3>
	TCNT0 = 6;
     7f4:	86 e0       	ldi	r24, 0x06	; 6
     7f6:	86 bd       	out	0x26, r24	; 38
	switch(input) {
     7f8:	80 91 7a 02 	lds	r24, 0x027A	; 0x80027a <input>
     7fc:	81 30       	cpi	r24, 0x01	; 1
     7fe:	41 f0       	breq	.+16     	; 0x810 <__vector_21+0x56>
     800:	18 f0       	brcs	.+6      	; 0x808 <__vector_21+0x4e>
     802:	82 30       	cpi	r24, 0x02	; 2
     804:	49 f0       	breq	.+18     	; 0x818 <__vector_21+0x5e>
     806:	0c c0       	rjmp	.+24     	; 0x820 <__vector_21+0x66>
		
		case Volt :
			ADMUX = (1<<6) | (0<<0); //adc0
     808:	80 e4       	ldi	r24, 0x40	; 64
     80a:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
		break;
     80e:	0b c0       	rjmp	.+22     	; 0x826 <__vector_21+0x6c>
		
		case LDR :
			ADMUX = (1<<6) | (1<<0); //adc1
     810:	81 e4       	ldi	r24, 0x41	; 65
     812:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
		break;
     816:	07 c0       	rjmp	.+14     	; 0x826 <__vector_21+0x6c>
		
		case Temp :
			ADMUX = (1<<6) | (1<<1) ; //adc2
     818:	82 e4       	ldi	r24, 0x42	; 66
     81a:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
		break;
     81e:	03 c0       	rjmp	.+6      	; 0x826 <__vector_21+0x6c>
		default:
			ADMUX = (1<<6) | (1<<1); //adc2
     820:	82 e4       	ldi	r24, 0x42	; 66
     822:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
	} 
	TIFR0 = (1<<0); //clears Counter0 overflow
     826:	81 e0       	ldi	r24, 0x01	; 1
     828:	85 bb       	out	0x15, r24	; 21
}
     82a:	bf 91       	pop	r27
     82c:	af 91       	pop	r26
     82e:	9f 91       	pop	r25
     830:	8f 91       	pop	r24
     832:	0f 90       	pop	r0
     834:	0f be       	out	0x3f, r0	; 63
     836:	0f 90       	pop	r0
     838:	1f 90       	pop	r1
     83a:	18 95       	reti

0000083c <__fixunssfsi>:
     83c:	0e 94 92 04 	call	0x924	; 0x924 <__fp_splitA>
     840:	88 f0       	brcs	.+34     	; 0x864 <__fixunssfsi+0x28>
     842:	9f 57       	subi	r25, 0x7F	; 127
     844:	98 f0       	brcs	.+38     	; 0x86c <__fixunssfsi+0x30>
     846:	b9 2f       	mov	r27, r25
     848:	99 27       	eor	r25, r25
     84a:	b7 51       	subi	r27, 0x17	; 23
     84c:	b0 f0       	brcs	.+44     	; 0x87a <__fixunssfsi+0x3e>
     84e:	e1 f0       	breq	.+56     	; 0x888 <__fixunssfsi+0x4c>
     850:	66 0f       	add	r22, r22
     852:	77 1f       	adc	r23, r23
     854:	88 1f       	adc	r24, r24
     856:	99 1f       	adc	r25, r25
     858:	1a f0       	brmi	.+6      	; 0x860 <__fixunssfsi+0x24>
     85a:	ba 95       	dec	r27
     85c:	c9 f7       	brne	.-14     	; 0x850 <__fixunssfsi+0x14>
     85e:	14 c0       	rjmp	.+40     	; 0x888 <__fixunssfsi+0x4c>
     860:	b1 30       	cpi	r27, 0x01	; 1
     862:	91 f0       	breq	.+36     	; 0x888 <__fixunssfsi+0x4c>
     864:	0e 94 ac 04 	call	0x958	; 0x958 <__fp_zero>
     868:	b1 e0       	ldi	r27, 0x01	; 1
     86a:	08 95       	ret
     86c:	0c 94 ac 04 	jmp	0x958	; 0x958 <__fp_zero>
     870:	67 2f       	mov	r22, r23
     872:	78 2f       	mov	r23, r24
     874:	88 27       	eor	r24, r24
     876:	b8 5f       	subi	r27, 0xF8	; 248
     878:	39 f0       	breq	.+14     	; 0x888 <__fixunssfsi+0x4c>
     87a:	b9 3f       	cpi	r27, 0xF9	; 249
     87c:	cc f3       	brlt	.-14     	; 0x870 <__fixunssfsi+0x34>
     87e:	86 95       	lsr	r24
     880:	77 95       	ror	r23
     882:	67 95       	ror	r22
     884:	b3 95       	inc	r27
     886:	d9 f7       	brne	.-10     	; 0x87e <__fixunssfsi+0x42>
     888:	3e f4       	brtc	.+14     	; 0x898 <__fixunssfsi+0x5c>
     88a:	90 95       	com	r25
     88c:	80 95       	com	r24
     88e:	70 95       	com	r23
     890:	61 95       	neg	r22
     892:	7f 4f       	sbci	r23, 0xFF	; 255
     894:	8f 4f       	sbci	r24, 0xFF	; 255
     896:	9f 4f       	sbci	r25, 0xFF	; 255
     898:	08 95       	ret

0000089a <__floatunsisf>:
     89a:	e8 94       	clt
     89c:	09 c0       	rjmp	.+18     	; 0x8b0 <__floatsisf+0x12>

0000089e <__floatsisf>:
     89e:	97 fb       	bst	r25, 7
     8a0:	3e f4       	brtc	.+14     	; 0x8b0 <__floatsisf+0x12>
     8a2:	90 95       	com	r25
     8a4:	80 95       	com	r24
     8a6:	70 95       	com	r23
     8a8:	61 95       	neg	r22
     8aa:	7f 4f       	sbci	r23, 0xFF	; 255
     8ac:	8f 4f       	sbci	r24, 0xFF	; 255
     8ae:	9f 4f       	sbci	r25, 0xFF	; 255
     8b0:	99 23       	and	r25, r25
     8b2:	a9 f0       	breq	.+42     	; 0x8de <__floatsisf+0x40>
     8b4:	f9 2f       	mov	r31, r25
     8b6:	96 e9       	ldi	r25, 0x96	; 150
     8b8:	bb 27       	eor	r27, r27
     8ba:	93 95       	inc	r25
     8bc:	f6 95       	lsr	r31
     8be:	87 95       	ror	r24
     8c0:	77 95       	ror	r23
     8c2:	67 95       	ror	r22
     8c4:	b7 95       	ror	r27
     8c6:	f1 11       	cpse	r31, r1
     8c8:	f8 cf       	rjmp	.-16     	; 0x8ba <__floatsisf+0x1c>
     8ca:	fa f4       	brpl	.+62     	; 0x90a <__stack+0xb>
     8cc:	bb 0f       	add	r27, r27
     8ce:	11 f4       	brne	.+4      	; 0x8d4 <__floatsisf+0x36>
     8d0:	60 ff       	sbrs	r22, 0
     8d2:	1b c0       	rjmp	.+54     	; 0x90a <__stack+0xb>
     8d4:	6f 5f       	subi	r22, 0xFF	; 255
     8d6:	7f 4f       	sbci	r23, 0xFF	; 255
     8d8:	8f 4f       	sbci	r24, 0xFF	; 255
     8da:	9f 4f       	sbci	r25, 0xFF	; 255
     8dc:	16 c0       	rjmp	.+44     	; 0x90a <__stack+0xb>
     8de:	88 23       	and	r24, r24
     8e0:	11 f0       	breq	.+4      	; 0x8e6 <__floatsisf+0x48>
     8e2:	96 e9       	ldi	r25, 0x96	; 150
     8e4:	11 c0       	rjmp	.+34     	; 0x908 <__stack+0x9>
     8e6:	77 23       	and	r23, r23
     8e8:	21 f0       	breq	.+8      	; 0x8f2 <__floatsisf+0x54>
     8ea:	9e e8       	ldi	r25, 0x8E	; 142
     8ec:	87 2f       	mov	r24, r23
     8ee:	76 2f       	mov	r23, r22
     8f0:	05 c0       	rjmp	.+10     	; 0x8fc <__floatsisf+0x5e>
     8f2:	66 23       	and	r22, r22
     8f4:	71 f0       	breq	.+28     	; 0x912 <__stack+0x13>
     8f6:	96 e8       	ldi	r25, 0x86	; 134
     8f8:	86 2f       	mov	r24, r22
     8fa:	70 e0       	ldi	r23, 0x00	; 0
     8fc:	60 e0       	ldi	r22, 0x00	; 0
     8fe:	2a f0       	brmi	.+10     	; 0x90a <__stack+0xb>
     900:	9a 95       	dec	r25
     902:	66 0f       	add	r22, r22
     904:	77 1f       	adc	r23, r23
     906:	88 1f       	adc	r24, r24
     908:	da f7       	brpl	.-10     	; 0x900 <__stack+0x1>
     90a:	88 0f       	add	r24, r24
     90c:	96 95       	lsr	r25
     90e:	87 95       	ror	r24
     910:	97 f9       	bld	r25, 7
     912:	08 95       	ret

00000914 <__fp_split3>:
     914:	57 fd       	sbrc	r21, 7
     916:	90 58       	subi	r25, 0x80	; 128
     918:	44 0f       	add	r20, r20
     91a:	55 1f       	adc	r21, r21
     91c:	59 f0       	breq	.+22     	; 0x934 <__fp_splitA+0x10>
     91e:	5f 3f       	cpi	r21, 0xFF	; 255
     920:	71 f0       	breq	.+28     	; 0x93e <__fp_splitA+0x1a>
     922:	47 95       	ror	r20

00000924 <__fp_splitA>:
     924:	88 0f       	add	r24, r24
     926:	97 fb       	bst	r25, 7
     928:	99 1f       	adc	r25, r25
     92a:	61 f0       	breq	.+24     	; 0x944 <__fp_splitA+0x20>
     92c:	9f 3f       	cpi	r25, 0xFF	; 255
     92e:	79 f0       	breq	.+30     	; 0x94e <__fp_splitA+0x2a>
     930:	87 95       	ror	r24
     932:	08 95       	ret
     934:	12 16       	cp	r1, r18
     936:	13 06       	cpc	r1, r19
     938:	14 06       	cpc	r1, r20
     93a:	55 1f       	adc	r21, r21
     93c:	f2 cf       	rjmp	.-28     	; 0x922 <__fp_split3+0xe>
     93e:	46 95       	lsr	r20
     940:	f1 df       	rcall	.-30     	; 0x924 <__fp_splitA>
     942:	08 c0       	rjmp	.+16     	; 0x954 <__fp_splitA+0x30>
     944:	16 16       	cp	r1, r22
     946:	17 06       	cpc	r1, r23
     948:	18 06       	cpc	r1, r24
     94a:	99 1f       	adc	r25, r25
     94c:	f1 cf       	rjmp	.-30     	; 0x930 <__fp_splitA+0xc>
     94e:	86 95       	lsr	r24
     950:	71 05       	cpc	r23, r1
     952:	61 05       	cpc	r22, r1
     954:	08 94       	sec
     956:	08 95       	ret

00000958 <__fp_zero>:
     958:	e8 94       	clt

0000095a <__fp_szero>:
     95a:	bb 27       	eor	r27, r27
     95c:	66 27       	eor	r22, r22
     95e:	77 27       	eor	r23, r23
     960:	cb 01       	movw	r24, r22
     962:	97 f9       	bld	r25, 7
     964:	08 95       	ret

00000966 <__mulsf3>:
     966:	0e 94 c6 04 	call	0x98c	; 0x98c <__mulsf3x>
     96a:	0c 94 37 05 	jmp	0xa6e	; 0xa6e <__fp_round>
     96e:	0e 94 29 05 	call	0xa52	; 0xa52 <__fp_pscA>
     972:	38 f0       	brcs	.+14     	; 0x982 <__mulsf3+0x1c>
     974:	0e 94 30 05 	call	0xa60	; 0xa60 <__fp_pscB>
     978:	20 f0       	brcs	.+8      	; 0x982 <__mulsf3+0x1c>
     97a:	95 23       	and	r25, r21
     97c:	11 f0       	breq	.+4      	; 0x982 <__mulsf3+0x1c>
     97e:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__fp_inf>
     982:	0c 94 26 05 	jmp	0xa4c	; 0xa4c <__fp_nan>
     986:	11 24       	eor	r1, r1
     988:	0c 94 ad 04 	jmp	0x95a	; 0x95a <__fp_szero>

0000098c <__mulsf3x>:
     98c:	0e 94 8a 04 	call	0x914	; 0x914 <__fp_split3>
     990:	70 f3       	brcs	.-36     	; 0x96e <__mulsf3+0x8>

00000992 <__mulsf3_pse>:
     992:	95 9f       	mul	r25, r21
     994:	c1 f3       	breq	.-16     	; 0x986 <__mulsf3+0x20>
     996:	95 0f       	add	r25, r21
     998:	50 e0       	ldi	r21, 0x00	; 0
     99a:	55 1f       	adc	r21, r21
     99c:	62 9f       	mul	r22, r18
     99e:	f0 01       	movw	r30, r0
     9a0:	72 9f       	mul	r23, r18
     9a2:	bb 27       	eor	r27, r27
     9a4:	f0 0d       	add	r31, r0
     9a6:	b1 1d       	adc	r27, r1
     9a8:	63 9f       	mul	r22, r19
     9aa:	aa 27       	eor	r26, r26
     9ac:	f0 0d       	add	r31, r0
     9ae:	b1 1d       	adc	r27, r1
     9b0:	aa 1f       	adc	r26, r26
     9b2:	64 9f       	mul	r22, r20
     9b4:	66 27       	eor	r22, r22
     9b6:	b0 0d       	add	r27, r0
     9b8:	a1 1d       	adc	r26, r1
     9ba:	66 1f       	adc	r22, r22
     9bc:	82 9f       	mul	r24, r18
     9be:	22 27       	eor	r18, r18
     9c0:	b0 0d       	add	r27, r0
     9c2:	a1 1d       	adc	r26, r1
     9c4:	62 1f       	adc	r22, r18
     9c6:	73 9f       	mul	r23, r19
     9c8:	b0 0d       	add	r27, r0
     9ca:	a1 1d       	adc	r26, r1
     9cc:	62 1f       	adc	r22, r18
     9ce:	83 9f       	mul	r24, r19
     9d0:	a0 0d       	add	r26, r0
     9d2:	61 1d       	adc	r22, r1
     9d4:	22 1f       	adc	r18, r18
     9d6:	74 9f       	mul	r23, r20
     9d8:	33 27       	eor	r19, r19
     9da:	a0 0d       	add	r26, r0
     9dc:	61 1d       	adc	r22, r1
     9de:	23 1f       	adc	r18, r19
     9e0:	84 9f       	mul	r24, r20
     9e2:	60 0d       	add	r22, r0
     9e4:	21 1d       	adc	r18, r1
     9e6:	82 2f       	mov	r24, r18
     9e8:	76 2f       	mov	r23, r22
     9ea:	6a 2f       	mov	r22, r26
     9ec:	11 24       	eor	r1, r1
     9ee:	9f 57       	subi	r25, 0x7F	; 127
     9f0:	50 40       	sbci	r21, 0x00	; 0
     9f2:	9a f0       	brmi	.+38     	; 0xa1a <__mulsf3_pse+0x88>
     9f4:	f1 f0       	breq	.+60     	; 0xa32 <__mulsf3_pse+0xa0>
     9f6:	88 23       	and	r24, r24
     9f8:	4a f0       	brmi	.+18     	; 0xa0c <__mulsf3_pse+0x7a>
     9fa:	ee 0f       	add	r30, r30
     9fc:	ff 1f       	adc	r31, r31
     9fe:	bb 1f       	adc	r27, r27
     a00:	66 1f       	adc	r22, r22
     a02:	77 1f       	adc	r23, r23
     a04:	88 1f       	adc	r24, r24
     a06:	91 50       	subi	r25, 0x01	; 1
     a08:	50 40       	sbci	r21, 0x00	; 0
     a0a:	a9 f7       	brne	.-22     	; 0x9f6 <__mulsf3_pse+0x64>
     a0c:	9e 3f       	cpi	r25, 0xFE	; 254
     a0e:	51 05       	cpc	r21, r1
     a10:	80 f0       	brcs	.+32     	; 0xa32 <__mulsf3_pse+0xa0>
     a12:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__fp_inf>
     a16:	0c 94 ad 04 	jmp	0x95a	; 0x95a <__fp_szero>
     a1a:	5f 3f       	cpi	r21, 0xFF	; 255
     a1c:	e4 f3       	brlt	.-8      	; 0xa16 <__mulsf3_pse+0x84>
     a1e:	98 3e       	cpi	r25, 0xE8	; 232
     a20:	d4 f3       	brlt	.-12     	; 0xa16 <__mulsf3_pse+0x84>
     a22:	86 95       	lsr	r24
     a24:	77 95       	ror	r23
     a26:	67 95       	ror	r22
     a28:	b7 95       	ror	r27
     a2a:	f7 95       	ror	r31
     a2c:	e7 95       	ror	r30
     a2e:	9f 5f       	subi	r25, 0xFF	; 255
     a30:	c1 f7       	brne	.-16     	; 0xa22 <__mulsf3_pse+0x90>
     a32:	fe 2b       	or	r31, r30
     a34:	88 0f       	add	r24, r24
     a36:	91 1d       	adc	r25, r1
     a38:	96 95       	lsr	r25
     a3a:	87 95       	ror	r24
     a3c:	97 f9       	bld	r25, 7
     a3e:	08 95       	ret

00000a40 <__fp_inf>:
     a40:	97 f9       	bld	r25, 7
     a42:	9f 67       	ori	r25, 0x7F	; 127
     a44:	80 e8       	ldi	r24, 0x80	; 128
     a46:	70 e0       	ldi	r23, 0x00	; 0
     a48:	60 e0       	ldi	r22, 0x00	; 0
     a4a:	08 95       	ret

00000a4c <__fp_nan>:
     a4c:	9f ef       	ldi	r25, 0xFF	; 255
     a4e:	80 ec       	ldi	r24, 0xC0	; 192
     a50:	08 95       	ret

00000a52 <__fp_pscA>:
     a52:	00 24       	eor	r0, r0
     a54:	0a 94       	dec	r0
     a56:	16 16       	cp	r1, r22
     a58:	17 06       	cpc	r1, r23
     a5a:	18 06       	cpc	r1, r24
     a5c:	09 06       	cpc	r0, r25
     a5e:	08 95       	ret

00000a60 <__fp_pscB>:
     a60:	00 24       	eor	r0, r0
     a62:	0a 94       	dec	r0
     a64:	12 16       	cp	r1, r18
     a66:	13 06       	cpc	r1, r19
     a68:	14 06       	cpc	r1, r20
     a6a:	05 06       	cpc	r0, r21
     a6c:	08 95       	ret

00000a6e <__fp_round>:
     a6e:	09 2e       	mov	r0, r25
     a70:	03 94       	inc	r0
     a72:	00 0c       	add	r0, r0
     a74:	11 f4       	brne	.+4      	; 0xa7a <__fp_round+0xc>
     a76:	88 23       	and	r24, r24
     a78:	52 f0       	brmi	.+20     	; 0xa8e <__fp_round+0x20>
     a7a:	bb 0f       	add	r27, r27
     a7c:	40 f4       	brcc	.+16     	; 0xa8e <__fp_round+0x20>
     a7e:	bf 2b       	or	r27, r31
     a80:	11 f4       	brne	.+4      	; 0xa86 <__fp_round+0x18>
     a82:	60 ff       	sbrs	r22, 0
     a84:	04 c0       	rjmp	.+8      	; 0xa8e <__fp_round+0x20>
     a86:	6f 5f       	subi	r22, 0xFF	; 255
     a88:	7f 4f       	sbci	r23, 0xFF	; 255
     a8a:	8f 4f       	sbci	r24, 0xFF	; 255
     a8c:	9f 4f       	sbci	r25, 0xFF	; 255
     a8e:	08 95       	ret

00000a90 <__tablejump2__>:
     a90:	ee 0f       	add	r30, r30
     a92:	ff 1f       	adc	r31, r31
     a94:	05 90       	lpm	r0, Z+
     a96:	f4 91       	lpm	r31, Z
     a98:	e0 2d       	mov	r30, r0
     a9a:	09 94       	ijmp

00000a9c <__muluhisi3>:
     a9c:	0e 94 59 05 	call	0xab2	; 0xab2 <__umulhisi3>
     aa0:	a5 9f       	mul	r26, r21
     aa2:	90 0d       	add	r25, r0
     aa4:	b4 9f       	mul	r27, r20
     aa6:	90 0d       	add	r25, r0
     aa8:	a4 9f       	mul	r26, r20
     aaa:	80 0d       	add	r24, r0
     aac:	91 1d       	adc	r25, r1
     aae:	11 24       	eor	r1, r1
     ab0:	08 95       	ret

00000ab2 <__umulhisi3>:
     ab2:	a2 9f       	mul	r26, r18
     ab4:	b0 01       	movw	r22, r0
     ab6:	b3 9f       	mul	r27, r19
     ab8:	c0 01       	movw	r24, r0
     aba:	a3 9f       	mul	r26, r19
     abc:	70 0d       	add	r23, r0
     abe:	81 1d       	adc	r24, r1
     ac0:	11 24       	eor	r1, r1
     ac2:	91 1d       	adc	r25, r1
     ac4:	b2 9f       	mul	r27, r18
     ac6:	70 0d       	add	r23, r0
     ac8:	81 1d       	adc	r24, r1
     aca:	11 24       	eor	r1, r1
     acc:	91 1d       	adc	r25, r1
     ace:	08 95       	ret

00000ad0 <dtostrf>:
     ad0:	ef 92       	push	r14
     ad2:	0f 93       	push	r16
     ad4:	1f 93       	push	r17
     ad6:	cf 93       	push	r28
     ad8:	df 93       	push	r29
     ada:	e8 01       	movw	r28, r16
     adc:	47 fd       	sbrc	r20, 7
     ade:	02 c0       	rjmp	.+4      	; 0xae4 <dtostrf+0x14>
     ae0:	34 e0       	ldi	r19, 0x04	; 4
     ae2:	01 c0       	rjmp	.+2      	; 0xae6 <dtostrf+0x16>
     ae4:	34 e1       	ldi	r19, 0x14	; 20
     ae6:	04 2e       	mov	r0, r20
     ae8:	00 0c       	add	r0, r0
     aea:	55 0b       	sbc	r21, r21
     aec:	57 ff       	sbrs	r21, 7
     aee:	03 c0       	rjmp	.+6      	; 0xaf6 <dtostrf+0x26>
     af0:	51 95       	neg	r21
     af2:	41 95       	neg	r20
     af4:	51 09       	sbc	r21, r1
     af6:	e3 2e       	mov	r14, r19
     af8:	02 2f       	mov	r16, r18
     afa:	24 2f       	mov	r18, r20
     afc:	ae 01       	movw	r20, r28
     afe:	0e 94 8b 07 	call	0xf16	; 0xf16 <dtoa_prf>
     b02:	ce 01       	movw	r24, r28
     b04:	df 91       	pop	r29
     b06:	cf 91       	pop	r28
     b08:	1f 91       	pop	r17
     b0a:	0f 91       	pop	r16
     b0c:	ef 90       	pop	r14
     b0e:	08 95       	ret

00000b10 <sprintf>:
     b10:	ae e0       	ldi	r26, 0x0E	; 14
     b12:	b0 e0       	ldi	r27, 0x00	; 0
     b14:	ee e8       	ldi	r30, 0x8E	; 142
     b16:	f5 e0       	ldi	r31, 0x05	; 5
     b18:	0c 94 7b 0a 	jmp	0x14f6	; 0x14f6 <__prologue_saves__+0x1c>
     b1c:	0d 89       	ldd	r16, Y+21	; 0x15
     b1e:	1e 89       	ldd	r17, Y+22	; 0x16
     b20:	86 e0       	ldi	r24, 0x06	; 6
     b22:	8c 83       	std	Y+4, r24	; 0x04
     b24:	1a 83       	std	Y+2, r17	; 0x02
     b26:	09 83       	std	Y+1, r16	; 0x01
     b28:	8f ef       	ldi	r24, 0xFF	; 255
     b2a:	9f e7       	ldi	r25, 0x7F	; 127
     b2c:	9e 83       	std	Y+6, r25	; 0x06
     b2e:	8d 83       	std	Y+5, r24	; 0x05
     b30:	ae 01       	movw	r20, r28
     b32:	47 5e       	subi	r20, 0xE7	; 231
     b34:	5f 4f       	sbci	r21, 0xFF	; 255
     b36:	6f 89       	ldd	r22, Y+23	; 0x17
     b38:	78 8d       	ldd	r23, Y+24	; 0x18
     b3a:	ce 01       	movw	r24, r28
     b3c:	01 96       	adiw	r24, 0x01	; 1
     b3e:	0e 94 aa 05 	call	0xb54	; 0xb54 <vfprintf>
     b42:	ef 81       	ldd	r30, Y+7	; 0x07
     b44:	f8 85       	ldd	r31, Y+8	; 0x08
     b46:	e0 0f       	add	r30, r16
     b48:	f1 1f       	adc	r31, r17
     b4a:	10 82       	st	Z, r1
     b4c:	2e 96       	adiw	r28, 0x0e	; 14
     b4e:	e4 e0       	ldi	r30, 0x04	; 4
     b50:	0c 94 97 0a 	jmp	0x152e	; 0x152e <__epilogue_restores__+0x1c>

00000b54 <vfprintf>:
     b54:	ab e0       	ldi	r26, 0x0B	; 11
     b56:	b0 e0       	ldi	r27, 0x00	; 0
     b58:	e0 eb       	ldi	r30, 0xB0	; 176
     b5a:	f5 e0       	ldi	r31, 0x05	; 5
     b5c:	0c 94 6d 0a 	jmp	0x14da	; 0x14da <__prologue_saves__>
     b60:	6c 01       	movw	r12, r24
     b62:	7b 01       	movw	r14, r22
     b64:	8a 01       	movw	r16, r20
     b66:	fc 01       	movw	r30, r24
     b68:	17 82       	std	Z+7, r1	; 0x07
     b6a:	16 82       	std	Z+6, r1	; 0x06
     b6c:	83 81       	ldd	r24, Z+3	; 0x03
     b6e:	81 ff       	sbrs	r24, 1
     b70:	cc c1       	rjmp	.+920    	; 0xf0a <vfprintf+0x3b6>
     b72:	ce 01       	movw	r24, r28
     b74:	01 96       	adiw	r24, 0x01	; 1
     b76:	3c 01       	movw	r6, r24
     b78:	f6 01       	movw	r30, r12
     b7a:	93 81       	ldd	r25, Z+3	; 0x03
     b7c:	f7 01       	movw	r30, r14
     b7e:	93 fd       	sbrc	r25, 3
     b80:	85 91       	lpm	r24, Z+
     b82:	93 ff       	sbrs	r25, 3
     b84:	81 91       	ld	r24, Z+
     b86:	7f 01       	movw	r14, r30
     b88:	88 23       	and	r24, r24
     b8a:	09 f4       	brne	.+2      	; 0xb8e <vfprintf+0x3a>
     b8c:	ba c1       	rjmp	.+884    	; 0xf02 <vfprintf+0x3ae>
     b8e:	85 32       	cpi	r24, 0x25	; 37
     b90:	39 f4       	brne	.+14     	; 0xba0 <vfprintf+0x4c>
     b92:	93 fd       	sbrc	r25, 3
     b94:	85 91       	lpm	r24, Z+
     b96:	93 ff       	sbrs	r25, 3
     b98:	81 91       	ld	r24, Z+
     b9a:	7f 01       	movw	r14, r30
     b9c:	85 32       	cpi	r24, 0x25	; 37
     b9e:	29 f4       	brne	.+10     	; 0xbaa <vfprintf+0x56>
     ba0:	b6 01       	movw	r22, r12
     ba2:	90 e0       	ldi	r25, 0x00	; 0
     ba4:	0e 94 d3 09 	call	0x13a6	; 0x13a6 <fputc>
     ba8:	e7 cf       	rjmp	.-50     	; 0xb78 <vfprintf+0x24>
     baa:	91 2c       	mov	r9, r1
     bac:	21 2c       	mov	r2, r1
     bae:	31 2c       	mov	r3, r1
     bb0:	ff e1       	ldi	r31, 0x1F	; 31
     bb2:	f3 15       	cp	r31, r3
     bb4:	d8 f0       	brcs	.+54     	; 0xbec <vfprintf+0x98>
     bb6:	8b 32       	cpi	r24, 0x2B	; 43
     bb8:	79 f0       	breq	.+30     	; 0xbd8 <vfprintf+0x84>
     bba:	38 f4       	brcc	.+14     	; 0xbca <vfprintf+0x76>
     bbc:	80 32       	cpi	r24, 0x20	; 32
     bbe:	79 f0       	breq	.+30     	; 0xbde <vfprintf+0x8a>
     bc0:	83 32       	cpi	r24, 0x23	; 35
     bc2:	a1 f4       	brne	.+40     	; 0xbec <vfprintf+0x98>
     bc4:	23 2d       	mov	r18, r3
     bc6:	20 61       	ori	r18, 0x10	; 16
     bc8:	1d c0       	rjmp	.+58     	; 0xc04 <vfprintf+0xb0>
     bca:	8d 32       	cpi	r24, 0x2D	; 45
     bcc:	61 f0       	breq	.+24     	; 0xbe6 <vfprintf+0x92>
     bce:	80 33       	cpi	r24, 0x30	; 48
     bd0:	69 f4       	brne	.+26     	; 0xbec <vfprintf+0x98>
     bd2:	23 2d       	mov	r18, r3
     bd4:	21 60       	ori	r18, 0x01	; 1
     bd6:	16 c0       	rjmp	.+44     	; 0xc04 <vfprintf+0xb0>
     bd8:	83 2d       	mov	r24, r3
     bda:	82 60       	ori	r24, 0x02	; 2
     bdc:	38 2e       	mov	r3, r24
     bde:	e3 2d       	mov	r30, r3
     be0:	e4 60       	ori	r30, 0x04	; 4
     be2:	3e 2e       	mov	r3, r30
     be4:	2a c0       	rjmp	.+84     	; 0xc3a <vfprintf+0xe6>
     be6:	f3 2d       	mov	r31, r3
     be8:	f8 60       	ori	r31, 0x08	; 8
     bea:	1d c0       	rjmp	.+58     	; 0xc26 <vfprintf+0xd2>
     bec:	37 fc       	sbrc	r3, 7
     bee:	2d c0       	rjmp	.+90     	; 0xc4a <vfprintf+0xf6>
     bf0:	20 ed       	ldi	r18, 0xD0	; 208
     bf2:	28 0f       	add	r18, r24
     bf4:	2a 30       	cpi	r18, 0x0A	; 10
     bf6:	40 f0       	brcs	.+16     	; 0xc08 <vfprintf+0xb4>
     bf8:	8e 32       	cpi	r24, 0x2E	; 46
     bfa:	b9 f4       	brne	.+46     	; 0xc2a <vfprintf+0xd6>
     bfc:	36 fc       	sbrc	r3, 6
     bfe:	81 c1       	rjmp	.+770    	; 0xf02 <vfprintf+0x3ae>
     c00:	23 2d       	mov	r18, r3
     c02:	20 64       	ori	r18, 0x40	; 64
     c04:	32 2e       	mov	r3, r18
     c06:	19 c0       	rjmp	.+50     	; 0xc3a <vfprintf+0xe6>
     c08:	36 fe       	sbrs	r3, 6
     c0a:	06 c0       	rjmp	.+12     	; 0xc18 <vfprintf+0xc4>
     c0c:	8a e0       	ldi	r24, 0x0A	; 10
     c0e:	98 9e       	mul	r9, r24
     c10:	20 0d       	add	r18, r0
     c12:	11 24       	eor	r1, r1
     c14:	92 2e       	mov	r9, r18
     c16:	11 c0       	rjmp	.+34     	; 0xc3a <vfprintf+0xe6>
     c18:	ea e0       	ldi	r30, 0x0A	; 10
     c1a:	2e 9e       	mul	r2, r30
     c1c:	20 0d       	add	r18, r0
     c1e:	11 24       	eor	r1, r1
     c20:	22 2e       	mov	r2, r18
     c22:	f3 2d       	mov	r31, r3
     c24:	f0 62       	ori	r31, 0x20	; 32
     c26:	3f 2e       	mov	r3, r31
     c28:	08 c0       	rjmp	.+16     	; 0xc3a <vfprintf+0xe6>
     c2a:	8c 36       	cpi	r24, 0x6C	; 108
     c2c:	21 f4       	brne	.+8      	; 0xc36 <vfprintf+0xe2>
     c2e:	83 2d       	mov	r24, r3
     c30:	80 68       	ori	r24, 0x80	; 128
     c32:	38 2e       	mov	r3, r24
     c34:	02 c0       	rjmp	.+4      	; 0xc3a <vfprintf+0xe6>
     c36:	88 36       	cpi	r24, 0x68	; 104
     c38:	41 f4       	brne	.+16     	; 0xc4a <vfprintf+0xf6>
     c3a:	f7 01       	movw	r30, r14
     c3c:	93 fd       	sbrc	r25, 3
     c3e:	85 91       	lpm	r24, Z+
     c40:	93 ff       	sbrs	r25, 3
     c42:	81 91       	ld	r24, Z+
     c44:	7f 01       	movw	r14, r30
     c46:	81 11       	cpse	r24, r1
     c48:	b3 cf       	rjmp	.-154    	; 0xbb0 <vfprintf+0x5c>
     c4a:	98 2f       	mov	r25, r24
     c4c:	9f 7d       	andi	r25, 0xDF	; 223
     c4e:	95 54       	subi	r25, 0x45	; 69
     c50:	93 30       	cpi	r25, 0x03	; 3
     c52:	28 f4       	brcc	.+10     	; 0xc5e <vfprintf+0x10a>
     c54:	0c 5f       	subi	r16, 0xFC	; 252
     c56:	1f 4f       	sbci	r17, 0xFF	; 255
     c58:	9f e3       	ldi	r25, 0x3F	; 63
     c5a:	99 83       	std	Y+1, r25	; 0x01
     c5c:	0d c0       	rjmp	.+26     	; 0xc78 <vfprintf+0x124>
     c5e:	83 36       	cpi	r24, 0x63	; 99
     c60:	31 f0       	breq	.+12     	; 0xc6e <vfprintf+0x11a>
     c62:	83 37       	cpi	r24, 0x73	; 115
     c64:	71 f0       	breq	.+28     	; 0xc82 <vfprintf+0x12e>
     c66:	83 35       	cpi	r24, 0x53	; 83
     c68:	09 f0       	breq	.+2      	; 0xc6c <vfprintf+0x118>
     c6a:	59 c0       	rjmp	.+178    	; 0xd1e <vfprintf+0x1ca>
     c6c:	21 c0       	rjmp	.+66     	; 0xcb0 <vfprintf+0x15c>
     c6e:	f8 01       	movw	r30, r16
     c70:	80 81       	ld	r24, Z
     c72:	89 83       	std	Y+1, r24	; 0x01
     c74:	0e 5f       	subi	r16, 0xFE	; 254
     c76:	1f 4f       	sbci	r17, 0xFF	; 255
     c78:	88 24       	eor	r8, r8
     c7a:	83 94       	inc	r8
     c7c:	91 2c       	mov	r9, r1
     c7e:	53 01       	movw	r10, r6
     c80:	13 c0       	rjmp	.+38     	; 0xca8 <vfprintf+0x154>
     c82:	28 01       	movw	r4, r16
     c84:	f2 e0       	ldi	r31, 0x02	; 2
     c86:	4f 0e       	add	r4, r31
     c88:	51 1c       	adc	r5, r1
     c8a:	f8 01       	movw	r30, r16
     c8c:	a0 80       	ld	r10, Z
     c8e:	b1 80       	ldd	r11, Z+1	; 0x01
     c90:	36 fe       	sbrs	r3, 6
     c92:	03 c0       	rjmp	.+6      	; 0xc9a <vfprintf+0x146>
     c94:	69 2d       	mov	r22, r9
     c96:	70 e0       	ldi	r23, 0x00	; 0
     c98:	02 c0       	rjmp	.+4      	; 0xc9e <vfprintf+0x14a>
     c9a:	6f ef       	ldi	r22, 0xFF	; 255
     c9c:	7f ef       	ldi	r23, 0xFF	; 255
     c9e:	c5 01       	movw	r24, r10
     ca0:	0e 94 c8 09 	call	0x1390	; 0x1390 <strnlen>
     ca4:	4c 01       	movw	r8, r24
     ca6:	82 01       	movw	r16, r4
     ca8:	f3 2d       	mov	r31, r3
     caa:	ff 77       	andi	r31, 0x7F	; 127
     cac:	3f 2e       	mov	r3, r31
     cae:	16 c0       	rjmp	.+44     	; 0xcdc <vfprintf+0x188>
     cb0:	28 01       	movw	r4, r16
     cb2:	22 e0       	ldi	r18, 0x02	; 2
     cb4:	42 0e       	add	r4, r18
     cb6:	51 1c       	adc	r5, r1
     cb8:	f8 01       	movw	r30, r16
     cba:	a0 80       	ld	r10, Z
     cbc:	b1 80       	ldd	r11, Z+1	; 0x01
     cbe:	36 fe       	sbrs	r3, 6
     cc0:	03 c0       	rjmp	.+6      	; 0xcc8 <vfprintf+0x174>
     cc2:	69 2d       	mov	r22, r9
     cc4:	70 e0       	ldi	r23, 0x00	; 0
     cc6:	02 c0       	rjmp	.+4      	; 0xccc <vfprintf+0x178>
     cc8:	6f ef       	ldi	r22, 0xFF	; 255
     cca:	7f ef       	ldi	r23, 0xFF	; 255
     ccc:	c5 01       	movw	r24, r10
     cce:	0e 94 bd 09 	call	0x137a	; 0x137a <strnlen_P>
     cd2:	4c 01       	movw	r8, r24
     cd4:	f3 2d       	mov	r31, r3
     cd6:	f0 68       	ori	r31, 0x80	; 128
     cd8:	3f 2e       	mov	r3, r31
     cda:	82 01       	movw	r16, r4
     cdc:	33 fc       	sbrc	r3, 3
     cde:	1b c0       	rjmp	.+54     	; 0xd16 <vfprintf+0x1c2>
     ce0:	82 2d       	mov	r24, r2
     ce2:	90 e0       	ldi	r25, 0x00	; 0
     ce4:	88 16       	cp	r8, r24
     ce6:	99 06       	cpc	r9, r25
     ce8:	b0 f4       	brcc	.+44     	; 0xd16 <vfprintf+0x1c2>
     cea:	b6 01       	movw	r22, r12
     cec:	80 e2       	ldi	r24, 0x20	; 32
     cee:	90 e0       	ldi	r25, 0x00	; 0
     cf0:	0e 94 d3 09 	call	0x13a6	; 0x13a6 <fputc>
     cf4:	2a 94       	dec	r2
     cf6:	f4 cf       	rjmp	.-24     	; 0xce0 <vfprintf+0x18c>
     cf8:	f5 01       	movw	r30, r10
     cfa:	37 fc       	sbrc	r3, 7
     cfc:	85 91       	lpm	r24, Z+
     cfe:	37 fe       	sbrs	r3, 7
     d00:	81 91       	ld	r24, Z+
     d02:	5f 01       	movw	r10, r30
     d04:	b6 01       	movw	r22, r12
     d06:	90 e0       	ldi	r25, 0x00	; 0
     d08:	0e 94 d3 09 	call	0x13a6	; 0x13a6 <fputc>
     d0c:	21 10       	cpse	r2, r1
     d0e:	2a 94       	dec	r2
     d10:	21 e0       	ldi	r18, 0x01	; 1
     d12:	82 1a       	sub	r8, r18
     d14:	91 08       	sbc	r9, r1
     d16:	81 14       	cp	r8, r1
     d18:	91 04       	cpc	r9, r1
     d1a:	71 f7       	brne	.-36     	; 0xcf8 <vfprintf+0x1a4>
     d1c:	e8 c0       	rjmp	.+464    	; 0xeee <vfprintf+0x39a>
     d1e:	84 36       	cpi	r24, 0x64	; 100
     d20:	11 f0       	breq	.+4      	; 0xd26 <vfprintf+0x1d2>
     d22:	89 36       	cpi	r24, 0x69	; 105
     d24:	41 f5       	brne	.+80     	; 0xd76 <vfprintf+0x222>
     d26:	f8 01       	movw	r30, r16
     d28:	37 fe       	sbrs	r3, 7
     d2a:	07 c0       	rjmp	.+14     	; 0xd3a <vfprintf+0x1e6>
     d2c:	60 81       	ld	r22, Z
     d2e:	71 81       	ldd	r23, Z+1	; 0x01
     d30:	82 81       	ldd	r24, Z+2	; 0x02
     d32:	93 81       	ldd	r25, Z+3	; 0x03
     d34:	0c 5f       	subi	r16, 0xFC	; 252
     d36:	1f 4f       	sbci	r17, 0xFF	; 255
     d38:	08 c0       	rjmp	.+16     	; 0xd4a <vfprintf+0x1f6>
     d3a:	60 81       	ld	r22, Z
     d3c:	71 81       	ldd	r23, Z+1	; 0x01
     d3e:	07 2e       	mov	r0, r23
     d40:	00 0c       	add	r0, r0
     d42:	88 0b       	sbc	r24, r24
     d44:	99 0b       	sbc	r25, r25
     d46:	0e 5f       	subi	r16, 0xFE	; 254
     d48:	1f 4f       	sbci	r17, 0xFF	; 255
     d4a:	f3 2d       	mov	r31, r3
     d4c:	ff 76       	andi	r31, 0x6F	; 111
     d4e:	3f 2e       	mov	r3, r31
     d50:	97 ff       	sbrs	r25, 7
     d52:	09 c0       	rjmp	.+18     	; 0xd66 <vfprintf+0x212>
     d54:	90 95       	com	r25
     d56:	80 95       	com	r24
     d58:	70 95       	com	r23
     d5a:	61 95       	neg	r22
     d5c:	7f 4f       	sbci	r23, 0xFF	; 255
     d5e:	8f 4f       	sbci	r24, 0xFF	; 255
     d60:	9f 4f       	sbci	r25, 0xFF	; 255
     d62:	f0 68       	ori	r31, 0x80	; 128
     d64:	3f 2e       	mov	r3, r31
     d66:	2a e0       	ldi	r18, 0x0A	; 10
     d68:	30 e0       	ldi	r19, 0x00	; 0
     d6a:	a3 01       	movw	r20, r6
     d6c:	0e 94 0f 0a 	call	0x141e	; 0x141e <__ultoa_invert>
     d70:	88 2e       	mov	r8, r24
     d72:	86 18       	sub	r8, r6
     d74:	45 c0       	rjmp	.+138    	; 0xe00 <vfprintf+0x2ac>
     d76:	85 37       	cpi	r24, 0x75	; 117
     d78:	31 f4       	brne	.+12     	; 0xd86 <vfprintf+0x232>
     d7a:	23 2d       	mov	r18, r3
     d7c:	2f 7e       	andi	r18, 0xEF	; 239
     d7e:	b2 2e       	mov	r11, r18
     d80:	2a e0       	ldi	r18, 0x0A	; 10
     d82:	30 e0       	ldi	r19, 0x00	; 0
     d84:	25 c0       	rjmp	.+74     	; 0xdd0 <vfprintf+0x27c>
     d86:	93 2d       	mov	r25, r3
     d88:	99 7f       	andi	r25, 0xF9	; 249
     d8a:	b9 2e       	mov	r11, r25
     d8c:	8f 36       	cpi	r24, 0x6F	; 111
     d8e:	c1 f0       	breq	.+48     	; 0xdc0 <vfprintf+0x26c>
     d90:	18 f4       	brcc	.+6      	; 0xd98 <vfprintf+0x244>
     d92:	88 35       	cpi	r24, 0x58	; 88
     d94:	79 f0       	breq	.+30     	; 0xdb4 <vfprintf+0x260>
     d96:	b5 c0       	rjmp	.+362    	; 0xf02 <vfprintf+0x3ae>
     d98:	80 37       	cpi	r24, 0x70	; 112
     d9a:	19 f0       	breq	.+6      	; 0xda2 <vfprintf+0x24e>
     d9c:	88 37       	cpi	r24, 0x78	; 120
     d9e:	21 f0       	breq	.+8      	; 0xda8 <vfprintf+0x254>
     da0:	b0 c0       	rjmp	.+352    	; 0xf02 <vfprintf+0x3ae>
     da2:	e9 2f       	mov	r30, r25
     da4:	e0 61       	ori	r30, 0x10	; 16
     da6:	be 2e       	mov	r11, r30
     da8:	b4 fe       	sbrs	r11, 4
     daa:	0d c0       	rjmp	.+26     	; 0xdc6 <vfprintf+0x272>
     dac:	fb 2d       	mov	r31, r11
     dae:	f4 60       	ori	r31, 0x04	; 4
     db0:	bf 2e       	mov	r11, r31
     db2:	09 c0       	rjmp	.+18     	; 0xdc6 <vfprintf+0x272>
     db4:	34 fe       	sbrs	r3, 4
     db6:	0a c0       	rjmp	.+20     	; 0xdcc <vfprintf+0x278>
     db8:	29 2f       	mov	r18, r25
     dba:	26 60       	ori	r18, 0x06	; 6
     dbc:	b2 2e       	mov	r11, r18
     dbe:	06 c0       	rjmp	.+12     	; 0xdcc <vfprintf+0x278>
     dc0:	28 e0       	ldi	r18, 0x08	; 8
     dc2:	30 e0       	ldi	r19, 0x00	; 0
     dc4:	05 c0       	rjmp	.+10     	; 0xdd0 <vfprintf+0x27c>
     dc6:	20 e1       	ldi	r18, 0x10	; 16
     dc8:	30 e0       	ldi	r19, 0x00	; 0
     dca:	02 c0       	rjmp	.+4      	; 0xdd0 <vfprintf+0x27c>
     dcc:	20 e1       	ldi	r18, 0x10	; 16
     dce:	32 e0       	ldi	r19, 0x02	; 2
     dd0:	f8 01       	movw	r30, r16
     dd2:	b7 fe       	sbrs	r11, 7
     dd4:	07 c0       	rjmp	.+14     	; 0xde4 <vfprintf+0x290>
     dd6:	60 81       	ld	r22, Z
     dd8:	71 81       	ldd	r23, Z+1	; 0x01
     dda:	82 81       	ldd	r24, Z+2	; 0x02
     ddc:	93 81       	ldd	r25, Z+3	; 0x03
     dde:	0c 5f       	subi	r16, 0xFC	; 252
     de0:	1f 4f       	sbci	r17, 0xFF	; 255
     de2:	06 c0       	rjmp	.+12     	; 0xdf0 <vfprintf+0x29c>
     de4:	60 81       	ld	r22, Z
     de6:	71 81       	ldd	r23, Z+1	; 0x01
     de8:	80 e0       	ldi	r24, 0x00	; 0
     dea:	90 e0       	ldi	r25, 0x00	; 0
     dec:	0e 5f       	subi	r16, 0xFE	; 254
     dee:	1f 4f       	sbci	r17, 0xFF	; 255
     df0:	a3 01       	movw	r20, r6
     df2:	0e 94 0f 0a 	call	0x141e	; 0x141e <__ultoa_invert>
     df6:	88 2e       	mov	r8, r24
     df8:	86 18       	sub	r8, r6
     dfa:	fb 2d       	mov	r31, r11
     dfc:	ff 77       	andi	r31, 0x7F	; 127
     dfe:	3f 2e       	mov	r3, r31
     e00:	36 fe       	sbrs	r3, 6
     e02:	0d c0       	rjmp	.+26     	; 0xe1e <vfprintf+0x2ca>
     e04:	23 2d       	mov	r18, r3
     e06:	2e 7f       	andi	r18, 0xFE	; 254
     e08:	a2 2e       	mov	r10, r18
     e0a:	89 14       	cp	r8, r9
     e0c:	58 f4       	brcc	.+22     	; 0xe24 <vfprintf+0x2d0>
     e0e:	34 fe       	sbrs	r3, 4
     e10:	0b c0       	rjmp	.+22     	; 0xe28 <vfprintf+0x2d4>
     e12:	32 fc       	sbrc	r3, 2
     e14:	09 c0       	rjmp	.+18     	; 0xe28 <vfprintf+0x2d4>
     e16:	83 2d       	mov	r24, r3
     e18:	8e 7e       	andi	r24, 0xEE	; 238
     e1a:	a8 2e       	mov	r10, r24
     e1c:	05 c0       	rjmp	.+10     	; 0xe28 <vfprintf+0x2d4>
     e1e:	b8 2c       	mov	r11, r8
     e20:	a3 2c       	mov	r10, r3
     e22:	03 c0       	rjmp	.+6      	; 0xe2a <vfprintf+0x2d6>
     e24:	b8 2c       	mov	r11, r8
     e26:	01 c0       	rjmp	.+2      	; 0xe2a <vfprintf+0x2d6>
     e28:	b9 2c       	mov	r11, r9
     e2a:	a4 fe       	sbrs	r10, 4
     e2c:	0f c0       	rjmp	.+30     	; 0xe4c <vfprintf+0x2f8>
     e2e:	fe 01       	movw	r30, r28
     e30:	e8 0d       	add	r30, r8
     e32:	f1 1d       	adc	r31, r1
     e34:	80 81       	ld	r24, Z
     e36:	80 33       	cpi	r24, 0x30	; 48
     e38:	21 f4       	brne	.+8      	; 0xe42 <vfprintf+0x2ee>
     e3a:	9a 2d       	mov	r25, r10
     e3c:	99 7e       	andi	r25, 0xE9	; 233
     e3e:	a9 2e       	mov	r10, r25
     e40:	09 c0       	rjmp	.+18     	; 0xe54 <vfprintf+0x300>
     e42:	a2 fe       	sbrs	r10, 2
     e44:	06 c0       	rjmp	.+12     	; 0xe52 <vfprintf+0x2fe>
     e46:	b3 94       	inc	r11
     e48:	b3 94       	inc	r11
     e4a:	04 c0       	rjmp	.+8      	; 0xe54 <vfprintf+0x300>
     e4c:	8a 2d       	mov	r24, r10
     e4e:	86 78       	andi	r24, 0x86	; 134
     e50:	09 f0       	breq	.+2      	; 0xe54 <vfprintf+0x300>
     e52:	b3 94       	inc	r11
     e54:	a3 fc       	sbrc	r10, 3
     e56:	11 c0       	rjmp	.+34     	; 0xe7a <vfprintf+0x326>
     e58:	a0 fe       	sbrs	r10, 0
     e5a:	06 c0       	rjmp	.+12     	; 0xe68 <vfprintf+0x314>
     e5c:	b2 14       	cp	r11, r2
     e5e:	88 f4       	brcc	.+34     	; 0xe82 <vfprintf+0x32e>
     e60:	28 0c       	add	r2, r8
     e62:	92 2c       	mov	r9, r2
     e64:	9b 18       	sub	r9, r11
     e66:	0e c0       	rjmp	.+28     	; 0xe84 <vfprintf+0x330>
     e68:	b2 14       	cp	r11, r2
     e6a:	60 f4       	brcc	.+24     	; 0xe84 <vfprintf+0x330>
     e6c:	b6 01       	movw	r22, r12
     e6e:	80 e2       	ldi	r24, 0x20	; 32
     e70:	90 e0       	ldi	r25, 0x00	; 0
     e72:	0e 94 d3 09 	call	0x13a6	; 0x13a6 <fputc>
     e76:	b3 94       	inc	r11
     e78:	f7 cf       	rjmp	.-18     	; 0xe68 <vfprintf+0x314>
     e7a:	b2 14       	cp	r11, r2
     e7c:	18 f4       	brcc	.+6      	; 0xe84 <vfprintf+0x330>
     e7e:	2b 18       	sub	r2, r11
     e80:	02 c0       	rjmp	.+4      	; 0xe86 <vfprintf+0x332>
     e82:	98 2c       	mov	r9, r8
     e84:	21 2c       	mov	r2, r1
     e86:	a4 fe       	sbrs	r10, 4
     e88:	10 c0       	rjmp	.+32     	; 0xeaa <vfprintf+0x356>
     e8a:	b6 01       	movw	r22, r12
     e8c:	80 e3       	ldi	r24, 0x30	; 48
     e8e:	90 e0       	ldi	r25, 0x00	; 0
     e90:	0e 94 d3 09 	call	0x13a6	; 0x13a6 <fputc>
     e94:	a2 fe       	sbrs	r10, 2
     e96:	17 c0       	rjmp	.+46     	; 0xec6 <vfprintf+0x372>
     e98:	a1 fc       	sbrc	r10, 1
     e9a:	03 c0       	rjmp	.+6      	; 0xea2 <vfprintf+0x34e>
     e9c:	88 e7       	ldi	r24, 0x78	; 120
     e9e:	90 e0       	ldi	r25, 0x00	; 0
     ea0:	02 c0       	rjmp	.+4      	; 0xea6 <vfprintf+0x352>
     ea2:	88 e5       	ldi	r24, 0x58	; 88
     ea4:	90 e0       	ldi	r25, 0x00	; 0
     ea6:	b6 01       	movw	r22, r12
     ea8:	0c c0       	rjmp	.+24     	; 0xec2 <vfprintf+0x36e>
     eaa:	8a 2d       	mov	r24, r10
     eac:	86 78       	andi	r24, 0x86	; 134
     eae:	59 f0       	breq	.+22     	; 0xec6 <vfprintf+0x372>
     eb0:	a1 fe       	sbrs	r10, 1
     eb2:	02 c0       	rjmp	.+4      	; 0xeb8 <vfprintf+0x364>
     eb4:	8b e2       	ldi	r24, 0x2B	; 43
     eb6:	01 c0       	rjmp	.+2      	; 0xeba <vfprintf+0x366>
     eb8:	80 e2       	ldi	r24, 0x20	; 32
     eba:	a7 fc       	sbrc	r10, 7
     ebc:	8d e2       	ldi	r24, 0x2D	; 45
     ebe:	b6 01       	movw	r22, r12
     ec0:	90 e0       	ldi	r25, 0x00	; 0
     ec2:	0e 94 d3 09 	call	0x13a6	; 0x13a6 <fputc>
     ec6:	89 14       	cp	r8, r9
     ec8:	38 f4       	brcc	.+14     	; 0xed8 <vfprintf+0x384>
     eca:	b6 01       	movw	r22, r12
     ecc:	80 e3       	ldi	r24, 0x30	; 48
     ece:	90 e0       	ldi	r25, 0x00	; 0
     ed0:	0e 94 d3 09 	call	0x13a6	; 0x13a6 <fputc>
     ed4:	9a 94       	dec	r9
     ed6:	f7 cf       	rjmp	.-18     	; 0xec6 <vfprintf+0x372>
     ed8:	8a 94       	dec	r8
     eda:	f3 01       	movw	r30, r6
     edc:	e8 0d       	add	r30, r8
     ede:	f1 1d       	adc	r31, r1
     ee0:	80 81       	ld	r24, Z
     ee2:	b6 01       	movw	r22, r12
     ee4:	90 e0       	ldi	r25, 0x00	; 0
     ee6:	0e 94 d3 09 	call	0x13a6	; 0x13a6 <fputc>
     eea:	81 10       	cpse	r8, r1
     eec:	f5 cf       	rjmp	.-22     	; 0xed8 <vfprintf+0x384>
     eee:	22 20       	and	r2, r2
     ef0:	09 f4       	brne	.+2      	; 0xef4 <vfprintf+0x3a0>
     ef2:	42 ce       	rjmp	.-892    	; 0xb78 <vfprintf+0x24>
     ef4:	b6 01       	movw	r22, r12
     ef6:	80 e2       	ldi	r24, 0x20	; 32
     ef8:	90 e0       	ldi	r25, 0x00	; 0
     efa:	0e 94 d3 09 	call	0x13a6	; 0x13a6 <fputc>
     efe:	2a 94       	dec	r2
     f00:	f6 cf       	rjmp	.-20     	; 0xeee <vfprintf+0x39a>
     f02:	f6 01       	movw	r30, r12
     f04:	86 81       	ldd	r24, Z+6	; 0x06
     f06:	97 81       	ldd	r25, Z+7	; 0x07
     f08:	02 c0       	rjmp	.+4      	; 0xf0e <vfprintf+0x3ba>
     f0a:	8f ef       	ldi	r24, 0xFF	; 255
     f0c:	9f ef       	ldi	r25, 0xFF	; 255
     f0e:	2b 96       	adiw	r28, 0x0b	; 11
     f10:	e2 e1       	ldi	r30, 0x12	; 18
     f12:	0c 94 89 0a 	jmp	0x1512	; 0x1512 <__epilogue_restores__>

00000f16 <dtoa_prf>:
     f16:	a9 e0       	ldi	r26, 0x09	; 9
     f18:	b0 e0       	ldi	r27, 0x00	; 0
     f1a:	e1 e9       	ldi	r30, 0x91	; 145
     f1c:	f7 e0       	ldi	r31, 0x07	; 7
     f1e:	0c 94 73 0a 	jmp	0x14e6	; 0x14e6 <__prologue_saves__+0xc>
     f22:	6a 01       	movw	r12, r20
     f24:	12 2f       	mov	r17, r18
     f26:	b0 2e       	mov	r11, r16
     f28:	2b e3       	ldi	r18, 0x3B	; 59
     f2a:	20 17       	cp	r18, r16
     f2c:	20 f0       	brcs	.+8      	; 0xf36 <dtoa_prf+0x20>
     f2e:	ff 24       	eor	r15, r15
     f30:	f3 94       	inc	r15
     f32:	f0 0e       	add	r15, r16
     f34:	02 c0       	rjmp	.+4      	; 0xf3a <dtoa_prf+0x24>
     f36:	2c e3       	ldi	r18, 0x3C	; 60
     f38:	f2 2e       	mov	r15, r18
     f3a:	0f 2d       	mov	r16, r15
     f3c:	27 e0       	ldi	r18, 0x07	; 7
     f3e:	ae 01       	movw	r20, r28
     f40:	4f 5f       	subi	r20, 0xFF	; 255
     f42:	5f 4f       	sbci	r21, 0xFF	; 255
     f44:	0e 94 e5 08 	call	0x11ca	; 0x11ca <__ftoa_engine>
     f48:	bc 01       	movw	r22, r24
     f4a:	49 81       	ldd	r20, Y+1	; 0x01
     f4c:	84 2f       	mov	r24, r20
     f4e:	89 70       	andi	r24, 0x09	; 9
     f50:	81 30       	cpi	r24, 0x01	; 1
     f52:	31 f0       	breq	.+12     	; 0xf60 <dtoa_prf+0x4a>
     f54:	e1 fc       	sbrc	r14, 1
     f56:	06 c0       	rjmp	.+12     	; 0xf64 <dtoa_prf+0x4e>
     f58:	e0 fe       	sbrs	r14, 0
     f5a:	06 c0       	rjmp	.+12     	; 0xf68 <dtoa_prf+0x52>
     f5c:	90 e2       	ldi	r25, 0x20	; 32
     f5e:	05 c0       	rjmp	.+10     	; 0xf6a <dtoa_prf+0x54>
     f60:	9d e2       	ldi	r25, 0x2D	; 45
     f62:	03 c0       	rjmp	.+6      	; 0xf6a <dtoa_prf+0x54>
     f64:	9b e2       	ldi	r25, 0x2B	; 43
     f66:	01 c0       	rjmp	.+2      	; 0xf6a <dtoa_prf+0x54>
     f68:	90 e0       	ldi	r25, 0x00	; 0
     f6a:	5e 2d       	mov	r21, r14
     f6c:	50 71       	andi	r21, 0x10	; 16
     f6e:	43 ff       	sbrs	r20, 3
     f70:	3c c0       	rjmp	.+120    	; 0xfea <dtoa_prf+0xd4>
     f72:	91 11       	cpse	r25, r1
     f74:	02 c0       	rjmp	.+4      	; 0xf7a <dtoa_prf+0x64>
     f76:	83 e0       	ldi	r24, 0x03	; 3
     f78:	01 c0       	rjmp	.+2      	; 0xf7c <dtoa_prf+0x66>
     f7a:	84 e0       	ldi	r24, 0x04	; 4
     f7c:	81 17       	cp	r24, r17
     f7e:	18 f4       	brcc	.+6      	; 0xf86 <dtoa_prf+0x70>
     f80:	21 2f       	mov	r18, r17
     f82:	28 1b       	sub	r18, r24
     f84:	01 c0       	rjmp	.+2      	; 0xf88 <dtoa_prf+0x72>
     f86:	20 e0       	ldi	r18, 0x00	; 0
     f88:	51 11       	cpse	r21, r1
     f8a:	0b c0       	rjmp	.+22     	; 0xfa2 <dtoa_prf+0x8c>
     f8c:	f6 01       	movw	r30, r12
     f8e:	82 2f       	mov	r24, r18
     f90:	30 e2       	ldi	r19, 0x20	; 32
     f92:	88 23       	and	r24, r24
     f94:	19 f0       	breq	.+6      	; 0xf9c <dtoa_prf+0x86>
     f96:	31 93       	st	Z+, r19
     f98:	81 50       	subi	r24, 0x01	; 1
     f9a:	fb cf       	rjmp	.-10     	; 0xf92 <dtoa_prf+0x7c>
     f9c:	c2 0e       	add	r12, r18
     f9e:	d1 1c       	adc	r13, r1
     fa0:	20 e0       	ldi	r18, 0x00	; 0
     fa2:	99 23       	and	r25, r25
     fa4:	29 f0       	breq	.+10     	; 0xfb0 <dtoa_prf+0x9a>
     fa6:	d6 01       	movw	r26, r12
     fa8:	9c 93       	st	X, r25
     faa:	f6 01       	movw	r30, r12
     fac:	31 96       	adiw	r30, 0x01	; 1
     fae:	6f 01       	movw	r12, r30
     fb0:	c6 01       	movw	r24, r12
     fb2:	03 96       	adiw	r24, 0x03	; 3
     fb4:	e2 fe       	sbrs	r14, 2
     fb6:	0a c0       	rjmp	.+20     	; 0xfcc <dtoa_prf+0xb6>
     fb8:	3e e4       	ldi	r19, 0x4E	; 78
     fba:	d6 01       	movw	r26, r12
     fbc:	3c 93       	st	X, r19
     fbe:	41 e4       	ldi	r20, 0x41	; 65
     fc0:	11 96       	adiw	r26, 0x01	; 1
     fc2:	4c 93       	st	X, r20
     fc4:	11 97       	sbiw	r26, 0x01	; 1
     fc6:	12 96       	adiw	r26, 0x02	; 2
     fc8:	3c 93       	st	X, r19
     fca:	06 c0       	rjmp	.+12     	; 0xfd8 <dtoa_prf+0xc2>
     fcc:	3e e6       	ldi	r19, 0x6E	; 110
     fce:	f6 01       	movw	r30, r12
     fd0:	30 83       	st	Z, r19
     fd2:	41 e6       	ldi	r20, 0x61	; 97
     fd4:	41 83       	std	Z+1, r20	; 0x01
     fd6:	32 83       	std	Z+2, r19	; 0x02
     fd8:	fc 01       	movw	r30, r24
     fda:	32 2f       	mov	r19, r18
     fdc:	40 e2       	ldi	r20, 0x20	; 32
     fde:	33 23       	and	r19, r19
     fe0:	09 f4       	brne	.+2      	; 0xfe4 <dtoa_prf+0xce>
     fe2:	42 c0       	rjmp	.+132    	; 0x1068 <dtoa_prf+0x152>
     fe4:	41 93       	st	Z+, r20
     fe6:	31 50       	subi	r19, 0x01	; 1
     fe8:	fa cf       	rjmp	.-12     	; 0xfde <dtoa_prf+0xc8>
     fea:	42 ff       	sbrs	r20, 2
     fec:	44 c0       	rjmp	.+136    	; 0x1076 <dtoa_prf+0x160>
     fee:	91 11       	cpse	r25, r1
     ff0:	02 c0       	rjmp	.+4      	; 0xff6 <dtoa_prf+0xe0>
     ff2:	83 e0       	ldi	r24, 0x03	; 3
     ff4:	01 c0       	rjmp	.+2      	; 0xff8 <dtoa_prf+0xe2>
     ff6:	84 e0       	ldi	r24, 0x04	; 4
     ff8:	81 17       	cp	r24, r17
     ffa:	18 f4       	brcc	.+6      	; 0x1002 <dtoa_prf+0xec>
     ffc:	21 2f       	mov	r18, r17
     ffe:	28 1b       	sub	r18, r24
    1000:	01 c0       	rjmp	.+2      	; 0x1004 <dtoa_prf+0xee>
    1002:	20 e0       	ldi	r18, 0x00	; 0
    1004:	51 11       	cpse	r21, r1
    1006:	0b c0       	rjmp	.+22     	; 0x101e <dtoa_prf+0x108>
    1008:	f6 01       	movw	r30, r12
    100a:	82 2f       	mov	r24, r18
    100c:	30 e2       	ldi	r19, 0x20	; 32
    100e:	88 23       	and	r24, r24
    1010:	19 f0       	breq	.+6      	; 0x1018 <dtoa_prf+0x102>
    1012:	31 93       	st	Z+, r19
    1014:	81 50       	subi	r24, 0x01	; 1
    1016:	fb cf       	rjmp	.-10     	; 0x100e <dtoa_prf+0xf8>
    1018:	c2 0e       	add	r12, r18
    101a:	d1 1c       	adc	r13, r1
    101c:	20 e0       	ldi	r18, 0x00	; 0
    101e:	99 23       	and	r25, r25
    1020:	29 f0       	breq	.+10     	; 0x102c <dtoa_prf+0x116>
    1022:	d6 01       	movw	r26, r12
    1024:	9c 93       	st	X, r25
    1026:	f6 01       	movw	r30, r12
    1028:	31 96       	adiw	r30, 0x01	; 1
    102a:	6f 01       	movw	r12, r30
    102c:	c6 01       	movw	r24, r12
    102e:	03 96       	adiw	r24, 0x03	; 3
    1030:	e2 fe       	sbrs	r14, 2
    1032:	0b c0       	rjmp	.+22     	; 0x104a <dtoa_prf+0x134>
    1034:	39 e4       	ldi	r19, 0x49	; 73
    1036:	d6 01       	movw	r26, r12
    1038:	3c 93       	st	X, r19
    103a:	3e e4       	ldi	r19, 0x4E	; 78
    103c:	11 96       	adiw	r26, 0x01	; 1
    103e:	3c 93       	st	X, r19
    1040:	11 97       	sbiw	r26, 0x01	; 1
    1042:	36 e4       	ldi	r19, 0x46	; 70
    1044:	12 96       	adiw	r26, 0x02	; 2
    1046:	3c 93       	st	X, r19
    1048:	07 c0       	rjmp	.+14     	; 0x1058 <dtoa_prf+0x142>
    104a:	39 e6       	ldi	r19, 0x69	; 105
    104c:	f6 01       	movw	r30, r12
    104e:	30 83       	st	Z, r19
    1050:	3e e6       	ldi	r19, 0x6E	; 110
    1052:	31 83       	std	Z+1, r19	; 0x01
    1054:	36 e6       	ldi	r19, 0x66	; 102
    1056:	32 83       	std	Z+2, r19	; 0x02
    1058:	fc 01       	movw	r30, r24
    105a:	32 2f       	mov	r19, r18
    105c:	40 e2       	ldi	r20, 0x20	; 32
    105e:	33 23       	and	r19, r19
    1060:	19 f0       	breq	.+6      	; 0x1068 <dtoa_prf+0x152>
    1062:	41 93       	st	Z+, r20
    1064:	31 50       	subi	r19, 0x01	; 1
    1066:	fb cf       	rjmp	.-10     	; 0x105e <dtoa_prf+0x148>
    1068:	fc 01       	movw	r30, r24
    106a:	e2 0f       	add	r30, r18
    106c:	f1 1d       	adc	r31, r1
    106e:	10 82       	st	Z, r1
    1070:	8e ef       	ldi	r24, 0xFE	; 254
    1072:	9f ef       	ldi	r25, 0xFF	; 255
    1074:	a6 c0       	rjmp	.+332    	; 0x11c2 <dtoa_prf+0x2ac>
    1076:	21 e0       	ldi	r18, 0x01	; 1
    1078:	30 e0       	ldi	r19, 0x00	; 0
    107a:	91 11       	cpse	r25, r1
    107c:	02 c0       	rjmp	.+4      	; 0x1082 <dtoa_prf+0x16c>
    107e:	20 e0       	ldi	r18, 0x00	; 0
    1080:	30 e0       	ldi	r19, 0x00	; 0
    1082:	16 16       	cp	r1, r22
    1084:	17 06       	cpc	r1, r23
    1086:	1c f4       	brge	.+6      	; 0x108e <dtoa_prf+0x178>
    1088:	fb 01       	movw	r30, r22
    108a:	31 96       	adiw	r30, 0x01	; 1
    108c:	02 c0       	rjmp	.+4      	; 0x1092 <dtoa_prf+0x17c>
    108e:	e1 e0       	ldi	r30, 0x01	; 1
    1090:	f0 e0       	ldi	r31, 0x00	; 0
    1092:	2e 0f       	add	r18, r30
    1094:	3f 1f       	adc	r19, r31
    1096:	bb 20       	and	r11, r11
    1098:	21 f0       	breq	.+8      	; 0x10a2 <dtoa_prf+0x18c>
    109a:	eb 2d       	mov	r30, r11
    109c:	f0 e0       	ldi	r31, 0x00	; 0
    109e:	31 96       	adiw	r30, 0x01	; 1
    10a0:	02 c0       	rjmp	.+4      	; 0x10a6 <dtoa_prf+0x190>
    10a2:	e0 e0       	ldi	r30, 0x00	; 0
    10a4:	f0 e0       	ldi	r31, 0x00	; 0
    10a6:	2e 0f       	add	r18, r30
    10a8:	3f 1f       	adc	r19, r31
    10aa:	e1 2f       	mov	r30, r17
    10ac:	f0 e0       	ldi	r31, 0x00	; 0
    10ae:	2e 17       	cp	r18, r30
    10b0:	3f 07       	cpc	r19, r31
    10b2:	1c f4       	brge	.+6      	; 0x10ba <dtoa_prf+0x1a4>
    10b4:	12 1b       	sub	r17, r18
    10b6:	21 2f       	mov	r18, r17
    10b8:	01 c0       	rjmp	.+2      	; 0x10bc <dtoa_prf+0x1a6>
    10ba:	20 e0       	ldi	r18, 0x00	; 0
    10bc:	8e 2d       	mov	r24, r14
    10be:	88 71       	andi	r24, 0x18	; 24
    10c0:	59 f4       	brne	.+22     	; 0x10d8 <dtoa_prf+0x1c2>
    10c2:	f6 01       	movw	r30, r12
    10c4:	82 2f       	mov	r24, r18
    10c6:	30 e2       	ldi	r19, 0x20	; 32
    10c8:	88 23       	and	r24, r24
    10ca:	19 f0       	breq	.+6      	; 0x10d2 <dtoa_prf+0x1bc>
    10cc:	31 93       	st	Z+, r19
    10ce:	81 50       	subi	r24, 0x01	; 1
    10d0:	fb cf       	rjmp	.-10     	; 0x10c8 <dtoa_prf+0x1b2>
    10d2:	c2 0e       	add	r12, r18
    10d4:	d1 1c       	adc	r13, r1
    10d6:	20 e0       	ldi	r18, 0x00	; 0
    10d8:	99 23       	and	r25, r25
    10da:	29 f0       	breq	.+10     	; 0x10e6 <dtoa_prf+0x1d0>
    10dc:	d6 01       	movw	r26, r12
    10de:	9c 93       	st	X, r25
    10e0:	f6 01       	movw	r30, r12
    10e2:	31 96       	adiw	r30, 0x01	; 1
    10e4:	6f 01       	movw	r12, r30
    10e6:	51 11       	cpse	r21, r1
    10e8:	0b c0       	rjmp	.+22     	; 0x1100 <dtoa_prf+0x1ea>
    10ea:	f6 01       	movw	r30, r12
    10ec:	82 2f       	mov	r24, r18
    10ee:	90 e3       	ldi	r25, 0x30	; 48
    10f0:	88 23       	and	r24, r24
    10f2:	19 f0       	breq	.+6      	; 0x10fa <dtoa_prf+0x1e4>
    10f4:	91 93       	st	Z+, r25
    10f6:	81 50       	subi	r24, 0x01	; 1
    10f8:	fb cf       	rjmp	.-10     	; 0x10f0 <dtoa_prf+0x1da>
    10fa:	c2 0e       	add	r12, r18
    10fc:	d1 1c       	adc	r13, r1
    10fe:	20 e0       	ldi	r18, 0x00	; 0
    1100:	0f 2d       	mov	r16, r15
    1102:	06 0f       	add	r16, r22
    1104:	9a 81       	ldd	r25, Y+2	; 0x02
    1106:	34 2f       	mov	r19, r20
    1108:	30 71       	andi	r19, 0x10	; 16
    110a:	44 ff       	sbrs	r20, 4
    110c:	03 c0       	rjmp	.+6      	; 0x1114 <dtoa_prf+0x1fe>
    110e:	91 33       	cpi	r25, 0x31	; 49
    1110:	09 f4       	brne	.+2      	; 0x1114 <dtoa_prf+0x1fe>
    1112:	01 50       	subi	r16, 0x01	; 1
    1114:	10 16       	cp	r1, r16
    1116:	24 f4       	brge	.+8      	; 0x1120 <dtoa_prf+0x20a>
    1118:	09 30       	cpi	r16, 0x09	; 9
    111a:	18 f0       	brcs	.+6      	; 0x1122 <dtoa_prf+0x20c>
    111c:	08 e0       	ldi	r16, 0x08	; 8
    111e:	01 c0       	rjmp	.+2      	; 0x1122 <dtoa_prf+0x20c>
    1120:	01 e0       	ldi	r16, 0x01	; 1
    1122:	ab 01       	movw	r20, r22
    1124:	77 ff       	sbrs	r23, 7
    1126:	02 c0       	rjmp	.+4      	; 0x112c <dtoa_prf+0x216>
    1128:	40 e0       	ldi	r20, 0x00	; 0
    112a:	50 e0       	ldi	r21, 0x00	; 0
    112c:	fb 01       	movw	r30, r22
    112e:	e4 1b       	sub	r30, r20
    1130:	f5 0b       	sbc	r31, r21
    1132:	a1 e0       	ldi	r26, 0x01	; 1
    1134:	b0 e0       	ldi	r27, 0x00	; 0
    1136:	ac 0f       	add	r26, r28
    1138:	bd 1f       	adc	r27, r29
    113a:	ea 0f       	add	r30, r26
    113c:	fb 1f       	adc	r31, r27
    113e:	8e e2       	ldi	r24, 0x2E	; 46
    1140:	a8 2e       	mov	r10, r24
    1142:	4b 01       	movw	r8, r22
    1144:	80 1a       	sub	r8, r16
    1146:	91 08       	sbc	r9, r1
    1148:	0b 2d       	mov	r16, r11
    114a:	10 e0       	ldi	r17, 0x00	; 0
    114c:	11 95       	neg	r17
    114e:	01 95       	neg	r16
    1150:	11 09       	sbc	r17, r1
    1152:	4f 3f       	cpi	r20, 0xFF	; 255
    1154:	bf ef       	ldi	r27, 0xFF	; 255
    1156:	5b 07       	cpc	r21, r27
    1158:	21 f4       	brne	.+8      	; 0x1162 <dtoa_prf+0x24c>
    115a:	d6 01       	movw	r26, r12
    115c:	ac 92       	st	X, r10
    115e:	11 96       	adiw	r26, 0x01	; 1
    1160:	6d 01       	movw	r12, r26
    1162:	64 17       	cp	r22, r20
    1164:	75 07       	cpc	r23, r21
    1166:	2c f0       	brlt	.+10     	; 0x1172 <dtoa_prf+0x25c>
    1168:	84 16       	cp	r8, r20
    116a:	95 06       	cpc	r9, r21
    116c:	14 f4       	brge	.+4      	; 0x1172 <dtoa_prf+0x25c>
    116e:	81 81       	ldd	r24, Z+1	; 0x01
    1170:	01 c0       	rjmp	.+2      	; 0x1174 <dtoa_prf+0x25e>
    1172:	80 e3       	ldi	r24, 0x30	; 48
    1174:	41 50       	subi	r20, 0x01	; 1
    1176:	51 09       	sbc	r21, r1
    1178:	31 96       	adiw	r30, 0x01	; 1
    117a:	d6 01       	movw	r26, r12
    117c:	11 96       	adiw	r26, 0x01	; 1
    117e:	7d 01       	movw	r14, r26
    1180:	40 17       	cp	r20, r16
    1182:	51 07       	cpc	r21, r17
    1184:	24 f0       	brlt	.+8      	; 0x118e <dtoa_prf+0x278>
    1186:	d6 01       	movw	r26, r12
    1188:	8c 93       	st	X, r24
    118a:	67 01       	movw	r12, r14
    118c:	e2 cf       	rjmp	.-60     	; 0x1152 <dtoa_prf+0x23c>
    118e:	64 17       	cp	r22, r20
    1190:	75 07       	cpc	r23, r21
    1192:	39 f4       	brne	.+14     	; 0x11a2 <dtoa_prf+0x28c>
    1194:	96 33       	cpi	r25, 0x36	; 54
    1196:	20 f4       	brcc	.+8      	; 0x11a0 <dtoa_prf+0x28a>
    1198:	95 33       	cpi	r25, 0x35	; 53
    119a:	19 f4       	brne	.+6      	; 0x11a2 <dtoa_prf+0x28c>
    119c:	31 11       	cpse	r19, r1
    119e:	01 c0       	rjmp	.+2      	; 0x11a2 <dtoa_prf+0x28c>
    11a0:	81 e3       	ldi	r24, 0x31	; 49
    11a2:	f6 01       	movw	r30, r12
    11a4:	80 83       	st	Z, r24
    11a6:	f7 01       	movw	r30, r14
    11a8:	82 2f       	mov	r24, r18
    11aa:	90 e2       	ldi	r25, 0x20	; 32
    11ac:	88 23       	and	r24, r24
    11ae:	19 f0       	breq	.+6      	; 0x11b6 <dtoa_prf+0x2a0>
    11b0:	91 93       	st	Z+, r25
    11b2:	81 50       	subi	r24, 0x01	; 1
    11b4:	fb cf       	rjmp	.-10     	; 0x11ac <dtoa_prf+0x296>
    11b6:	f7 01       	movw	r30, r14
    11b8:	e2 0f       	add	r30, r18
    11ba:	f1 1d       	adc	r31, r1
    11bc:	10 82       	st	Z, r1
    11be:	80 e0       	ldi	r24, 0x00	; 0
    11c0:	90 e0       	ldi	r25, 0x00	; 0
    11c2:	29 96       	adiw	r28, 0x09	; 9
    11c4:	ec e0       	ldi	r30, 0x0C	; 12
    11c6:	0c 94 8f 0a 	jmp	0x151e	; 0x151e <__epilogue_restores__+0xc>

000011ca <__ftoa_engine>:
    11ca:	28 30       	cpi	r18, 0x08	; 8
    11cc:	08 f0       	brcs	.+2      	; 0x11d0 <__ftoa_engine+0x6>
    11ce:	27 e0       	ldi	r18, 0x07	; 7
    11d0:	33 27       	eor	r19, r19
    11d2:	da 01       	movw	r26, r20
    11d4:	99 0f       	add	r25, r25
    11d6:	31 1d       	adc	r19, r1
    11d8:	87 fd       	sbrc	r24, 7
    11da:	91 60       	ori	r25, 0x01	; 1
    11dc:	00 96       	adiw	r24, 0x00	; 0
    11de:	61 05       	cpc	r22, r1
    11e0:	71 05       	cpc	r23, r1
    11e2:	39 f4       	brne	.+14     	; 0x11f2 <__ftoa_engine+0x28>
    11e4:	32 60       	ori	r19, 0x02	; 2
    11e6:	2e 5f       	subi	r18, 0xFE	; 254
    11e8:	3d 93       	st	X+, r19
    11ea:	30 e3       	ldi	r19, 0x30	; 48
    11ec:	2a 95       	dec	r18
    11ee:	e1 f7       	brne	.-8      	; 0x11e8 <__ftoa_engine+0x1e>
    11f0:	08 95       	ret
    11f2:	9f 3f       	cpi	r25, 0xFF	; 255
    11f4:	30 f0       	brcs	.+12     	; 0x1202 <__ftoa_engine+0x38>
    11f6:	80 38       	cpi	r24, 0x80	; 128
    11f8:	71 05       	cpc	r23, r1
    11fa:	61 05       	cpc	r22, r1
    11fc:	09 f0       	breq	.+2      	; 0x1200 <__ftoa_engine+0x36>
    11fe:	3c 5f       	subi	r19, 0xFC	; 252
    1200:	3c 5f       	subi	r19, 0xFC	; 252
    1202:	3d 93       	st	X+, r19
    1204:	91 30       	cpi	r25, 0x01	; 1
    1206:	08 f0       	brcs	.+2      	; 0x120a <__ftoa_engine+0x40>
    1208:	80 68       	ori	r24, 0x80	; 128
    120a:	91 1d       	adc	r25, r1
    120c:	df 93       	push	r29
    120e:	cf 93       	push	r28
    1210:	1f 93       	push	r17
    1212:	0f 93       	push	r16
    1214:	ff 92       	push	r15
    1216:	ef 92       	push	r14
    1218:	19 2f       	mov	r17, r25
    121a:	98 7f       	andi	r25, 0xF8	; 248
    121c:	96 95       	lsr	r25
    121e:	e9 2f       	mov	r30, r25
    1220:	96 95       	lsr	r25
    1222:	96 95       	lsr	r25
    1224:	e9 0f       	add	r30, r25
    1226:	ff 27       	eor	r31, r31
    1228:	e0 5b       	subi	r30, 0xB0	; 176
    122a:	fe 4f       	sbci	r31, 0xFE	; 254
    122c:	99 27       	eor	r25, r25
    122e:	33 27       	eor	r19, r19
    1230:	ee 24       	eor	r14, r14
    1232:	ff 24       	eor	r15, r15
    1234:	a7 01       	movw	r20, r14
    1236:	e7 01       	movw	r28, r14
    1238:	05 90       	lpm	r0, Z+
    123a:	08 94       	sec
    123c:	07 94       	ror	r0
    123e:	28 f4       	brcc	.+10     	; 0x124a <__ftoa_engine+0x80>
    1240:	36 0f       	add	r19, r22
    1242:	e7 1e       	adc	r14, r23
    1244:	f8 1e       	adc	r15, r24
    1246:	49 1f       	adc	r20, r25
    1248:	51 1d       	adc	r21, r1
    124a:	66 0f       	add	r22, r22
    124c:	77 1f       	adc	r23, r23
    124e:	88 1f       	adc	r24, r24
    1250:	99 1f       	adc	r25, r25
    1252:	06 94       	lsr	r0
    1254:	a1 f7       	brne	.-24     	; 0x123e <__ftoa_engine+0x74>
    1256:	05 90       	lpm	r0, Z+
    1258:	07 94       	ror	r0
    125a:	28 f4       	brcc	.+10     	; 0x1266 <__ftoa_engine+0x9c>
    125c:	e7 0e       	add	r14, r23
    125e:	f8 1e       	adc	r15, r24
    1260:	49 1f       	adc	r20, r25
    1262:	56 1f       	adc	r21, r22
    1264:	c1 1d       	adc	r28, r1
    1266:	77 0f       	add	r23, r23
    1268:	88 1f       	adc	r24, r24
    126a:	99 1f       	adc	r25, r25
    126c:	66 1f       	adc	r22, r22
    126e:	06 94       	lsr	r0
    1270:	a1 f7       	brne	.-24     	; 0x125a <__ftoa_engine+0x90>
    1272:	05 90       	lpm	r0, Z+
    1274:	07 94       	ror	r0
    1276:	28 f4       	brcc	.+10     	; 0x1282 <__ftoa_engine+0xb8>
    1278:	f8 0e       	add	r15, r24
    127a:	49 1f       	adc	r20, r25
    127c:	56 1f       	adc	r21, r22
    127e:	c7 1f       	adc	r28, r23
    1280:	d1 1d       	adc	r29, r1
    1282:	88 0f       	add	r24, r24
    1284:	99 1f       	adc	r25, r25
    1286:	66 1f       	adc	r22, r22
    1288:	77 1f       	adc	r23, r23
    128a:	06 94       	lsr	r0
    128c:	a1 f7       	brne	.-24     	; 0x1276 <__ftoa_engine+0xac>
    128e:	05 90       	lpm	r0, Z+
    1290:	07 94       	ror	r0
    1292:	20 f4       	brcc	.+8      	; 0x129c <__ftoa_engine+0xd2>
    1294:	49 0f       	add	r20, r25
    1296:	56 1f       	adc	r21, r22
    1298:	c7 1f       	adc	r28, r23
    129a:	d8 1f       	adc	r29, r24
    129c:	99 0f       	add	r25, r25
    129e:	66 1f       	adc	r22, r22
    12a0:	77 1f       	adc	r23, r23
    12a2:	88 1f       	adc	r24, r24
    12a4:	06 94       	lsr	r0
    12a6:	a9 f7       	brne	.-22     	; 0x1292 <__ftoa_engine+0xc8>
    12a8:	84 91       	lpm	r24, Z
    12aa:	10 95       	com	r17
    12ac:	17 70       	andi	r17, 0x07	; 7
    12ae:	41 f0       	breq	.+16     	; 0x12c0 <__ftoa_engine+0xf6>
    12b0:	d6 95       	lsr	r29
    12b2:	c7 95       	ror	r28
    12b4:	57 95       	ror	r21
    12b6:	47 95       	ror	r20
    12b8:	f7 94       	ror	r15
    12ba:	e7 94       	ror	r14
    12bc:	1a 95       	dec	r17
    12be:	c1 f7       	brne	.-16     	; 0x12b0 <__ftoa_engine+0xe6>
    12c0:	e6 ef       	ldi	r30, 0xF6	; 246
    12c2:	f0 e0       	ldi	r31, 0x00	; 0
    12c4:	68 94       	set
    12c6:	15 90       	lpm	r1, Z+
    12c8:	15 91       	lpm	r17, Z+
    12ca:	35 91       	lpm	r19, Z+
    12cc:	65 91       	lpm	r22, Z+
    12ce:	95 91       	lpm	r25, Z+
    12d0:	05 90       	lpm	r0, Z+
    12d2:	7f e2       	ldi	r23, 0x2F	; 47
    12d4:	73 95       	inc	r23
    12d6:	e1 18       	sub	r14, r1
    12d8:	f1 0a       	sbc	r15, r17
    12da:	43 0b       	sbc	r20, r19
    12dc:	56 0b       	sbc	r21, r22
    12de:	c9 0b       	sbc	r28, r25
    12e0:	d0 09       	sbc	r29, r0
    12e2:	c0 f7       	brcc	.-16     	; 0x12d4 <__ftoa_engine+0x10a>
    12e4:	e1 0c       	add	r14, r1
    12e6:	f1 1e       	adc	r15, r17
    12e8:	43 1f       	adc	r20, r19
    12ea:	56 1f       	adc	r21, r22
    12ec:	c9 1f       	adc	r28, r25
    12ee:	d0 1d       	adc	r29, r0
    12f0:	7e f4       	brtc	.+30     	; 0x1310 <__ftoa_engine+0x146>
    12f2:	70 33       	cpi	r23, 0x30	; 48
    12f4:	11 f4       	brne	.+4      	; 0x12fa <__ftoa_engine+0x130>
    12f6:	8a 95       	dec	r24
    12f8:	e6 cf       	rjmp	.-52     	; 0x12c6 <__ftoa_engine+0xfc>
    12fa:	e8 94       	clt
    12fc:	01 50       	subi	r16, 0x01	; 1
    12fe:	30 f0       	brcs	.+12     	; 0x130c <__ftoa_engine+0x142>
    1300:	08 0f       	add	r16, r24
    1302:	0a f4       	brpl	.+2      	; 0x1306 <__ftoa_engine+0x13c>
    1304:	00 27       	eor	r16, r16
    1306:	02 17       	cp	r16, r18
    1308:	08 f4       	brcc	.+2      	; 0x130c <__ftoa_engine+0x142>
    130a:	20 2f       	mov	r18, r16
    130c:	23 95       	inc	r18
    130e:	02 2f       	mov	r16, r18
    1310:	7a 33       	cpi	r23, 0x3A	; 58
    1312:	28 f0       	brcs	.+10     	; 0x131e <__ftoa_engine+0x154>
    1314:	79 e3       	ldi	r23, 0x39	; 57
    1316:	7d 93       	st	X+, r23
    1318:	2a 95       	dec	r18
    131a:	e9 f7       	brne	.-6      	; 0x1316 <__ftoa_engine+0x14c>
    131c:	10 c0       	rjmp	.+32     	; 0x133e <__ftoa_engine+0x174>
    131e:	7d 93       	st	X+, r23
    1320:	2a 95       	dec	r18
    1322:	89 f6       	brne	.-94     	; 0x12c6 <__ftoa_engine+0xfc>
    1324:	06 94       	lsr	r0
    1326:	97 95       	ror	r25
    1328:	67 95       	ror	r22
    132a:	37 95       	ror	r19
    132c:	17 95       	ror	r17
    132e:	17 94       	ror	r1
    1330:	e1 18       	sub	r14, r1
    1332:	f1 0a       	sbc	r15, r17
    1334:	43 0b       	sbc	r20, r19
    1336:	56 0b       	sbc	r21, r22
    1338:	c9 0b       	sbc	r28, r25
    133a:	d0 09       	sbc	r29, r0
    133c:	98 f0       	brcs	.+38     	; 0x1364 <__ftoa_engine+0x19a>
    133e:	23 95       	inc	r18
    1340:	7e 91       	ld	r23, -X
    1342:	73 95       	inc	r23
    1344:	7a 33       	cpi	r23, 0x3A	; 58
    1346:	08 f0       	brcs	.+2      	; 0x134a <__ftoa_engine+0x180>
    1348:	70 e3       	ldi	r23, 0x30	; 48
    134a:	7c 93       	st	X, r23
    134c:	20 13       	cpse	r18, r16
    134e:	b8 f7       	brcc	.-18     	; 0x133e <__ftoa_engine+0x174>
    1350:	7e 91       	ld	r23, -X
    1352:	70 61       	ori	r23, 0x10	; 16
    1354:	7d 93       	st	X+, r23
    1356:	30 f0       	brcs	.+12     	; 0x1364 <__ftoa_engine+0x19a>
    1358:	83 95       	inc	r24
    135a:	71 e3       	ldi	r23, 0x31	; 49
    135c:	7d 93       	st	X+, r23
    135e:	70 e3       	ldi	r23, 0x30	; 48
    1360:	2a 95       	dec	r18
    1362:	e1 f7       	brne	.-8      	; 0x135c <__ftoa_engine+0x192>
    1364:	11 24       	eor	r1, r1
    1366:	ef 90       	pop	r14
    1368:	ff 90       	pop	r15
    136a:	0f 91       	pop	r16
    136c:	1f 91       	pop	r17
    136e:	cf 91       	pop	r28
    1370:	df 91       	pop	r29
    1372:	99 27       	eor	r25, r25
    1374:	87 fd       	sbrc	r24, 7
    1376:	90 95       	com	r25
    1378:	08 95       	ret

0000137a <strnlen_P>:
    137a:	fc 01       	movw	r30, r24
    137c:	05 90       	lpm	r0, Z+
    137e:	61 50       	subi	r22, 0x01	; 1
    1380:	70 40       	sbci	r23, 0x00	; 0
    1382:	01 10       	cpse	r0, r1
    1384:	d8 f7       	brcc	.-10     	; 0x137c <strnlen_P+0x2>
    1386:	80 95       	com	r24
    1388:	90 95       	com	r25
    138a:	8e 0f       	add	r24, r30
    138c:	9f 1f       	adc	r25, r31
    138e:	08 95       	ret

00001390 <strnlen>:
    1390:	fc 01       	movw	r30, r24
    1392:	61 50       	subi	r22, 0x01	; 1
    1394:	70 40       	sbci	r23, 0x00	; 0
    1396:	01 90       	ld	r0, Z+
    1398:	01 10       	cpse	r0, r1
    139a:	d8 f7       	brcc	.-10     	; 0x1392 <strnlen+0x2>
    139c:	80 95       	com	r24
    139e:	90 95       	com	r25
    13a0:	8e 0f       	add	r24, r30
    13a2:	9f 1f       	adc	r25, r31
    13a4:	08 95       	ret

000013a6 <fputc>:
    13a6:	0f 93       	push	r16
    13a8:	1f 93       	push	r17
    13aa:	cf 93       	push	r28
    13ac:	df 93       	push	r29
    13ae:	fb 01       	movw	r30, r22
    13b0:	23 81       	ldd	r18, Z+3	; 0x03
    13b2:	21 fd       	sbrc	r18, 1
    13b4:	03 c0       	rjmp	.+6      	; 0x13bc <fputc+0x16>
    13b6:	8f ef       	ldi	r24, 0xFF	; 255
    13b8:	9f ef       	ldi	r25, 0xFF	; 255
    13ba:	2c c0       	rjmp	.+88     	; 0x1414 <fputc+0x6e>
    13bc:	22 ff       	sbrs	r18, 2
    13be:	16 c0       	rjmp	.+44     	; 0x13ec <fputc+0x46>
    13c0:	46 81       	ldd	r20, Z+6	; 0x06
    13c2:	57 81       	ldd	r21, Z+7	; 0x07
    13c4:	24 81       	ldd	r18, Z+4	; 0x04
    13c6:	35 81       	ldd	r19, Z+5	; 0x05
    13c8:	42 17       	cp	r20, r18
    13ca:	53 07       	cpc	r21, r19
    13cc:	44 f4       	brge	.+16     	; 0x13de <fputc+0x38>
    13ce:	a0 81       	ld	r26, Z
    13d0:	b1 81       	ldd	r27, Z+1	; 0x01
    13d2:	9d 01       	movw	r18, r26
    13d4:	2f 5f       	subi	r18, 0xFF	; 255
    13d6:	3f 4f       	sbci	r19, 0xFF	; 255
    13d8:	31 83       	std	Z+1, r19	; 0x01
    13da:	20 83       	st	Z, r18
    13dc:	8c 93       	st	X, r24
    13de:	26 81       	ldd	r18, Z+6	; 0x06
    13e0:	37 81       	ldd	r19, Z+7	; 0x07
    13e2:	2f 5f       	subi	r18, 0xFF	; 255
    13e4:	3f 4f       	sbci	r19, 0xFF	; 255
    13e6:	37 83       	std	Z+7, r19	; 0x07
    13e8:	26 83       	std	Z+6, r18	; 0x06
    13ea:	14 c0       	rjmp	.+40     	; 0x1414 <fputc+0x6e>
    13ec:	8b 01       	movw	r16, r22
    13ee:	ec 01       	movw	r28, r24
    13f0:	fb 01       	movw	r30, r22
    13f2:	00 84       	ldd	r0, Z+8	; 0x08
    13f4:	f1 85       	ldd	r31, Z+9	; 0x09
    13f6:	e0 2d       	mov	r30, r0
    13f8:	09 95       	icall
    13fa:	89 2b       	or	r24, r25
    13fc:	e1 f6       	brne	.-72     	; 0x13b6 <fputc+0x10>
    13fe:	d8 01       	movw	r26, r16
    1400:	16 96       	adiw	r26, 0x06	; 6
    1402:	8d 91       	ld	r24, X+
    1404:	9c 91       	ld	r25, X
    1406:	17 97       	sbiw	r26, 0x07	; 7
    1408:	01 96       	adiw	r24, 0x01	; 1
    140a:	17 96       	adiw	r26, 0x07	; 7
    140c:	9c 93       	st	X, r25
    140e:	8e 93       	st	-X, r24
    1410:	16 97       	sbiw	r26, 0x06	; 6
    1412:	ce 01       	movw	r24, r28
    1414:	df 91       	pop	r29
    1416:	cf 91       	pop	r28
    1418:	1f 91       	pop	r17
    141a:	0f 91       	pop	r16
    141c:	08 95       	ret

0000141e <__ultoa_invert>:
    141e:	fa 01       	movw	r30, r20
    1420:	aa 27       	eor	r26, r26
    1422:	28 30       	cpi	r18, 0x08	; 8
    1424:	51 f1       	breq	.+84     	; 0x147a <__ultoa_invert+0x5c>
    1426:	20 31       	cpi	r18, 0x10	; 16
    1428:	81 f1       	breq	.+96     	; 0x148a <__ultoa_invert+0x6c>
    142a:	e8 94       	clt
    142c:	6f 93       	push	r22
    142e:	6e 7f       	andi	r22, 0xFE	; 254
    1430:	6e 5f       	subi	r22, 0xFE	; 254
    1432:	7f 4f       	sbci	r23, 0xFF	; 255
    1434:	8f 4f       	sbci	r24, 0xFF	; 255
    1436:	9f 4f       	sbci	r25, 0xFF	; 255
    1438:	af 4f       	sbci	r26, 0xFF	; 255
    143a:	b1 e0       	ldi	r27, 0x01	; 1
    143c:	3e d0       	rcall	.+124    	; 0x14ba <__ultoa_invert+0x9c>
    143e:	b4 e0       	ldi	r27, 0x04	; 4
    1440:	3c d0       	rcall	.+120    	; 0x14ba <__ultoa_invert+0x9c>
    1442:	67 0f       	add	r22, r23
    1444:	78 1f       	adc	r23, r24
    1446:	89 1f       	adc	r24, r25
    1448:	9a 1f       	adc	r25, r26
    144a:	a1 1d       	adc	r26, r1
    144c:	68 0f       	add	r22, r24
    144e:	79 1f       	adc	r23, r25
    1450:	8a 1f       	adc	r24, r26
    1452:	91 1d       	adc	r25, r1
    1454:	a1 1d       	adc	r26, r1
    1456:	6a 0f       	add	r22, r26
    1458:	71 1d       	adc	r23, r1
    145a:	81 1d       	adc	r24, r1
    145c:	91 1d       	adc	r25, r1
    145e:	a1 1d       	adc	r26, r1
    1460:	20 d0       	rcall	.+64     	; 0x14a2 <__ultoa_invert+0x84>
    1462:	09 f4       	brne	.+2      	; 0x1466 <__ultoa_invert+0x48>
    1464:	68 94       	set
    1466:	3f 91       	pop	r19
    1468:	2a e0       	ldi	r18, 0x0A	; 10
    146a:	26 9f       	mul	r18, r22
    146c:	11 24       	eor	r1, r1
    146e:	30 19       	sub	r19, r0
    1470:	30 5d       	subi	r19, 0xD0	; 208
    1472:	31 93       	st	Z+, r19
    1474:	de f6       	brtc	.-74     	; 0x142c <__ultoa_invert+0xe>
    1476:	cf 01       	movw	r24, r30
    1478:	08 95       	ret
    147a:	46 2f       	mov	r20, r22
    147c:	47 70       	andi	r20, 0x07	; 7
    147e:	40 5d       	subi	r20, 0xD0	; 208
    1480:	41 93       	st	Z+, r20
    1482:	b3 e0       	ldi	r27, 0x03	; 3
    1484:	0f d0       	rcall	.+30     	; 0x14a4 <__ultoa_invert+0x86>
    1486:	c9 f7       	brne	.-14     	; 0x147a <__ultoa_invert+0x5c>
    1488:	f6 cf       	rjmp	.-20     	; 0x1476 <__ultoa_invert+0x58>
    148a:	46 2f       	mov	r20, r22
    148c:	4f 70       	andi	r20, 0x0F	; 15
    148e:	40 5d       	subi	r20, 0xD0	; 208
    1490:	4a 33       	cpi	r20, 0x3A	; 58
    1492:	18 f0       	brcs	.+6      	; 0x149a <__ultoa_invert+0x7c>
    1494:	49 5d       	subi	r20, 0xD9	; 217
    1496:	31 fd       	sbrc	r19, 1
    1498:	40 52       	subi	r20, 0x20	; 32
    149a:	41 93       	st	Z+, r20
    149c:	02 d0       	rcall	.+4      	; 0x14a2 <__ultoa_invert+0x84>
    149e:	a9 f7       	brne	.-22     	; 0x148a <__ultoa_invert+0x6c>
    14a0:	ea cf       	rjmp	.-44     	; 0x1476 <__ultoa_invert+0x58>
    14a2:	b4 e0       	ldi	r27, 0x04	; 4
    14a4:	a6 95       	lsr	r26
    14a6:	97 95       	ror	r25
    14a8:	87 95       	ror	r24
    14aa:	77 95       	ror	r23
    14ac:	67 95       	ror	r22
    14ae:	ba 95       	dec	r27
    14b0:	c9 f7       	brne	.-14     	; 0x14a4 <__ultoa_invert+0x86>
    14b2:	00 97       	sbiw	r24, 0x00	; 0
    14b4:	61 05       	cpc	r22, r1
    14b6:	71 05       	cpc	r23, r1
    14b8:	08 95       	ret
    14ba:	9b 01       	movw	r18, r22
    14bc:	ac 01       	movw	r20, r24
    14be:	0a 2e       	mov	r0, r26
    14c0:	06 94       	lsr	r0
    14c2:	57 95       	ror	r21
    14c4:	47 95       	ror	r20
    14c6:	37 95       	ror	r19
    14c8:	27 95       	ror	r18
    14ca:	ba 95       	dec	r27
    14cc:	c9 f7       	brne	.-14     	; 0x14c0 <__ultoa_invert+0xa2>
    14ce:	62 0f       	add	r22, r18
    14d0:	73 1f       	adc	r23, r19
    14d2:	84 1f       	adc	r24, r20
    14d4:	95 1f       	adc	r25, r21
    14d6:	a0 1d       	adc	r26, r0
    14d8:	08 95       	ret

000014da <__prologue_saves__>:
    14da:	2f 92       	push	r2
    14dc:	3f 92       	push	r3
    14de:	4f 92       	push	r4
    14e0:	5f 92       	push	r5
    14e2:	6f 92       	push	r6
    14e4:	7f 92       	push	r7
    14e6:	8f 92       	push	r8
    14e8:	9f 92       	push	r9
    14ea:	af 92       	push	r10
    14ec:	bf 92       	push	r11
    14ee:	cf 92       	push	r12
    14f0:	df 92       	push	r13
    14f2:	ef 92       	push	r14
    14f4:	ff 92       	push	r15
    14f6:	0f 93       	push	r16
    14f8:	1f 93       	push	r17
    14fa:	cf 93       	push	r28
    14fc:	df 93       	push	r29
    14fe:	cd b7       	in	r28, 0x3d	; 61
    1500:	de b7       	in	r29, 0x3e	; 62
    1502:	ca 1b       	sub	r28, r26
    1504:	db 0b       	sbc	r29, r27
    1506:	0f b6       	in	r0, 0x3f	; 63
    1508:	f8 94       	cli
    150a:	de bf       	out	0x3e, r29	; 62
    150c:	0f be       	out	0x3f, r0	; 63
    150e:	cd bf       	out	0x3d, r28	; 61
    1510:	09 94       	ijmp

00001512 <__epilogue_restores__>:
    1512:	2a 88       	ldd	r2, Y+18	; 0x12
    1514:	39 88       	ldd	r3, Y+17	; 0x11
    1516:	48 88       	ldd	r4, Y+16	; 0x10
    1518:	5f 84       	ldd	r5, Y+15	; 0x0f
    151a:	6e 84       	ldd	r6, Y+14	; 0x0e
    151c:	7d 84       	ldd	r7, Y+13	; 0x0d
    151e:	8c 84       	ldd	r8, Y+12	; 0x0c
    1520:	9b 84       	ldd	r9, Y+11	; 0x0b
    1522:	aa 84       	ldd	r10, Y+10	; 0x0a
    1524:	b9 84       	ldd	r11, Y+9	; 0x09
    1526:	c8 84       	ldd	r12, Y+8	; 0x08
    1528:	df 80       	ldd	r13, Y+7	; 0x07
    152a:	ee 80       	ldd	r14, Y+6	; 0x06
    152c:	fd 80       	ldd	r15, Y+5	; 0x05
    152e:	0c 81       	ldd	r16, Y+4	; 0x04
    1530:	1b 81       	ldd	r17, Y+3	; 0x03
    1532:	aa 81       	ldd	r26, Y+2	; 0x02
    1534:	b9 81       	ldd	r27, Y+1	; 0x01
    1536:	ce 0f       	add	r28, r30
    1538:	d1 1d       	adc	r29, r1
    153a:	0f b6       	in	r0, 0x3f	; 63
    153c:	f8 94       	cli
    153e:	de bf       	out	0x3e, r29	; 62
    1540:	0f be       	out	0x3f, r0	; 63
    1542:	cd bf       	out	0x3d, r28	; 61
    1544:	ed 01       	movw	r28, r26
    1546:	08 95       	ret

00001548 <_exit>:
    1548:	f8 94       	cli

0000154a <__stop_program>:
    154a:	ff cf       	rjmp	.-2      	; 0x154a <__stop_program>
