
Project 2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000140  00800100  00001540  000015d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001540  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000049  00800240  00800240  00001714  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001714  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001770  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000060  00000000  00000000  000017b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c6f  00000000  00000000  00001810  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000724  00000000  00000000  0000247f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000532  00000000  00000000  00002ba3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000f0  00000000  00000000  000030d8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000460  00000000  00000000  000031c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000022b  00000000  00000000  00003628  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  00003853  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__ctors_end>
       4:	0c 94 15 01 	jmp	0x22a	; 0x22a <__bad_interrupt>
       8:	0c 94 15 01 	jmp	0x22a	; 0x22a <__bad_interrupt>
       c:	0c 94 15 01 	jmp	0x22a	; 0x22a <__bad_interrupt>
      10:	0c 94 15 01 	jmp	0x22a	; 0x22a <__bad_interrupt>
      14:	0c 94 15 01 	jmp	0x22a	; 0x22a <__bad_interrupt>
      18:	0c 94 15 01 	jmp	0x22a	; 0x22a <__bad_interrupt>
      1c:	0c 94 15 01 	jmp	0x22a	; 0x22a <__bad_interrupt>
      20:	0c 94 15 01 	jmp	0x22a	; 0x22a <__bad_interrupt>
      24:	0c 94 15 01 	jmp	0x22a	; 0x22a <__bad_interrupt>
      28:	0c 94 15 01 	jmp	0x22a	; 0x22a <__bad_interrupt>
      2c:	0c 94 15 01 	jmp	0x22a	; 0x22a <__bad_interrupt>
      30:	0c 94 15 01 	jmp	0x22a	; 0x22a <__bad_interrupt>
      34:	0c 94 15 01 	jmp	0x22a	; 0x22a <__bad_interrupt>
      38:	0c 94 15 01 	jmp	0x22a	; 0x22a <__bad_interrupt>
      3c:	0c 94 15 01 	jmp	0x22a	; 0x22a <__bad_interrupt>
      40:	0c 94 15 01 	jmp	0x22a	; 0x22a <__bad_interrupt>
      44:	0c 94 15 01 	jmp	0x22a	; 0x22a <__bad_interrupt>
      48:	0c 94 15 01 	jmp	0x22a	; 0x22a <__bad_interrupt>
      4c:	0c 94 15 01 	jmp	0x22a	; 0x22a <__bad_interrupt>
      50:	0c 94 b7 03 	jmp	0x76e	; 0x76e <__vector_20>
      54:	0c 94 d7 03 	jmp	0x7ae	; 0x7ae <__vector_21>
      58:	0c 94 15 01 	jmp	0x22a	; 0x22a <__bad_interrupt>
      5c:	0c 94 15 01 	jmp	0x22a	; 0x22a <__bad_interrupt>
      60:	0c 94 15 01 	jmp	0x22a	; 0x22a <__bad_interrupt>
      64:	0c 94 15 01 	jmp	0x22a	; 0x22a <__bad_interrupt>
      68:	b9 02       	muls	r27, r25
      6a:	b9 02       	muls	r27, r25
      6c:	b9 02       	muls	r27, r25
      6e:	b9 02       	muls	r27, r25
      70:	b9 02       	muls	r27, r25
      72:	b9 02       	muls	r27, r25
      74:	b9 02       	muls	r27, r25
      76:	b9 02       	muls	r27, r25
      78:	b9 02       	muls	r27, r25
      7a:	b9 02       	muls	r27, r25
      7c:	ce 02       	muls	r28, r30
      7e:	ce 02       	muls	r28, r30
      80:	ce 02       	muls	r28, r30
      82:	ce 02       	muls	r28, r30
      84:	ce 02       	muls	r28, r30
      86:	ce 02       	muls	r28, r30
      88:	ce 02       	muls	r28, r30
      8a:	3a 02       	muls	r19, r26
      8c:	ce 02       	muls	r28, r30
      8e:	8d 02       	muls	r24, r29
      90:	ce 02       	muls	r28, r30
      92:	92 02       	muls	r25, r18
      94:	ce 02       	muls	r28, r30
      96:	ce 02       	muls	r28, r30
      98:	ce 02       	muls	r28, r30
      9a:	ce 02       	muls	r28, r30
      9c:	ce 02       	muls	r28, r30
      9e:	ce 02       	muls	r28, r30
      a0:	1a 02       	muls	r17, r26
      a2:	bf 01       	movw	r22, r30
      a4:	c7 01       	movw	r24, r14
      a6:	ce 02       	muls	r28, r30
      a8:	cf 01       	movw	r24, r30
      aa:	ce 02       	muls	r28, r30
      ac:	ce 02       	muls	r28, r30
      ae:	a1 02       	muls	r26, r17
      b0:	d6 01       	movw	r26, r12
      b2:	ce 02       	muls	r28, r30
      b4:	56 02       	muls	r21, r22
      b6:	ce 02       	muls	r28, r30
      b8:	ce 02       	muls	r28, r30
      ba:	ce 02       	muls	r28, r30
      bc:	ce 02       	muls	r28, r30
      be:	ce 02       	muls	r28, r30
      c0:	ce 02       	muls	r28, r30
      c2:	ce 02       	muls	r28, r30
      c4:	ce 02       	muls	r28, r30
      c6:	ce 02       	muls	r28, r30
      c8:	ce 02       	muls	r28, r30
      ca:	3a 02       	muls	r19, r26
      cc:	ce 02       	muls	r28, r30
      ce:	8d 02       	muls	r24, r29
      d0:	ce 02       	muls	r28, r30
      d2:	92 02       	muls	r25, r18
      d4:	ce 02       	muls	r28, r30
      d6:	ce 02       	muls	r28, r30
      d8:	ce 02       	muls	r28, r30
      da:	ce 02       	muls	r28, r30
      dc:	ce 02       	muls	r28, r30
      de:	ce 02       	muls	r28, r30
      e0:	1a 02       	muls	r17, r26
      e2:	bf 01       	movw	r22, r30
      e4:	c7 01       	movw	r24, r14
      e6:	ce 02       	muls	r28, r30
      e8:	cf 01       	movw	r24, r30
      ea:	ce 02       	muls	r28, r30
      ec:	ce 02       	muls	r28, r30
      ee:	a1 02       	muls	r26, r17
      f0:	d6 01       	movw	r26, r12
      f2:	ce 02       	muls	r28, r30
      f4:	56 02       	muls	r21, r22

000000f6 <__trampolines_end>:
      f6:	00 40       	sbci	r16, 0x00	; 0
      f8:	7a 10       	cpse	r7, r10
      fa:	f3 5a       	subi	r31, 0xA3	; 163
      fc:	00 a0       	ldd	r0, Z+32	; 0x20
      fe:	72 4e       	sbci	r23, 0xE2	; 226
     100:	18 09       	sbc	r17, r8
     102:	00 10       	cpse	r0, r0
     104:	a5 d4       	rcall	.+2378   	; 0xa50 <__fp_pscA+0xa>
     106:	e8 00       	.word	0x00e8	; ????
     108:	00 e8       	ldi	r16, 0x80	; 128
     10a:	76 48       	sbci	r23, 0x86	; 134
     10c:	17 00       	.word	0x0017	; ????
     10e:	00 e4       	ldi	r16, 0x40	; 64
     110:	0b 54       	subi	r16, 0x4B	; 75
     112:	02 00       	.word	0x0002	; ????
     114:	00 ca       	rjmp	.-3072   	; 0xfffff516 <__eeprom_end+0xff7ef516>
     116:	9a 3b       	cpi	r25, 0xBA	; 186
     118:	00 00       	nop
     11a:	00 e1       	ldi	r16, 0x10	; 16
     11c:	f5 05       	cpc	r31, r5
     11e:	00 00       	nop
     120:	80 96       	adiw	r24, 0x20	; 32
     122:	98 00       	.word	0x0098	; ????
     124:	00 00       	nop
     126:	40 42       	sbci	r20, 0x20	; 32
     128:	0f 00       	.word	0x000f	; ????
     12a:	00 00       	nop
     12c:	a0 86       	std	Z+8, r10	; 0x08
     12e:	01 00       	.word	0x0001	; ????
     130:	00 00       	nop
     132:	10 27       	eor	r17, r16
     134:	00 00       	nop
     136:	00 00       	nop
     138:	e8 03       	fmulsu	r22, r16
     13a:	00 00       	nop
     13c:	00 00       	nop
     13e:	64 00       	.word	0x0064	; ????
     140:	00 00       	nop
     142:	00 00       	nop
     144:	0a 00       	.word	0x000a	; ????
     146:	00 00       	nop
     148:	00 00       	nop
     14a:	01 00       	.word	0x0001	; ????
     14c:	00 00       	nop
     14e:	00 00       	nop
     150:	2c 76       	andi	r18, 0x6C	; 108
     152:	d8 88       	ldd	r13, Y+16	; 0x10
     154:	dc 67       	ori	r29, 0x7C	; 124
     156:	4f 08       	sbc	r4, r15
     158:	23 df       	rcall	.-442    	; 0xffffffa0 <__eeprom_end+0xff7effa0>
     15a:	c1 df       	rcall	.-126    	; 0xde <__SREG__+0x9f>
     15c:	ae 59       	subi	r26, 0x9E	; 158
     15e:	e1 b1       	in	r30, 0x01	; 1
     160:	b7 96       	adiw	r30, 0x27	; 39
     162:	e5 e3       	ldi	r30, 0x35	; 53
     164:	e4 53       	subi	r30, 0x34	; 52
     166:	c6 3a       	cpi	r28, 0xA6	; 166
     168:	e6 51       	subi	r30, 0x16	; 22
     16a:	99 76       	andi	r25, 0x69	; 105
     16c:	96 e8       	ldi	r25, 0x86	; 134
     16e:	e6 c2       	rjmp	.+1484   	; 0x73c <__LOCK_REGION_LENGTH__+0x33c>
     170:	84 26       	eor	r8, r20
     172:	eb 89       	ldd	r30, Y+19	; 0x13
     174:	8c 9b       	sbis	0x11, 4	; 17
     176:	62 ed       	ldi	r22, 0xD2	; 210
     178:	40 7c       	andi	r20, 0xC0	; 192
     17a:	6f fc       	.word	0xfc6f	; ????
     17c:	ef bc       	out	0x2f, r14	; 47
     17e:	9c 9f       	mul	r25, r28
     180:	40 f2       	brcs	.-112    	; 0x112 <__trampolines_end+0x1c>
     182:	ba a5       	ldd	r27, Y+42	; 0x2a
     184:	6f a5       	ldd	r22, Y+47	; 0x2f
     186:	f4 90       	lpm	r15, Z
     188:	05 5a       	subi	r16, 0xA5	; 165
     18a:	2a f7       	brpl	.-54     	; 0x156 <__trampolines_end+0x60>
     18c:	5c 93       	st	X, r21
     18e:	6b 6c       	ori	r22, 0xCB	; 203
     190:	f9 67       	ori	r31, 0x79	; 121
     192:	6d c1       	rjmp	.+730    	; 0x46e <__LOCK_REGION_LENGTH__+0x6e>
     194:	1b fc       	.word	0xfc1b	; ????
     196:	e0 e4       	ldi	r30, 0x40	; 64
     198:	0d 47       	sbci	r16, 0x7D	; 125
     19a:	fe f5       	brtc	.+126    	; 0x21a <.do_clear_bss_loop>
     19c:	20 e6       	ldi	r18, 0x60	; 96
     19e:	b5 00       	.word	0x00b5	; ????
     1a0:	d0 ed       	ldi	r29, 0xD0	; 208
     1a2:	90 2e       	mov	r9, r16
     1a4:	03 00       	.word	0x0003	; ????
     1a6:	94 35       	cpi	r25, 0x54	; 84
     1a8:	77 05       	cpc	r23, r7
     1aa:	00 80       	ld	r0, Z
     1ac:	84 1e       	adc	r8, r20
     1ae:	08 00       	.word	0x0008	; ????
     1b0:	00 20       	and	r0, r0
     1b2:	4e 0a       	sbc	r4, r30
     1b4:	00 00       	nop
     1b6:	00 c8       	rjmp	.-4096   	; 0xfffff1b8 <__eeprom_end+0xff7ef1b8>
     1b8:	0c 33       	cpi	r16, 0x3C	; 60
     1ba:	33 33       	cpi	r19, 0x33	; 51
     1bc:	33 0f       	add	r19, r19
     1be:	98 6e       	ori	r25, 0xE8	; 232
     1c0:	12 83       	std	Z+2, r17	; 0x02
     1c2:	11 41       	sbci	r17, 0x11	; 17
     1c4:	ef 8d       	ldd	r30, Y+31	; 0x1f
     1c6:	21 14       	cp	r2, r1
     1c8:	89 3b       	cpi	r24, 0xB9	; 185
     1ca:	e6 55       	subi	r30, 0x56	; 86
     1cc:	16 cf       	rjmp	.-468    	; 0xfffffffa <__eeprom_end+0xff7efffa>
     1ce:	fe e6       	ldi	r31, 0x6E	; 110
     1d0:	db 18       	sub	r13, r11
     1d2:	d1 84       	ldd	r13, Z+9	; 0x09
     1d4:	4b 38       	cpi	r20, 0x8B	; 139
     1d6:	1b f7       	brvc	.-58     	; 0x19e <__trampolines_end+0xa8>
     1d8:	7c 1d       	adc	r23, r12
     1da:	90 1d       	adc	r25, r0
     1dc:	a4 bb       	out	0x14, r26	; 20
     1de:	e4 24       	eor	r14, r4
     1e0:	20 32       	cpi	r18, 0x20	; 32
     1e2:	84 72       	andi	r24, 0x24	; 36
     1e4:	5e 22       	and	r5, r30
     1e6:	81 00       	.word	0x0081	; ????
     1e8:	c9 f1       	breq	.+114    	; 0x25c <init_USART+0x12>
     1ea:	24 ec       	ldi	r18, 0xC4	; 196
     1ec:	a1 e5       	ldi	r26, 0x51	; 81
     1ee:	3d 27       	eor	r19, r29

000001f0 <__ctors_end>:
     1f0:	11 24       	eor	r1, r1
     1f2:	1f be       	out	0x3f, r1	; 63
     1f4:	cf ef       	ldi	r28, 0xFF	; 255
     1f6:	d8 e0       	ldi	r29, 0x08	; 8
     1f8:	de bf       	out	0x3e, r29	; 62
     1fa:	cd bf       	out	0x3d, r28	; 61

000001fc <__do_copy_data>:
     1fc:	12 e0       	ldi	r17, 0x02	; 2
     1fe:	a0 e0       	ldi	r26, 0x00	; 0
     200:	b1 e0       	ldi	r27, 0x01	; 1
     202:	e0 e4       	ldi	r30, 0x40	; 64
     204:	f5 e1       	ldi	r31, 0x15	; 21
     206:	02 c0       	rjmp	.+4      	; 0x20c <__do_copy_data+0x10>
     208:	05 90       	lpm	r0, Z+
     20a:	0d 92       	st	X+, r0
     20c:	a0 34       	cpi	r26, 0x40	; 64
     20e:	b1 07       	cpc	r27, r17
     210:	d9 f7       	brne	.-10     	; 0x208 <__do_copy_data+0xc>

00000212 <__do_clear_bss>:
     212:	22 e0       	ldi	r18, 0x02	; 2
     214:	a0 e4       	ldi	r26, 0x40	; 64
     216:	b2 e0       	ldi	r27, 0x02	; 2
     218:	01 c0       	rjmp	.+2      	; 0x21c <.do_clear_bss_start>

0000021a <.do_clear_bss_loop>:
     21a:	1d 92       	st	X+, r1

0000021c <.do_clear_bss_start>:
     21c:	a9 38       	cpi	r26, 0x89	; 137
     21e:	b2 07       	cpc	r27, r18
     220:	e1 f7       	brne	.-8      	; 0x21a <.do_clear_bss_loop>
     222:	0e 94 64 01 	call	0x2c8	; 0x2c8 <main>
     226:	0c 94 9e 0a 	jmp	0x153c	; 0x153c <_exit>

0000022a <__bad_interrupt>:
     22a:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000022e <init_adc>:
	
}

/* Initializing ADc registers */
void init_adc() {
	ADMUX = (1<<6)|(1<<1); //sets voltage ref to Vcc and starts ADC2
     22e:	82 e4       	ldi	r24, 0x42	; 66
     230:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
	ADCSRA  = (1<<7)|(1<<6)|(1<<5)|(1<<3)|(7<<0); //enable adc, starts conversion, enable interrupt, sets prescalar 128
     234:	8f ee       	ldi	r24, 0xEF	; 239
     236:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__DATA_REGION_ORIGIN__+0x1a>
	ADCSRB = (1<<2);// sets timer0 overflow 
     23a:	84 e0       	ldi	r24, 0x04	; 4
     23c:	80 93 7b 00 	sts	0x007B, r24	; 0x80007b <__DATA_REGION_ORIGIN__+0x1b>
     240:	08 95       	ret

00000242 <init_ports>:
}

/* Initializing Ports */
void init_ports() {
	
	DDRB = (1<<3);		// Initialize turn bit 3 to output
     242:	88 e0       	ldi	r24, 0x08	; 8
     244:	84 b9       	out	0x04, r24	; 4
	PORTB = 0;		// Initialize to all off	
     246:	15 b8       	out	0x05, r1	; 5
     248:	08 95       	ret

0000024a <init_USART>:
}

/* Initializing USART registers */
void init_USART() {
	UCSR0B	= (1<<RXEN0) | (1<<TXEN0) | (1<<TXCIE0) | (0<<UCSZ02);  //enable receiver, transmitter, TX Complete and transmit interrupt and setting data to 8 bits
     24a:	88 e5       	ldi	r24, 0x58	; 88
     24c:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
	UBRR0 = 16;  //baud rate = 90909
     250:	80 e1       	ldi	r24, 0x10	; 16
     252:	90 e0       	ldi	r25, 0x00	; 0
     254:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
     258:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
     25c:	08 95       	ret

0000025e <init_timer0>:
}

/* Initializing Timer0 registers */
void init_timer0() {
	
	TCCR0A = 0;
     25e:	14 bc       	out	0x24, r1	; 36
	TIMSK0 = 0;
     260:	10 92 6e 00 	sts	0x006E, r1	; 0x80006e <__DATA_REGION_ORIGIN__+0xe>
	TCCR0B = (5<<0); // prescalar 1024
     264:	85 e0       	ldi	r24, 0x05	; 5
     266:	85 bd       	out	0x25, r24	; 37
	TCNT0 = 6; // TCNT0 set to 6 so that will cause timer overflow after 16 ms
     268:	86 e0       	ldi	r24, 0x06	; 6
     26a:	86 bd       	out	0x26, r24	; 38
     26c:	08 95       	ret

0000026e <init_timer2>:
}

/* Initializing Timer2 registers */
void init_timer2() {
	
	TCCR2A = (1<<7)|(1<<0); // Clear OC2A on Compare Match when Upcounting , Phase Correct PWM Mode
     26e:	81 e8       	ldi	r24, 0x81	; 129
     270:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__DATA_REGION_ORIGIN__+0x50>
	TCCR2B = (6<<0); // Phase Correct PWM Mode, prescalar 256
     274:	86 e0       	ldi	r24, 0x06	; 6
     276:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__DATA_REGION_ORIGIN__+0x51>
	OCR2A = 0; // turn off led
     27a:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__DATA_REGION_ORIGIN__+0x53>
     27e:	08 95       	ret

00000280 <sendmsg>:

/* sendmsg function*/
void sendmsg (char *s)
{
	qcntr = 0;    /*preset indices*/
	sndcntr = 1;  /*set to one because first character already sent*/
     280:	21 e0       	ldi	r18, 0x01	; 1
     282:	20 93 42 02 	sts	0x0242, r18	; 0x800242 <sndcntr>
	
	queue[qcntr++] = 0x0d;   /*put CRLF into the queue first*/
     286:	e8 e4       	ldi	r30, 0x48	; 72
     288:	f2 e0       	ldi	r31, 0x02	; 2
     28a:	2d e0       	ldi	r18, 0x0D	; 13
     28c:	20 83       	st	Z, r18
	queue[qcntr++] = 0x0a;
     28e:	22 e0       	ldi	r18, 0x02	; 2
     290:	20 93 43 02 	sts	0x0243, r18	; 0x800243 <qcntr>
     294:	2a e0       	ldi	r18, 0x0A	; 10
     296:	21 83       	std	Z+1, r18	; 0x01
	while (*s)
     298:	fc 01       	movw	r30, r24
     29a:	20 81       	ld	r18, Z
     29c:	22 23       	and	r18, r18
     29e:	79 f0       	breq	.+30     	; 0x2be <sendmsg+0x3e>
     2a0:	dc 01       	movw	r26, r24
	queue[qcntr++] = *s++;   /*put characters into queue*/
     2a2:	e0 91 43 02 	lds	r30, 0x0243	; 0x800243 <qcntr>
     2a6:	81 e0       	ldi	r24, 0x01	; 1
     2a8:	8e 0f       	add	r24, r30
     2aa:	80 93 43 02 	sts	0x0243, r24	; 0x800243 <qcntr>
     2ae:	8d 91       	ld	r24, X+
     2b0:	f0 e0       	ldi	r31, 0x00	; 0
     2b2:	e8 5b       	subi	r30, 0xB8	; 184
     2b4:	fd 4f       	sbci	r31, 0xFD	; 253
     2b6:	80 83       	st	Z, r24
	qcntr = 0;    /*preset indices*/
	sndcntr = 1;  /*set to one because first character already sent*/
	
	queue[qcntr++] = 0x0d;   /*put CRLF into the queue first*/
	queue[qcntr++] = 0x0a;
	while (*s)
     2b8:	8c 91       	ld	r24, X
     2ba:	81 11       	cpse	r24, r1
     2bc:	f2 cf       	rjmp	.-28     	; 0x2a2 <sendmsg+0x22>
	queue[qcntr++] = *s++;   /*put characters into queue*/
	
	UDR0 = queue[0];  /*send first character to start process*/
     2be:	80 91 48 02 	lds	r24, 0x0248	; 0x800248 <queue>
     2c2:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
     2c6:	08 95       	ret

000002c8 <main>:
unsigned int enContDisplay = 0; //enable continuous display


/* Main */
int main(void)
{
     2c8:	cf 93       	push	r28
     2ca:	df 93       	push	r29
     2cc:	cd b7       	in	r28, 0x3d	; 61
     2ce:	de b7       	in	r29, 0x3e	; 62
     2d0:	e8 97       	sbiw	r28, 0x38	; 56
     2d2:	0f b6       	in	r0, 0x3f	; 63
     2d4:	f8 94       	cli
     2d6:	de bf       	out	0x3e, r29	; 62
     2d8:	0f be       	out	0x3f, r0	; 63
     2da:	cd bf       	out	0x3d, r28	; 61
	char str_adc_mV[9]; // string written to user for adc in mV

	int Brightness; // variable that user will enter to set brightness of LED
	
	/* Calling Initialized Registers */
	init_ports(); // initializes ports
     2dc:	0e 94 21 01 	call	0x242	; 0x242 <init_ports>
	init_USART(); // initializes USART
     2e0:	0e 94 25 01 	call	0x24a	; 0x24a <init_USART>
	init_adc(); // initializes adc
     2e4:	0e 94 17 01 	call	0x22e	; 0x22e <init_adc>
	init_timer0(); // initializes timer0
     2e8:	0e 94 2f 01 	call	0x25e	; 0x25e <init_timer0>
	//init_timer1(); // initializes timer1
	init_timer2(); // initializes timer2
     2ec:	0e 94 37 01 	call	0x26e	; 0x26e <init_timer2>

	sei(); /*global interrupt enable */
     2f0:	78 94       	sei

	while (1)
	{	
		if (UCSR0A & (1<<RXC0)) /*check for character received*/
     2f2:	0f 2e       	mov	r0, r31
     2f4:	f0 ec       	ldi	r31, 0xC0	; 192
     2f6:	ef 2e       	mov	r14, r31
     2f8:	f1 2c       	mov	r15, r1
     2fa:	f0 2d       	mov	r31, r0
		{
			ch = UDR0;    /*get character sent from PC*/
     2fc:	0f 2e       	mov	r0, r31
     2fe:	f6 ec       	ldi	r31, 0xC6	; 198
     300:	4f 2e       	mov	r4, r31
     302:	51 2c       	mov	r5, r1
     304:	f0 2d       	mov	r31, r0
				break;
				
				/* Report OCR2A Value */
				case 'S':
				case 's':
					sprintf(data, "OCR2A = %d", OCR2A); // Report OCR2A value
     306:	ce 01       	movw	r24, r28
     308:	01 96       	adiw	r24, 0x01	; 1
     30a:	3c 01       	movw	r6, r24
				
				/* Report ADC Value in mV to user */
				case 'V':
				case 'v':
					adc_mV = (adc_reading/divider); // Calculates ADC in mV
					dtostrf(adc_mV,8,2,str_adc_mV);  // Changes value from double to string
     30c:	fe 01       	movw	r30, r28
     30e:	b6 96       	adiw	r30, 0x26	; 38
     310:	f8 ab       	std	Y+48, r31	; 0x30
     312:	ef a7       	std	Y+47, r30	; 0x2f
				/* Report Temperature to user */
				case 'T':
				case 't':
					if (input == Temp) {
						temp = (adc_reading*500)/divider; 
						dtostrf(temp,6,2,str_temp); // Changes value from double to string
     314:	4e 96       	adiw	r24, 0x1e	; 30
     316:	9a ab       	std	Y+50, r25	; 0x32
     318:	89 ab       	std	Y+49, r24	; 0x31
				
				/* Report ADC Value in mV to user */
				case 'V':
				case 'v':
					adc_mV = (adc_reading/divider); // Calculates ADC in mV
					dtostrf(adc_mV,8,2,str_adc_mV);  // Changes value from double to string
     31a:	9f a5       	ldd	r25, Y+47	; 0x2f
     31c:	9d ab       	std	Y+53, r25	; 0x35
     31e:	e8 a9       	ldd	r30, Y+48	; 0x30
     320:	ee ab       	std	Y+54, r30	; 0x36
				/* Report Temperature to user */
				case 'T':
				case 't':
					if (input == Temp) {
						temp = (adc_reading*500)/divider; 
						dtostrf(temp,6,2,str_temp); // Changes value from double to string
     322:	f9 a9       	ldd	r31, Y+49	; 0x31
     324:	ff ab       	std	Y+55, r31	; 0x37
     326:	2a a9       	ldd	r18, Y+50	; 0x32
     328:	28 af       	std	Y+56, r18	; 0x38
     32a:	6b aa       	std	Y+51, r6	; 0x33
     32c:	7c aa       	std	Y+52, r7	; 0x34
				break;
				
				/* Report Values Continuously */
				case 'C':
				case 'c':
					enContDisplay = 1; //enable continuous adc display
     32e:	88 24       	eor	r8, r8
     330:	83 94       	inc	r8
     332:	91 2c       	mov	r9, r1
				/* Report ADC Value in mV to user */
				case 'V':
				case 'v':
					adc_mV = (adc_reading/divider); // Calculates ADC in mV
					dtostrf(adc_mV,8,2,str_adc_mV);  // Changes value from double to string
					sprintf(data, "ADC value = %s mV",str_adc_mV); //Report ADC value in mV
     334:	0f 2e       	mov	r0, r31
     336:	f2 e2       	ldi	r31, 0x22	; 34
     338:	af 2e       	mov	r10, r31
     33a:	f2 e0       	ldi	r31, 0x02	; 2
     33c:	bf 2e       	mov	r11, r31
     33e:	f0 2d       	mov	r31, r0
				break;
				
				/* Report ADC Value to user */
				case 'A':
				case 'a':
					sprintf(data, "ADC value = %lu", adc_reading); //Report ADC value
     340:	0f 2e       	mov	r0, r31
     342:	f2 e1       	ldi	r31, 0x12	; 18
     344:	cf 2e       	mov	r12, r31
     346:	f2 e0       	ldi	r31, 0x02	; 2
     348:	df 2e       	mov	r13, r31
     34a:	f0 2d       	mov	r31, r0
				case 'T':
				case 't':
					if (input == Temp) {
						temp = (adc_reading*500)/divider; 
						dtostrf(temp,6,2,str_temp); // Changes value from double to string
						sprintf(data,"LM35 Temperature = %s deg C",str_temp); //Report Temperature value
     34c:	0f 2e       	mov	r0, r31
     34e:	f6 ef       	ldi	r31, 0xF6	; 246
     350:	2f 2e       	mov	r2, r31
     352:	f1 e0       	ldi	r31, 0x01	; 1
     354:	3f 2e       	mov	r3, r31
     356:	f0 2d       	mov	r31, r0

	sei(); /*global interrupt enable */

	while (1)
	{	
		if (UCSR0A & (1<<RXC0)) /*check for character received*/
     358:	f7 01       	movw	r30, r14
     35a:	80 81       	ld	r24, Z
     35c:	88 23       	and	r24, r24
     35e:	0c f0       	brlt	.+2      	; 0x362 <main+0x9a>
     360:	21 c1       	rjmp	.+578    	; 0x5a4 <__LOCK_REGION_LENGTH__+0x1a4>
		{
			ch = UDR0;    /*get character sent from PC*/
     362:	f2 01       	movw	r30, r4
     364:	60 81       	ld	r22, Z
			switch (ch) { //character input
     366:	86 2f       	mov	r24, r22
     368:	90 e0       	ldi	r25, 0x00	; 0
     36a:	fc 01       	movw	r30, r24
     36c:	f0 97       	sbiw	r30, 0x30	; 48
     36e:	e7 34       	cpi	r30, 0x47	; 71
     370:	f1 05       	cpc	r31, r1
     372:	08 f0       	brcs	.+2      	; 0x376 <main+0xae>
     374:	13 c1       	rjmp	.+550    	; 0x59c <__LOCK_REGION_LENGTH__+0x19c>
     376:	ec 5c       	subi	r30, 0xCC	; 204
     378:	ff 4f       	sbci	r31, 0xFF	; 255
     37a:	0c 94 42 05 	jmp	0xa84	; 0xa84 <__tablejump2__>
				
				/* Sets ADC to ADC2 */
				case 'M':
				case 'm':
					input = Temp;
     37e:	82 e0       	ldi	r24, 0x02	; 2
     380:	80 93 7a 02 	sts	0x027A, r24	; 0x80027a <input>
					sendmsg(msg2);
     384:	82 ec       	ldi	r24, 0xC2	; 194
     386:	91 e0       	ldi	r25, 0x01	; 1
     388:	0e 94 40 01 	call	0x280	; 0x280 <sendmsg>
				break;
     38c:	0b c1       	rjmp	.+534    	; 0x5a4 <__LOCK_REGION_LENGTH__+0x1a4>
				
				/* Sets ADC to ADC1 */
				case 'N':
				case 'n':
					input = LDR;
     38e:	f1 e0       	ldi	r31, 0x01	; 1
     390:	f0 93 7a 02 	sts	0x027A, r31	; 0x80027a <input>
					sendmsg(msg3);
     394:	82 eb       	ldi	r24, 0xB2	; 178
     396:	91 e0       	ldi	r25, 0x01	; 1
     398:	0e 94 40 01 	call	0x280	; 0x280 <sendmsg>
				break;
     39c:	03 c1       	rjmp	.+518    	; 0x5a4 <__LOCK_REGION_LENGTH__+0x1a4>
				
				/* Sets ADC to ADC0 */
				case 'P':
				case 'p':
					input = Volt;
     39e:	10 92 7a 02 	sts	0x027A, r1	; 0x80027a <input>
					sendmsg(msg4);
     3a2:	88 e9       	ldi	r24, 0x98	; 152
     3a4:	91 e0       	ldi	r25, 0x01	; 1
     3a6:	0e 94 40 01 	call	0x280	; 0x280 <sendmsg>
				break;
     3aa:	fc c0       	rjmp	.+504    	; 0x5a4 <__LOCK_REGION_LENGTH__+0x1a4>
				
				/* Report Temperature to user */
				case 'T':
				case 't':
					if (input == Temp) {
     3ac:	80 91 7a 02 	lds	r24, 0x027A	; 0x80027a <input>
     3b0:	82 30       	cpi	r24, 0x02	; 2
     3b2:	d9 f5       	brne	.+118    	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
						temp = (adc_reading*500)/divider; 
     3b4:	20 91 7b 02 	lds	r18, 0x027B	; 0x80027b <adc_reading>
     3b8:	30 91 7c 02 	lds	r19, 0x027C	; 0x80027c <adc_reading+0x1>
     3bc:	40 91 7d 02 	lds	r20, 0x027D	; 0x80027d <adc_reading+0x2>
     3c0:	50 91 7e 02 	lds	r21, 0x027E	; 0x80027e <adc_reading+0x3>
     3c4:	a4 ef       	ldi	r26, 0xF4	; 244
     3c6:	b1 e0       	ldi	r27, 0x01	; 1
     3c8:	0e 94 48 05 	call	0xa90	; 0xa90 <__muluhisi3>
     3cc:	0e 94 47 04 	call	0x88e	; 0x88e <__floatunsisf>
     3d0:	20 e0       	ldi	r18, 0x00	; 0
     3d2:	30 e0       	ldi	r19, 0x00	; 0
     3d4:	40 e8       	ldi	r20, 0x80	; 128
     3d6:	5a e3       	ldi	r21, 0x3A	; 58
     3d8:	0e 94 ad 04 	call	0x95a	; 0x95a <__mulsf3>
     3dc:	0e 94 18 04 	call	0x830	; 0x830 <__fixunssfsi>
     3e0:	60 93 7f 02 	sts	0x027F, r22	; 0x80027f <temp>
     3e4:	70 93 80 02 	sts	0x0280, r23	; 0x800280 <temp+0x1>
     3e8:	80 93 81 02 	sts	0x0281, r24	; 0x800281 <temp+0x2>
     3ec:	90 93 82 02 	sts	0x0282, r25	; 0x800282 <temp+0x3>
						dtostrf(temp,6,2,str_temp); // Changes value from double to string
     3f0:	0e 94 47 04 	call	0x88e	; 0x88e <__floatunsisf>
     3f4:	0f a9       	ldd	r16, Y+55	; 0x37
     3f6:	18 ad       	ldd	r17, Y+56	; 0x38
     3f8:	22 e0       	ldi	r18, 0x02	; 2
     3fa:	46 e0       	ldi	r20, 0x06	; 6
     3fc:	0e 94 62 05 	call	0xac4	; 0xac4 <dtostrf>
						sprintf(data,"LM35 Temperature = %s deg C",str_temp); //Report Temperature value
     400:	2a a9       	ldd	r18, Y+50	; 0x32
     402:	2f 93       	push	r18
     404:	89 a9       	ldd	r24, Y+49	; 0x31
     406:	8f 93       	push	r24
     408:	3f 92       	push	r3
     40a:	2f 92       	push	r2
     40c:	7f 92       	push	r7
     40e:	6f 92       	push	r6
     410:	0e 94 82 05 	call	0xb04	; 0xb04 <sprintf>
						sendmsg(data);
     414:	8b a9       	ldd	r24, Y+51	; 0x33
     416:	9c a9       	ldd	r25, Y+52	; 0x34
     418:	0e 94 40 01 	call	0x280	; 0x280 <sendmsg>
     41c:	0f 90       	pop	r0
     41e:	0f 90       	pop	r0
     420:	0f 90       	pop	r0
     422:	0f 90       	pop	r0
     424:	0f 90       	pop	r0
     426:	0f 90       	pop	r0
     428:	bd c0       	rjmp	.+378    	; 0x5a4 <__LOCK_REGION_LENGTH__+0x1a4>
					} else {
						//Give warning
						sendmsg(msg5);
     42a:	86 e6       	ldi	r24, 0x66	; 102
     42c:	91 e0       	ldi	r25, 0x01	; 1
     42e:	0e 94 40 01 	call	0x280	; 0x280 <sendmsg>
     432:	b8 c0       	rjmp	.+368    	; 0x5a4 <__LOCK_REGION_LENGTH__+0x1a4>
				break;
				
				/* Report Bright/Dark to user */
				case 'L':
				case 'l':
					if (input == LDR) {
     434:	80 91 7a 02 	lds	r24, 0x027A	; 0x80027a <input>
     438:	81 30       	cpi	r24, 0x01	; 1
     43a:	b9 f4       	brne	.+46     	; 0x46a <__LOCK_REGION_LENGTH__+0x6a>
							if(adc_reading>Light_Threshold)
     43c:	80 91 7b 02 	lds	r24, 0x027B	; 0x80027b <adc_reading>
     440:	90 91 7c 02 	lds	r25, 0x027C	; 0x80027c <adc_reading+0x1>
     444:	a0 91 7d 02 	lds	r26, 0x027D	; 0x80027d <adc_reading+0x2>
     448:	b0 91 7e 02 	lds	r27, 0x027E	; 0x80027e <adc_reading+0x3>
     44c:	81 30       	cpi	r24, 0x01	; 1
     44e:	92 40       	sbci	r25, 0x02	; 2
     450:	a1 05       	cpc	r26, r1
     452:	b1 05       	cpc	r27, r1
     454:	28 f0       	brcs	.+10     	; 0x460 <__LOCK_REGION_LENGTH__+0x60>
							{
								sendmsg(msg7); // Report Bright
     456:	8f e2       	ldi	r24, 0x2F	; 47
     458:	91 e0       	ldi	r25, 0x01	; 1
     45a:	0e 94 40 01 	call	0x280	; 0x280 <sendmsg>
     45e:	a2 c0       	rjmp	.+324    	; 0x5a4 <__LOCK_REGION_LENGTH__+0x1a4>
							}
							else
							{
								sendmsg(msg8); // Report Dark
     460:	84 e2       	ldi	r24, 0x24	; 36
     462:	91 e0       	ldi	r25, 0x01	; 1
     464:	0e 94 40 01 	call	0x280	; 0x280 <sendmsg>
     468:	9d c0       	rjmp	.+314    	; 0x5a4 <__LOCK_REGION_LENGTH__+0x1a4>
							}
					} else {
						//Give warning
						sendmsg(msg6);
     46a:	8c e3       	ldi	r24, 0x3C	; 60
     46c:	91 e0       	ldi	r25, 0x01	; 1
     46e:	0e 94 40 01 	call	0x280	; 0x280 <sendmsg>
     472:	98 c0       	rjmp	.+304    	; 0x5a4 <__LOCK_REGION_LENGTH__+0x1a4>
				break;
				
				/* Report ADC Value to user */
				case 'A':
				case 'a':
					sprintf(data, "ADC value = %lu", adc_reading); //Report ADC value
     474:	80 91 7e 02 	lds	r24, 0x027E	; 0x80027e <adc_reading+0x3>
     478:	8f 93       	push	r24
     47a:	80 91 7d 02 	lds	r24, 0x027D	; 0x80027d <adc_reading+0x2>
     47e:	8f 93       	push	r24
     480:	80 91 7c 02 	lds	r24, 0x027C	; 0x80027c <adc_reading+0x1>
     484:	8f 93       	push	r24
     486:	80 91 7b 02 	lds	r24, 0x027B	; 0x80027b <adc_reading>
     48a:	8f 93       	push	r24
     48c:	df 92       	push	r13
     48e:	cf 92       	push	r12
     490:	7f 92       	push	r7
     492:	6f 92       	push	r6
     494:	0e 94 82 05 	call	0xb04	; 0xb04 <sprintf>
					sendmsg(data);
     498:	8b a9       	ldd	r24, Y+51	; 0x33
     49a:	9c a9       	ldd	r25, Y+52	; 0x34
     49c:	0e 94 40 01 	call	0x280	; 0x280 <sendmsg>
				break;
     4a0:	0f b6       	in	r0, 0x3f	; 63
     4a2:	f8 94       	cli
     4a4:	de bf       	out	0x3e, r29	; 62
     4a6:	0f be       	out	0x3f, r0	; 63
     4a8:	cd bf       	out	0x3d, r28	; 61
     4aa:	7c c0       	rjmp	.+248    	; 0x5a4 <__LOCK_REGION_LENGTH__+0x1a4>
				
				/* Report ADC Value in mV to user */
				case 'V':
				case 'v':
					adc_mV = (adc_reading/divider); // Calculates ADC in mV
     4ac:	60 91 7b 02 	lds	r22, 0x027B	; 0x80027b <adc_reading>
     4b0:	70 91 7c 02 	lds	r23, 0x027C	; 0x80027c <adc_reading+0x1>
     4b4:	80 91 7d 02 	lds	r24, 0x027D	; 0x80027d <adc_reading+0x2>
     4b8:	90 91 7e 02 	lds	r25, 0x027E	; 0x80027e <adc_reading+0x3>
     4bc:	0e 94 47 04 	call	0x88e	; 0x88e <__floatunsisf>
     4c0:	20 e0       	ldi	r18, 0x00	; 0
     4c2:	30 e0       	ldi	r19, 0x00	; 0
     4c4:	40 e8       	ldi	r20, 0x80	; 128
     4c6:	5a e3       	ldi	r21, 0x3A	; 58
     4c8:	0e 94 ad 04 	call	0x95a	; 0x95a <__mulsf3>
     4cc:	0e 94 18 04 	call	0x830	; 0x830 <__fixunssfsi>
     4d0:	60 93 44 02 	sts	0x0244, r22	; 0x800244 <adc_mV>
     4d4:	70 93 45 02 	sts	0x0245, r23	; 0x800245 <adc_mV+0x1>
     4d8:	80 93 46 02 	sts	0x0246, r24	; 0x800246 <adc_mV+0x2>
     4dc:	90 93 47 02 	sts	0x0247, r25	; 0x800247 <adc_mV+0x3>
					dtostrf(adc_mV,8,2,str_adc_mV);  // Changes value from double to string
     4e0:	0e 94 47 04 	call	0x88e	; 0x88e <__floatunsisf>
     4e4:	0d a9       	ldd	r16, Y+53	; 0x35
     4e6:	1e a9       	ldd	r17, Y+54	; 0x36
     4e8:	22 e0       	ldi	r18, 0x02	; 2
     4ea:	48 e0       	ldi	r20, 0x08	; 8
     4ec:	0e 94 62 05 	call	0xac4	; 0xac4 <dtostrf>
					sprintf(data, "ADC value = %s mV",str_adc_mV); //Report ADC value in mV
     4f0:	98 a9       	ldd	r25, Y+48	; 0x30
     4f2:	9f 93       	push	r25
     4f4:	ef a5       	ldd	r30, Y+47	; 0x2f
     4f6:	ef 93       	push	r30
     4f8:	bf 92       	push	r11
     4fa:	af 92       	push	r10
     4fc:	7f 92       	push	r7
     4fe:	6f 92       	push	r6
     500:	0e 94 82 05 	call	0xb04	; 0xb04 <sprintf>
					sendmsg(data);	
     504:	8b a9       	ldd	r24, Y+51	; 0x33
     506:	9c a9       	ldd	r25, Y+52	; 0x34
     508:	0e 94 40 01 	call	0x280	; 0x280 <sendmsg>
				break;
     50c:	0f 90       	pop	r0
     50e:	0f 90       	pop	r0
     510:	0f 90       	pop	r0
     512:	0f 90       	pop	r0
     514:	0f 90       	pop	r0
     516:	0f 90       	pop	r0
     518:	45 c0       	rjmp	.+138    	; 0x5a4 <__LOCK_REGION_LENGTH__+0x1a4>
				
				/* Report Values Continuously */
				case 'C':
				case 'c':
					enContDisplay = 1; //enable continuous adc display
     51a:	90 92 41 02 	sts	0x0241, r9	; 0x800241 <__data_end+0x1>
     51e:	80 92 40 02 	sts	0x0240, r8	; 0x800240 <__data_end>
				break;
     522:	40 c0       	rjmp	.+128    	; 0x5a4 <__LOCK_REGION_LENGTH__+0x1a4>
				
				/* Stop Reporting Values Continuously */
				case 'E':
				case 'e':
					if(enContDisplay==0) {
     524:	80 91 40 02 	lds	r24, 0x0240	; 0x800240 <__data_end>
     528:	90 91 41 02 	lds	r25, 0x0241	; 0x800241 <__data_end+0x1>
     52c:	89 2b       	or	r24, r25
     52e:	21 f4       	brne	.+8      	; 0x538 <__LOCK_REGION_LENGTH__+0x138>
						sendmsg(msg9);
     530:	80 e0       	ldi	r24, 0x00	; 0
     532:	91 e0       	ldi	r25, 0x01	; 1
     534:	0e 94 40 01 	call	0x280	; 0x280 <sendmsg>
					}
					enContDisplay = 0; //disable continuous adc display
     538:	10 92 41 02 	sts	0x0241, r1	; 0x800241 <__data_end+0x1>
     53c:	10 92 40 02 	sts	0x0240, r1	; 0x800240 <__data_end>
				break;
     540:	31 c0       	rjmp	.+98     	; 0x5a4 <__LOCK_REGION_LENGTH__+0x1a4>
				
				/* Report OCR2A Value */
				case 'S':
				case 's':
					sprintf(data, "OCR2A = %d", OCR2A); // Report OCR2A value
     542:	e3 eb       	ldi	r30, 0xB3	; 179
     544:	f0 e0       	ldi	r31, 0x00	; 0
     546:	80 81       	ld	r24, Z
     548:	1f 92       	push	r1
     54a:	8f 93       	push	r24
     54c:	84 e3       	ldi	r24, 0x34	; 52
     54e:	92 e0       	ldi	r25, 0x02	; 2
     550:	9f 93       	push	r25
     552:	8f 93       	push	r24
     554:	7f 92       	push	r7
     556:	6f 92       	push	r6
     558:	0e 94 82 05 	call	0xb04	; 0xb04 <sprintf>
					sendmsg(data);
     55c:	8b a9       	ldd	r24, Y+51	; 0x33
     55e:	9c a9       	ldd	r25, Y+52	; 0x34
     560:	0e 94 40 01 	call	0x280	; 0x280 <sendmsg>
				break;
     564:	0f 90       	pop	r0
     566:	0f 90       	pop	r0
     568:	0f 90       	pop	r0
     56a:	0f 90       	pop	r0
     56c:	0f 90       	pop	r0
     56e:	0f 90       	pop	r0
     570:	19 c0       	rjmp	.+50     	; 0x5a4 <__LOCK_REGION_LENGTH__+0x1a4>
				
				/* Sets LED Brightness Level */
				case '0' ... '9':
					
					Brightness = ch - '0';
					OCR2A = Brightness * Brightness_Multiplier;
     572:	70 e0       	ldi	r23, 0x00	; 0
     574:	60 53       	subi	r22, 0x30	; 48
     576:	71 09       	sbc	r23, r1
     578:	07 2e       	mov	r0, r23
     57a:	00 0c       	add	r0, r0
     57c:	88 0b       	sbc	r24, r24
     57e:	99 0b       	sbc	r25, r25
     580:	0e 94 49 04 	call	0x892	; 0x892 <__floatsisf>
     584:	20 e0       	ldi	r18, 0x00	; 0
     586:	30 e0       	ldi	r19, 0x00	; 0
     588:	4c ec       	ldi	r20, 0xCC	; 204
     58a:	51 e4       	ldi	r21, 0x41	; 65
     58c:	0e 94 ad 04 	call	0x95a	; 0x95a <__mulsf3>
     590:	0e 94 18 04 	call	0x830	; 0x830 <__fixunssfsi>
     594:	e3 eb       	ldi	r30, 0xB3	; 179
     596:	f0 e0       	ldi	r31, 0x00	; 0
     598:	60 83       	st	Z, r22
				break;
     59a:	04 c0       	rjmp	.+8      	; 0x5a4 <__LOCK_REGION_LENGTH__+0x1a4>
				
				default:
				sendmsg(msg1); /*send default message*/
     59c:	81 ee       	ldi	r24, 0xE1	; 225
     59e:	91 e0       	ldi	r25, 0x01	; 1
     5a0:	0e 94 40 01 	call	0x280	; 0x280 <sendmsg>
			}
		}
	/*Continuous Loop */   
	
		if(new_adc_data) {
     5a4:	80 91 87 02 	lds	r24, 0x0287	; 0x800287 <new_adc_data>
     5a8:	90 91 88 02 	lds	r25, 0x0288	; 0x800288 <new_adc_data+0x1>
     5ac:	89 2b       	or	r24, r25
     5ae:	09 f4       	brne	.+2      	; 0x5b2 <__LOCK_REGION_LENGTH__+0x1b2>
     5b0:	d3 ce       	rjmp	.-602    	; 0x358 <main+0x90>
			if(enContDisplay) {
     5b2:	80 91 40 02 	lds	r24, 0x0240	; 0x800240 <__data_end>
     5b6:	90 91 41 02 	lds	r25, 0x0241	; 0x800241 <__data_end+0x1>
     5ba:	89 2b       	or	r24, r25
     5bc:	09 f4       	brne	.+2      	; 0x5c0 <__LOCK_REGION_LENGTH__+0x1c0>
     5be:	d2 c0       	rjmp	.+420    	; 0x764 <__LOCK_REGION_LENGTH__+0x364>
				switch(input){
     5c0:	80 91 7a 02 	lds	r24, 0x027A	; 0x80027a <input>
     5c4:	81 30       	cpi	r24, 0x01	; 1
     5c6:	f1 f1       	breq	.+124    	; 0x644 <__LOCK_REGION_LENGTH__+0x244>
     5c8:	20 f0       	brcs	.+8      	; 0x5d2 <__LOCK_REGION_LENGTH__+0x1d2>
     5ca:	82 30       	cpi	r24, 0x02	; 2
     5cc:	09 f4       	brne	.+2      	; 0x5d0 <__LOCK_REGION_LENGTH__+0x1d0>
     5ce:	51 c0       	rjmp	.+162    	; 0x672 <__LOCK_REGION_LENGTH__+0x272>
     5d0:	8d c0       	rjmp	.+282    	; 0x6ec <__LOCK_REGION_LENGTH__+0x2ec>
					case Volt:
						adc_mV = (adc_reading/divider);
     5d2:	60 91 7b 02 	lds	r22, 0x027B	; 0x80027b <adc_reading>
     5d6:	70 91 7c 02 	lds	r23, 0x027C	; 0x80027c <adc_reading+0x1>
     5da:	80 91 7d 02 	lds	r24, 0x027D	; 0x80027d <adc_reading+0x2>
     5de:	90 91 7e 02 	lds	r25, 0x027E	; 0x80027e <adc_reading+0x3>
     5e2:	0e 94 47 04 	call	0x88e	; 0x88e <__floatunsisf>
     5e6:	20 e0       	ldi	r18, 0x00	; 0
     5e8:	30 e0       	ldi	r19, 0x00	; 0
     5ea:	40 e8       	ldi	r20, 0x80	; 128
     5ec:	5a e3       	ldi	r21, 0x3A	; 58
     5ee:	0e 94 ad 04 	call	0x95a	; 0x95a <__mulsf3>
     5f2:	0e 94 18 04 	call	0x830	; 0x830 <__fixunssfsi>
     5f6:	60 93 44 02 	sts	0x0244, r22	; 0x800244 <adc_mV>
     5fa:	70 93 45 02 	sts	0x0245, r23	; 0x800245 <adc_mV+0x1>
     5fe:	80 93 46 02 	sts	0x0246, r24	; 0x800246 <adc_mV+0x2>
     602:	90 93 47 02 	sts	0x0247, r25	; 0x800247 <adc_mV+0x3>
						dtostrf(adc_mV,8,2,str_adc_mV);
     606:	0e 94 47 04 	call	0x88e	; 0x88e <__floatunsisf>
     60a:	0d a9       	ldd	r16, Y+53	; 0x35
     60c:	1e a9       	ldd	r17, Y+54	; 0x36
     60e:	22 e0       	ldi	r18, 0x02	; 2
     610:	48 e0       	ldi	r20, 0x08	; 8
     612:	0e 94 62 05 	call	0xac4	; 0xac4 <dtostrf>
						sprintf(data, "ADC value = %s mV",str_adc_mV); //Report ADC value in mV
     616:	f8 a9       	ldd	r31, Y+48	; 0x30
     618:	ff 93       	push	r31
     61a:	2f a5       	ldd	r18, Y+47	; 0x2f
     61c:	2f 93       	push	r18
     61e:	82 e2       	ldi	r24, 0x22	; 34
     620:	92 e0       	ldi	r25, 0x02	; 2
     622:	9f 93       	push	r25
     624:	8f 93       	push	r24
     626:	7f 92       	push	r7
     628:	6f 92       	push	r6
     62a:	0e 94 82 05 	call	0xb04	; 0xb04 <sprintf>
						sendmsg(data);
     62e:	8b a9       	ldd	r24, Y+51	; 0x33
     630:	9c a9       	ldd	r25, Y+52	; 0x34
     632:	0e 94 40 01 	call	0x280	; 0x280 <sendmsg>
					break;
     636:	0f 90       	pop	r0
     638:	0f 90       	pop	r0
     63a:	0f 90       	pop	r0
     63c:	0f 90       	pop	r0
     63e:	0f 90       	pop	r0
     640:	0f 90       	pop	r0
     642:	90 c0       	rjmp	.+288    	; 0x764 <__LOCK_REGION_LENGTH__+0x364>
					
					case LDR:
						if(adc_reading>Light_Threshold)
     644:	80 91 7b 02 	lds	r24, 0x027B	; 0x80027b <adc_reading>
     648:	90 91 7c 02 	lds	r25, 0x027C	; 0x80027c <adc_reading+0x1>
     64c:	a0 91 7d 02 	lds	r26, 0x027D	; 0x80027d <adc_reading+0x2>
     650:	b0 91 7e 02 	lds	r27, 0x027E	; 0x80027e <adc_reading+0x3>
     654:	81 30       	cpi	r24, 0x01	; 1
     656:	92 40       	sbci	r25, 0x02	; 2
     658:	a1 05       	cpc	r26, r1
     65a:	b1 05       	cpc	r27, r1
     65c:	28 f0       	brcs	.+10     	; 0x668 <__LOCK_REGION_LENGTH__+0x268>
						{
							sendmsg(msg7);
     65e:	8f e2       	ldi	r24, 0x2F	; 47
     660:	91 e0       	ldi	r25, 0x01	; 1
     662:	0e 94 40 01 	call	0x280	; 0x280 <sendmsg>
     666:	7e c0       	rjmp	.+252    	; 0x764 <__LOCK_REGION_LENGTH__+0x364>
						}
						else
						{
							sendmsg(msg8);
     668:	84 e2       	ldi	r24, 0x24	; 36
     66a:	91 e0       	ldi	r25, 0x01	; 1
     66c:	0e 94 40 01 	call	0x280	; 0x280 <sendmsg>
     670:	79 c0       	rjmp	.+242    	; 0x764 <__LOCK_REGION_LENGTH__+0x364>
						}
					break;
					
					case Temp:
						temp = (adc_reading*500)/divider; //(5v/1023)=4.887mV = 5mV, every deg c is 10Mv voltage change therefore divide by 2
     672:	20 91 7b 02 	lds	r18, 0x027B	; 0x80027b <adc_reading>
     676:	30 91 7c 02 	lds	r19, 0x027C	; 0x80027c <adc_reading+0x1>
     67a:	40 91 7d 02 	lds	r20, 0x027D	; 0x80027d <adc_reading+0x2>
     67e:	50 91 7e 02 	lds	r21, 0x027E	; 0x80027e <adc_reading+0x3>
     682:	a4 ef       	ldi	r26, 0xF4	; 244
     684:	b1 e0       	ldi	r27, 0x01	; 1
     686:	0e 94 48 05 	call	0xa90	; 0xa90 <__muluhisi3>
     68a:	0e 94 47 04 	call	0x88e	; 0x88e <__floatunsisf>
     68e:	20 e0       	ldi	r18, 0x00	; 0
     690:	30 e0       	ldi	r19, 0x00	; 0
     692:	40 e8       	ldi	r20, 0x80	; 128
     694:	5a e3       	ldi	r21, 0x3A	; 58
     696:	0e 94 ad 04 	call	0x95a	; 0x95a <__mulsf3>
     69a:	0e 94 18 04 	call	0x830	; 0x830 <__fixunssfsi>
     69e:	60 93 7f 02 	sts	0x027F, r22	; 0x80027f <temp>
     6a2:	70 93 80 02 	sts	0x0280, r23	; 0x800280 <temp+0x1>
     6a6:	80 93 81 02 	sts	0x0281, r24	; 0x800281 <temp+0x2>
     6aa:	90 93 82 02 	sts	0x0282, r25	; 0x800282 <temp+0x3>
						dtostrf(temp,6,2,str_temp); // Changes value from double to string
     6ae:	0e 94 47 04 	call	0x88e	; 0x88e <__floatunsisf>
     6b2:	0f a9       	ldd	r16, Y+55	; 0x37
     6b4:	18 ad       	ldd	r17, Y+56	; 0x38
     6b6:	22 e0       	ldi	r18, 0x02	; 2
     6b8:	46 e0       	ldi	r20, 0x06	; 6
     6ba:	0e 94 62 05 	call	0xac4	; 0xac4 <dtostrf>
						sprintf(data,"LM35 Temperature = %s deg C",str_temp); //Report Temperature value
     6be:	fa a9       	ldd	r31, Y+50	; 0x32
     6c0:	ff 93       	push	r31
     6c2:	29 a9       	ldd	r18, Y+49	; 0x31
     6c4:	2f 93       	push	r18
     6c6:	86 ef       	ldi	r24, 0xF6	; 246
     6c8:	91 e0       	ldi	r25, 0x01	; 1
     6ca:	9f 93       	push	r25
     6cc:	8f 93       	push	r24
     6ce:	7f 92       	push	r7
     6d0:	6f 92       	push	r6
     6d2:	0e 94 82 05 	call	0xb04	; 0xb04 <sprintf>
						sendmsg(data);
     6d6:	8b a9       	ldd	r24, Y+51	; 0x33
     6d8:	9c a9       	ldd	r25, Y+52	; 0x34
     6da:	0e 94 40 01 	call	0x280	; 0x280 <sendmsg>
					break;
     6de:	0f 90       	pop	r0
     6e0:	0f 90       	pop	r0
     6e2:	0f 90       	pop	r0
     6e4:	0f 90       	pop	r0
     6e6:	0f 90       	pop	r0
     6e8:	0f 90       	pop	r0
     6ea:	3c c0       	rjmp	.+120    	; 0x764 <__LOCK_REGION_LENGTH__+0x364>
					
					default:
						temp = (adc_reading*500)/divider; //(5v/1023)=4.887mV = 5mV, every deg c is 10Mv voltage change therefore divide by 2
     6ec:	20 91 7b 02 	lds	r18, 0x027B	; 0x80027b <adc_reading>
     6f0:	30 91 7c 02 	lds	r19, 0x027C	; 0x80027c <adc_reading+0x1>
     6f4:	40 91 7d 02 	lds	r20, 0x027D	; 0x80027d <adc_reading+0x2>
     6f8:	50 91 7e 02 	lds	r21, 0x027E	; 0x80027e <adc_reading+0x3>
     6fc:	a4 ef       	ldi	r26, 0xF4	; 244
     6fe:	b1 e0       	ldi	r27, 0x01	; 1
     700:	0e 94 48 05 	call	0xa90	; 0xa90 <__muluhisi3>
     704:	0e 94 47 04 	call	0x88e	; 0x88e <__floatunsisf>
     708:	20 e0       	ldi	r18, 0x00	; 0
     70a:	30 e0       	ldi	r19, 0x00	; 0
     70c:	40 e8       	ldi	r20, 0x80	; 128
     70e:	5a e3       	ldi	r21, 0x3A	; 58
     710:	0e 94 ad 04 	call	0x95a	; 0x95a <__mulsf3>
     714:	0e 94 18 04 	call	0x830	; 0x830 <__fixunssfsi>
     718:	60 93 7f 02 	sts	0x027F, r22	; 0x80027f <temp>
     71c:	70 93 80 02 	sts	0x0280, r23	; 0x800280 <temp+0x1>
     720:	80 93 81 02 	sts	0x0281, r24	; 0x800281 <temp+0x2>
     724:	90 93 82 02 	sts	0x0282, r25	; 0x800282 <temp+0x3>
						dtostrf(temp,6,2,str_temp); // Changes value from double to string
     728:	0e 94 47 04 	call	0x88e	; 0x88e <__floatunsisf>
     72c:	0f a9       	ldd	r16, Y+55	; 0x37
     72e:	18 ad       	ldd	r17, Y+56	; 0x38
     730:	22 e0       	ldi	r18, 0x02	; 2
     732:	46 e0       	ldi	r20, 0x06	; 6
     734:	0e 94 62 05 	call	0xac4	; 0xac4 <dtostrf>
						sprintf(data,"LM35 Temperature = %s deg C",str_temp); //Report Temperature value
     738:	8a a9       	ldd	r24, Y+50	; 0x32
     73a:	8f 93       	push	r24
     73c:	99 a9       	ldd	r25, Y+49	; 0x31
     73e:	9f 93       	push	r25
     740:	86 ef       	ldi	r24, 0xF6	; 246
     742:	91 e0       	ldi	r25, 0x01	; 1
     744:	9f 93       	push	r25
     746:	8f 93       	push	r24
     748:	7f 92       	push	r7
     74a:	6f 92       	push	r6
     74c:	0e 94 82 05 	call	0xb04	; 0xb04 <sprintf>
						sendmsg(data);
     750:	8b a9       	ldd	r24, Y+51	; 0x33
     752:	9c a9       	ldd	r25, Y+52	; 0x34
     754:	0e 94 40 01 	call	0x280	; 0x280 <sendmsg>
     758:	0f 90       	pop	r0
     75a:	0f 90       	pop	r0
     75c:	0f 90       	pop	r0
     75e:	0f 90       	pop	r0
     760:	0f 90       	pop	r0
     762:	0f 90       	pop	r0
				}
			}
			new_adc_data=0;
     764:	10 92 88 02 	sts	0x0288, r1	; 0x800288 <new_adc_data+0x1>
     768:	10 92 87 02 	sts	0x0287, r1	; 0x800287 <new_adc_data>
     76c:	e0 cd       	rjmp	.-1088   	; 0x32e <main+0x66>

0000076e <__vector_20>:

/*this interrupt occurs whenever the */
/*USART has completed sending a character*/

ISR(USART_TX_vect)
{
     76e:	1f 92       	push	r1
     770:	0f 92       	push	r0
     772:	0f b6       	in	r0, 0x3f	; 63
     774:	0f 92       	push	r0
     776:	11 24       	eor	r1, r1
     778:	8f 93       	push	r24
     77a:	ef 93       	push	r30
     77c:	ff 93       	push	r31
	/*send next character and increment index*/
	if (qcntr != sndcntr)
     77e:	e0 91 42 02 	lds	r30, 0x0242	; 0x800242 <sndcntr>
     782:	80 91 43 02 	lds	r24, 0x0243	; 0x800243 <qcntr>
     786:	8e 17       	cp	r24, r30
     788:	51 f0       	breq	.+20     	; 0x79e <__vector_20+0x30>
		UDR0 = queue[sndcntr++];
     78a:	81 e0       	ldi	r24, 0x01	; 1
     78c:	8e 0f       	add	r24, r30
     78e:	80 93 42 02 	sts	0x0242, r24	; 0x800242 <sndcntr>
     792:	f0 e0       	ldi	r31, 0x00	; 0
     794:	e8 5b       	subi	r30, 0xB8	; 184
     796:	fd 4f       	sbci	r31, 0xFD	; 253
     798:	80 81       	ld	r24, Z
     79a:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
}
     79e:	ff 91       	pop	r31
     7a0:	ef 91       	pop	r30
     7a2:	8f 91       	pop	r24
     7a4:	0f 90       	pop	r0
     7a6:	0f be       	out	0x3f, r0	; 63
     7a8:	0f 90       	pop	r0
     7aa:	1f 90       	pop	r1
     7ac:	18 95       	reti

000007ae <__vector_21>:

ISR (ADC_vect)//handles ADC interrupts
{
     7ae:	1f 92       	push	r1
     7b0:	0f 92       	push	r0
     7b2:	0f b6       	in	r0, 0x3f	; 63
     7b4:	0f 92       	push	r0
     7b6:	11 24       	eor	r1, r1
     7b8:	8f 93       	push	r24
     7ba:	9f 93       	push	r25
     7bc:	af 93       	push	r26
     7be:	bf 93       	push	r27
	
	//adc_reading = ADC;
	new_adc_data = 1;
     7c0:	81 e0       	ldi	r24, 0x01	; 1
     7c2:	90 e0       	ldi	r25, 0x00	; 0
     7c4:	90 93 88 02 	sts	0x0288, r25	; 0x800288 <new_adc_data+0x1>
     7c8:	80 93 87 02 	sts	0x0287, r24	; 0x800287 <new_adc_data>
	adc_reading = ADC;
     7cc:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__DATA_REGION_ORIGIN__+0x18>
     7d0:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__DATA_REGION_ORIGIN__+0x19>
     7d4:	a0 e0       	ldi	r26, 0x00	; 0
     7d6:	b0 e0       	ldi	r27, 0x00	; 0
     7d8:	80 93 7b 02 	sts	0x027B, r24	; 0x80027b <adc_reading>
     7dc:	90 93 7c 02 	sts	0x027C, r25	; 0x80027c <adc_reading+0x1>
     7e0:	a0 93 7d 02 	sts	0x027D, r26	; 0x80027d <adc_reading+0x2>
     7e4:	b0 93 7e 02 	sts	0x027E, r27	; 0x80027e <adc_reading+0x3>
	TCNT0 = 6;
     7e8:	86 e0       	ldi	r24, 0x06	; 6
     7ea:	86 bd       	out	0x26, r24	; 38
	switch(input) {
     7ec:	80 91 7a 02 	lds	r24, 0x027A	; 0x80027a <input>
     7f0:	81 30       	cpi	r24, 0x01	; 1
     7f2:	41 f0       	breq	.+16     	; 0x804 <__vector_21+0x56>
     7f4:	18 f0       	brcs	.+6      	; 0x7fc <__vector_21+0x4e>
     7f6:	82 30       	cpi	r24, 0x02	; 2
     7f8:	49 f0       	breq	.+18     	; 0x80c <__vector_21+0x5e>
     7fa:	0c c0       	rjmp	.+24     	; 0x814 <__vector_21+0x66>
		
		case Volt :
			ADMUX = (1<<6) | (0<<0); //adc0
     7fc:	80 e4       	ldi	r24, 0x40	; 64
     7fe:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
		break;
     802:	0b c0       	rjmp	.+22     	; 0x81a <__vector_21+0x6c>
		
		case LDR :
			ADMUX = (1<<6) | (1<<0); //adc1
     804:	81 e4       	ldi	r24, 0x41	; 65
     806:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
		break;
     80a:	07 c0       	rjmp	.+14     	; 0x81a <__vector_21+0x6c>
		
		case Temp :
			ADMUX = (1<<6) | (1<<1) ; //adc2
     80c:	82 e4       	ldi	r24, 0x42	; 66
     80e:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
		break;
     812:	03 c0       	rjmp	.+6      	; 0x81a <__vector_21+0x6c>
		default:
			ADMUX = (1<<6) | (1<<1); //adc2
     814:	82 e4       	ldi	r24, 0x42	; 66
     816:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
	} 
	TIFR0 = (1<<0); //clears Counter0 overflow
     81a:	81 e0       	ldi	r24, 0x01	; 1
     81c:	85 bb       	out	0x15, r24	; 21
}
     81e:	bf 91       	pop	r27
     820:	af 91       	pop	r26
     822:	9f 91       	pop	r25
     824:	8f 91       	pop	r24
     826:	0f 90       	pop	r0
     828:	0f be       	out	0x3f, r0	; 63
     82a:	0f 90       	pop	r0
     82c:	1f 90       	pop	r1
     82e:	18 95       	reti

00000830 <__fixunssfsi>:
     830:	0e 94 8c 04 	call	0x918	; 0x918 <__fp_splitA>
     834:	88 f0       	brcs	.+34     	; 0x858 <__fixunssfsi+0x28>
     836:	9f 57       	subi	r25, 0x7F	; 127
     838:	98 f0       	brcs	.+38     	; 0x860 <__fixunssfsi+0x30>
     83a:	b9 2f       	mov	r27, r25
     83c:	99 27       	eor	r25, r25
     83e:	b7 51       	subi	r27, 0x17	; 23
     840:	b0 f0       	brcs	.+44     	; 0x86e <__fixunssfsi+0x3e>
     842:	e1 f0       	breq	.+56     	; 0x87c <__fixunssfsi+0x4c>
     844:	66 0f       	add	r22, r22
     846:	77 1f       	adc	r23, r23
     848:	88 1f       	adc	r24, r24
     84a:	99 1f       	adc	r25, r25
     84c:	1a f0       	brmi	.+6      	; 0x854 <__fixunssfsi+0x24>
     84e:	ba 95       	dec	r27
     850:	c9 f7       	brne	.-14     	; 0x844 <__fixunssfsi+0x14>
     852:	14 c0       	rjmp	.+40     	; 0x87c <__fixunssfsi+0x4c>
     854:	b1 30       	cpi	r27, 0x01	; 1
     856:	91 f0       	breq	.+36     	; 0x87c <__fixunssfsi+0x4c>
     858:	0e 94 a6 04 	call	0x94c	; 0x94c <__fp_zero>
     85c:	b1 e0       	ldi	r27, 0x01	; 1
     85e:	08 95       	ret
     860:	0c 94 a6 04 	jmp	0x94c	; 0x94c <__fp_zero>
     864:	67 2f       	mov	r22, r23
     866:	78 2f       	mov	r23, r24
     868:	88 27       	eor	r24, r24
     86a:	b8 5f       	subi	r27, 0xF8	; 248
     86c:	39 f0       	breq	.+14     	; 0x87c <__fixunssfsi+0x4c>
     86e:	b9 3f       	cpi	r27, 0xF9	; 249
     870:	cc f3       	brlt	.-14     	; 0x864 <__fixunssfsi+0x34>
     872:	86 95       	lsr	r24
     874:	77 95       	ror	r23
     876:	67 95       	ror	r22
     878:	b3 95       	inc	r27
     87a:	d9 f7       	brne	.-10     	; 0x872 <__fixunssfsi+0x42>
     87c:	3e f4       	brtc	.+14     	; 0x88c <__fixunssfsi+0x5c>
     87e:	90 95       	com	r25
     880:	80 95       	com	r24
     882:	70 95       	com	r23
     884:	61 95       	neg	r22
     886:	7f 4f       	sbci	r23, 0xFF	; 255
     888:	8f 4f       	sbci	r24, 0xFF	; 255
     88a:	9f 4f       	sbci	r25, 0xFF	; 255
     88c:	08 95       	ret

0000088e <__floatunsisf>:
     88e:	e8 94       	clt
     890:	09 c0       	rjmp	.+18     	; 0x8a4 <__floatsisf+0x12>

00000892 <__floatsisf>:
     892:	97 fb       	bst	r25, 7
     894:	3e f4       	brtc	.+14     	; 0x8a4 <__floatsisf+0x12>
     896:	90 95       	com	r25
     898:	80 95       	com	r24
     89a:	70 95       	com	r23
     89c:	61 95       	neg	r22
     89e:	7f 4f       	sbci	r23, 0xFF	; 255
     8a0:	8f 4f       	sbci	r24, 0xFF	; 255
     8a2:	9f 4f       	sbci	r25, 0xFF	; 255
     8a4:	99 23       	and	r25, r25
     8a6:	a9 f0       	breq	.+42     	; 0x8d2 <__floatsisf+0x40>
     8a8:	f9 2f       	mov	r31, r25
     8aa:	96 e9       	ldi	r25, 0x96	; 150
     8ac:	bb 27       	eor	r27, r27
     8ae:	93 95       	inc	r25
     8b0:	f6 95       	lsr	r31
     8b2:	87 95       	ror	r24
     8b4:	77 95       	ror	r23
     8b6:	67 95       	ror	r22
     8b8:	b7 95       	ror	r27
     8ba:	f1 11       	cpse	r31, r1
     8bc:	f8 cf       	rjmp	.-16     	; 0x8ae <__floatsisf+0x1c>
     8be:	fa f4       	brpl	.+62     	; 0x8fe <__floatsisf+0x6c>
     8c0:	bb 0f       	add	r27, r27
     8c2:	11 f4       	brne	.+4      	; 0x8c8 <__floatsisf+0x36>
     8c4:	60 ff       	sbrs	r22, 0
     8c6:	1b c0       	rjmp	.+54     	; 0x8fe <__floatsisf+0x6c>
     8c8:	6f 5f       	subi	r22, 0xFF	; 255
     8ca:	7f 4f       	sbci	r23, 0xFF	; 255
     8cc:	8f 4f       	sbci	r24, 0xFF	; 255
     8ce:	9f 4f       	sbci	r25, 0xFF	; 255
     8d0:	16 c0       	rjmp	.+44     	; 0x8fe <__floatsisf+0x6c>
     8d2:	88 23       	and	r24, r24
     8d4:	11 f0       	breq	.+4      	; 0x8da <__floatsisf+0x48>
     8d6:	96 e9       	ldi	r25, 0x96	; 150
     8d8:	11 c0       	rjmp	.+34     	; 0x8fc <__floatsisf+0x6a>
     8da:	77 23       	and	r23, r23
     8dc:	21 f0       	breq	.+8      	; 0x8e6 <__floatsisf+0x54>
     8de:	9e e8       	ldi	r25, 0x8E	; 142
     8e0:	87 2f       	mov	r24, r23
     8e2:	76 2f       	mov	r23, r22
     8e4:	05 c0       	rjmp	.+10     	; 0x8f0 <__floatsisf+0x5e>
     8e6:	66 23       	and	r22, r22
     8e8:	71 f0       	breq	.+28     	; 0x906 <__stack+0x7>
     8ea:	96 e8       	ldi	r25, 0x86	; 134
     8ec:	86 2f       	mov	r24, r22
     8ee:	70 e0       	ldi	r23, 0x00	; 0
     8f0:	60 e0       	ldi	r22, 0x00	; 0
     8f2:	2a f0       	brmi	.+10     	; 0x8fe <__floatsisf+0x6c>
     8f4:	9a 95       	dec	r25
     8f6:	66 0f       	add	r22, r22
     8f8:	77 1f       	adc	r23, r23
     8fa:	88 1f       	adc	r24, r24
     8fc:	da f7       	brpl	.-10     	; 0x8f4 <__floatsisf+0x62>
     8fe:	88 0f       	add	r24, r24
     900:	96 95       	lsr	r25
     902:	87 95       	ror	r24
     904:	97 f9       	bld	r25, 7
     906:	08 95       	ret

00000908 <__fp_split3>:
     908:	57 fd       	sbrc	r21, 7
     90a:	90 58       	subi	r25, 0x80	; 128
     90c:	44 0f       	add	r20, r20
     90e:	55 1f       	adc	r21, r21
     910:	59 f0       	breq	.+22     	; 0x928 <__fp_splitA+0x10>
     912:	5f 3f       	cpi	r21, 0xFF	; 255
     914:	71 f0       	breq	.+28     	; 0x932 <__fp_splitA+0x1a>
     916:	47 95       	ror	r20

00000918 <__fp_splitA>:
     918:	88 0f       	add	r24, r24
     91a:	97 fb       	bst	r25, 7
     91c:	99 1f       	adc	r25, r25
     91e:	61 f0       	breq	.+24     	; 0x938 <__fp_splitA+0x20>
     920:	9f 3f       	cpi	r25, 0xFF	; 255
     922:	79 f0       	breq	.+30     	; 0x942 <__fp_splitA+0x2a>
     924:	87 95       	ror	r24
     926:	08 95       	ret
     928:	12 16       	cp	r1, r18
     92a:	13 06       	cpc	r1, r19
     92c:	14 06       	cpc	r1, r20
     92e:	55 1f       	adc	r21, r21
     930:	f2 cf       	rjmp	.-28     	; 0x916 <__fp_split3+0xe>
     932:	46 95       	lsr	r20
     934:	f1 df       	rcall	.-30     	; 0x918 <__fp_splitA>
     936:	08 c0       	rjmp	.+16     	; 0x948 <__fp_splitA+0x30>
     938:	16 16       	cp	r1, r22
     93a:	17 06       	cpc	r1, r23
     93c:	18 06       	cpc	r1, r24
     93e:	99 1f       	adc	r25, r25
     940:	f1 cf       	rjmp	.-30     	; 0x924 <__fp_splitA+0xc>
     942:	86 95       	lsr	r24
     944:	71 05       	cpc	r23, r1
     946:	61 05       	cpc	r22, r1
     948:	08 94       	sec
     94a:	08 95       	ret

0000094c <__fp_zero>:
     94c:	e8 94       	clt

0000094e <__fp_szero>:
     94e:	bb 27       	eor	r27, r27
     950:	66 27       	eor	r22, r22
     952:	77 27       	eor	r23, r23
     954:	cb 01       	movw	r24, r22
     956:	97 f9       	bld	r25, 7
     958:	08 95       	ret

0000095a <__mulsf3>:
     95a:	0e 94 c0 04 	call	0x980	; 0x980 <__mulsf3x>
     95e:	0c 94 31 05 	jmp	0xa62	; 0xa62 <__fp_round>
     962:	0e 94 23 05 	call	0xa46	; 0xa46 <__fp_pscA>
     966:	38 f0       	brcs	.+14     	; 0x976 <__mulsf3+0x1c>
     968:	0e 94 2a 05 	call	0xa54	; 0xa54 <__fp_pscB>
     96c:	20 f0       	brcs	.+8      	; 0x976 <__mulsf3+0x1c>
     96e:	95 23       	and	r25, r21
     970:	11 f0       	breq	.+4      	; 0x976 <__mulsf3+0x1c>
     972:	0c 94 1a 05 	jmp	0xa34	; 0xa34 <__fp_inf>
     976:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__fp_nan>
     97a:	11 24       	eor	r1, r1
     97c:	0c 94 a7 04 	jmp	0x94e	; 0x94e <__fp_szero>

00000980 <__mulsf3x>:
     980:	0e 94 84 04 	call	0x908	; 0x908 <__fp_split3>
     984:	70 f3       	brcs	.-36     	; 0x962 <__mulsf3+0x8>

00000986 <__mulsf3_pse>:
     986:	95 9f       	mul	r25, r21
     988:	c1 f3       	breq	.-16     	; 0x97a <__mulsf3+0x20>
     98a:	95 0f       	add	r25, r21
     98c:	50 e0       	ldi	r21, 0x00	; 0
     98e:	55 1f       	adc	r21, r21
     990:	62 9f       	mul	r22, r18
     992:	f0 01       	movw	r30, r0
     994:	72 9f       	mul	r23, r18
     996:	bb 27       	eor	r27, r27
     998:	f0 0d       	add	r31, r0
     99a:	b1 1d       	adc	r27, r1
     99c:	63 9f       	mul	r22, r19
     99e:	aa 27       	eor	r26, r26
     9a0:	f0 0d       	add	r31, r0
     9a2:	b1 1d       	adc	r27, r1
     9a4:	aa 1f       	adc	r26, r26
     9a6:	64 9f       	mul	r22, r20
     9a8:	66 27       	eor	r22, r22
     9aa:	b0 0d       	add	r27, r0
     9ac:	a1 1d       	adc	r26, r1
     9ae:	66 1f       	adc	r22, r22
     9b0:	82 9f       	mul	r24, r18
     9b2:	22 27       	eor	r18, r18
     9b4:	b0 0d       	add	r27, r0
     9b6:	a1 1d       	adc	r26, r1
     9b8:	62 1f       	adc	r22, r18
     9ba:	73 9f       	mul	r23, r19
     9bc:	b0 0d       	add	r27, r0
     9be:	a1 1d       	adc	r26, r1
     9c0:	62 1f       	adc	r22, r18
     9c2:	83 9f       	mul	r24, r19
     9c4:	a0 0d       	add	r26, r0
     9c6:	61 1d       	adc	r22, r1
     9c8:	22 1f       	adc	r18, r18
     9ca:	74 9f       	mul	r23, r20
     9cc:	33 27       	eor	r19, r19
     9ce:	a0 0d       	add	r26, r0
     9d0:	61 1d       	adc	r22, r1
     9d2:	23 1f       	adc	r18, r19
     9d4:	84 9f       	mul	r24, r20
     9d6:	60 0d       	add	r22, r0
     9d8:	21 1d       	adc	r18, r1
     9da:	82 2f       	mov	r24, r18
     9dc:	76 2f       	mov	r23, r22
     9de:	6a 2f       	mov	r22, r26
     9e0:	11 24       	eor	r1, r1
     9e2:	9f 57       	subi	r25, 0x7F	; 127
     9e4:	50 40       	sbci	r21, 0x00	; 0
     9e6:	9a f0       	brmi	.+38     	; 0xa0e <__mulsf3_pse+0x88>
     9e8:	f1 f0       	breq	.+60     	; 0xa26 <__mulsf3_pse+0xa0>
     9ea:	88 23       	and	r24, r24
     9ec:	4a f0       	brmi	.+18     	; 0xa00 <__mulsf3_pse+0x7a>
     9ee:	ee 0f       	add	r30, r30
     9f0:	ff 1f       	adc	r31, r31
     9f2:	bb 1f       	adc	r27, r27
     9f4:	66 1f       	adc	r22, r22
     9f6:	77 1f       	adc	r23, r23
     9f8:	88 1f       	adc	r24, r24
     9fa:	91 50       	subi	r25, 0x01	; 1
     9fc:	50 40       	sbci	r21, 0x00	; 0
     9fe:	a9 f7       	brne	.-22     	; 0x9ea <__mulsf3_pse+0x64>
     a00:	9e 3f       	cpi	r25, 0xFE	; 254
     a02:	51 05       	cpc	r21, r1
     a04:	80 f0       	brcs	.+32     	; 0xa26 <__mulsf3_pse+0xa0>
     a06:	0c 94 1a 05 	jmp	0xa34	; 0xa34 <__fp_inf>
     a0a:	0c 94 a7 04 	jmp	0x94e	; 0x94e <__fp_szero>
     a0e:	5f 3f       	cpi	r21, 0xFF	; 255
     a10:	e4 f3       	brlt	.-8      	; 0xa0a <__mulsf3_pse+0x84>
     a12:	98 3e       	cpi	r25, 0xE8	; 232
     a14:	d4 f3       	brlt	.-12     	; 0xa0a <__mulsf3_pse+0x84>
     a16:	86 95       	lsr	r24
     a18:	77 95       	ror	r23
     a1a:	67 95       	ror	r22
     a1c:	b7 95       	ror	r27
     a1e:	f7 95       	ror	r31
     a20:	e7 95       	ror	r30
     a22:	9f 5f       	subi	r25, 0xFF	; 255
     a24:	c1 f7       	brne	.-16     	; 0xa16 <__mulsf3_pse+0x90>
     a26:	fe 2b       	or	r31, r30
     a28:	88 0f       	add	r24, r24
     a2a:	91 1d       	adc	r25, r1
     a2c:	96 95       	lsr	r25
     a2e:	87 95       	ror	r24
     a30:	97 f9       	bld	r25, 7
     a32:	08 95       	ret

00000a34 <__fp_inf>:
     a34:	97 f9       	bld	r25, 7
     a36:	9f 67       	ori	r25, 0x7F	; 127
     a38:	80 e8       	ldi	r24, 0x80	; 128
     a3a:	70 e0       	ldi	r23, 0x00	; 0
     a3c:	60 e0       	ldi	r22, 0x00	; 0
     a3e:	08 95       	ret

00000a40 <__fp_nan>:
     a40:	9f ef       	ldi	r25, 0xFF	; 255
     a42:	80 ec       	ldi	r24, 0xC0	; 192
     a44:	08 95       	ret

00000a46 <__fp_pscA>:
     a46:	00 24       	eor	r0, r0
     a48:	0a 94       	dec	r0
     a4a:	16 16       	cp	r1, r22
     a4c:	17 06       	cpc	r1, r23
     a4e:	18 06       	cpc	r1, r24
     a50:	09 06       	cpc	r0, r25
     a52:	08 95       	ret

00000a54 <__fp_pscB>:
     a54:	00 24       	eor	r0, r0
     a56:	0a 94       	dec	r0
     a58:	12 16       	cp	r1, r18
     a5a:	13 06       	cpc	r1, r19
     a5c:	14 06       	cpc	r1, r20
     a5e:	05 06       	cpc	r0, r21
     a60:	08 95       	ret

00000a62 <__fp_round>:
     a62:	09 2e       	mov	r0, r25
     a64:	03 94       	inc	r0
     a66:	00 0c       	add	r0, r0
     a68:	11 f4       	brne	.+4      	; 0xa6e <__fp_round+0xc>
     a6a:	88 23       	and	r24, r24
     a6c:	52 f0       	brmi	.+20     	; 0xa82 <__fp_round+0x20>
     a6e:	bb 0f       	add	r27, r27
     a70:	40 f4       	brcc	.+16     	; 0xa82 <__fp_round+0x20>
     a72:	bf 2b       	or	r27, r31
     a74:	11 f4       	brne	.+4      	; 0xa7a <__fp_round+0x18>
     a76:	60 ff       	sbrs	r22, 0
     a78:	04 c0       	rjmp	.+8      	; 0xa82 <__fp_round+0x20>
     a7a:	6f 5f       	subi	r22, 0xFF	; 255
     a7c:	7f 4f       	sbci	r23, 0xFF	; 255
     a7e:	8f 4f       	sbci	r24, 0xFF	; 255
     a80:	9f 4f       	sbci	r25, 0xFF	; 255
     a82:	08 95       	ret

00000a84 <__tablejump2__>:
     a84:	ee 0f       	add	r30, r30
     a86:	ff 1f       	adc	r31, r31
     a88:	05 90       	lpm	r0, Z+
     a8a:	f4 91       	lpm	r31, Z
     a8c:	e0 2d       	mov	r30, r0
     a8e:	09 94       	ijmp

00000a90 <__muluhisi3>:
     a90:	0e 94 53 05 	call	0xaa6	; 0xaa6 <__umulhisi3>
     a94:	a5 9f       	mul	r26, r21
     a96:	90 0d       	add	r25, r0
     a98:	b4 9f       	mul	r27, r20
     a9a:	90 0d       	add	r25, r0
     a9c:	a4 9f       	mul	r26, r20
     a9e:	80 0d       	add	r24, r0
     aa0:	91 1d       	adc	r25, r1
     aa2:	11 24       	eor	r1, r1
     aa4:	08 95       	ret

00000aa6 <__umulhisi3>:
     aa6:	a2 9f       	mul	r26, r18
     aa8:	b0 01       	movw	r22, r0
     aaa:	b3 9f       	mul	r27, r19
     aac:	c0 01       	movw	r24, r0
     aae:	a3 9f       	mul	r26, r19
     ab0:	70 0d       	add	r23, r0
     ab2:	81 1d       	adc	r24, r1
     ab4:	11 24       	eor	r1, r1
     ab6:	91 1d       	adc	r25, r1
     ab8:	b2 9f       	mul	r27, r18
     aba:	70 0d       	add	r23, r0
     abc:	81 1d       	adc	r24, r1
     abe:	11 24       	eor	r1, r1
     ac0:	91 1d       	adc	r25, r1
     ac2:	08 95       	ret

00000ac4 <dtostrf>:
     ac4:	ef 92       	push	r14
     ac6:	0f 93       	push	r16
     ac8:	1f 93       	push	r17
     aca:	cf 93       	push	r28
     acc:	df 93       	push	r29
     ace:	e8 01       	movw	r28, r16
     ad0:	47 fd       	sbrc	r20, 7
     ad2:	02 c0       	rjmp	.+4      	; 0xad8 <dtostrf+0x14>
     ad4:	34 e0       	ldi	r19, 0x04	; 4
     ad6:	01 c0       	rjmp	.+2      	; 0xada <dtostrf+0x16>
     ad8:	34 e1       	ldi	r19, 0x14	; 20
     ada:	04 2e       	mov	r0, r20
     adc:	00 0c       	add	r0, r0
     ade:	55 0b       	sbc	r21, r21
     ae0:	57 ff       	sbrs	r21, 7
     ae2:	03 c0       	rjmp	.+6      	; 0xaea <dtostrf+0x26>
     ae4:	51 95       	neg	r21
     ae6:	41 95       	neg	r20
     ae8:	51 09       	sbc	r21, r1
     aea:	e3 2e       	mov	r14, r19
     aec:	02 2f       	mov	r16, r18
     aee:	24 2f       	mov	r18, r20
     af0:	ae 01       	movw	r20, r28
     af2:	0e 94 85 07 	call	0xf0a	; 0xf0a <dtoa_prf>
     af6:	ce 01       	movw	r24, r28
     af8:	df 91       	pop	r29
     afa:	cf 91       	pop	r28
     afc:	1f 91       	pop	r17
     afe:	0f 91       	pop	r16
     b00:	ef 90       	pop	r14
     b02:	08 95       	ret

00000b04 <sprintf>:
     b04:	ae e0       	ldi	r26, 0x0E	; 14
     b06:	b0 e0       	ldi	r27, 0x00	; 0
     b08:	e8 e8       	ldi	r30, 0x88	; 136
     b0a:	f5 e0       	ldi	r31, 0x05	; 5
     b0c:	0c 94 75 0a 	jmp	0x14ea	; 0x14ea <__prologue_saves__+0x1c>
     b10:	0d 89       	ldd	r16, Y+21	; 0x15
     b12:	1e 89       	ldd	r17, Y+22	; 0x16
     b14:	86 e0       	ldi	r24, 0x06	; 6
     b16:	8c 83       	std	Y+4, r24	; 0x04
     b18:	1a 83       	std	Y+2, r17	; 0x02
     b1a:	09 83       	std	Y+1, r16	; 0x01
     b1c:	8f ef       	ldi	r24, 0xFF	; 255
     b1e:	9f e7       	ldi	r25, 0x7F	; 127
     b20:	9e 83       	std	Y+6, r25	; 0x06
     b22:	8d 83       	std	Y+5, r24	; 0x05
     b24:	ae 01       	movw	r20, r28
     b26:	47 5e       	subi	r20, 0xE7	; 231
     b28:	5f 4f       	sbci	r21, 0xFF	; 255
     b2a:	6f 89       	ldd	r22, Y+23	; 0x17
     b2c:	78 8d       	ldd	r23, Y+24	; 0x18
     b2e:	ce 01       	movw	r24, r28
     b30:	01 96       	adiw	r24, 0x01	; 1
     b32:	0e 94 a4 05 	call	0xb48	; 0xb48 <vfprintf>
     b36:	ef 81       	ldd	r30, Y+7	; 0x07
     b38:	f8 85       	ldd	r31, Y+8	; 0x08
     b3a:	e0 0f       	add	r30, r16
     b3c:	f1 1f       	adc	r31, r17
     b3e:	10 82       	st	Z, r1
     b40:	2e 96       	adiw	r28, 0x0e	; 14
     b42:	e4 e0       	ldi	r30, 0x04	; 4
     b44:	0c 94 91 0a 	jmp	0x1522	; 0x1522 <__epilogue_restores__+0x1c>

00000b48 <vfprintf>:
     b48:	ab e0       	ldi	r26, 0x0B	; 11
     b4a:	b0 e0       	ldi	r27, 0x00	; 0
     b4c:	ea ea       	ldi	r30, 0xAA	; 170
     b4e:	f5 e0       	ldi	r31, 0x05	; 5
     b50:	0c 94 67 0a 	jmp	0x14ce	; 0x14ce <__prologue_saves__>
     b54:	6c 01       	movw	r12, r24
     b56:	7b 01       	movw	r14, r22
     b58:	8a 01       	movw	r16, r20
     b5a:	fc 01       	movw	r30, r24
     b5c:	17 82       	std	Z+7, r1	; 0x07
     b5e:	16 82       	std	Z+6, r1	; 0x06
     b60:	83 81       	ldd	r24, Z+3	; 0x03
     b62:	81 ff       	sbrs	r24, 1
     b64:	cc c1       	rjmp	.+920    	; 0xefe <vfprintf+0x3b6>
     b66:	ce 01       	movw	r24, r28
     b68:	01 96       	adiw	r24, 0x01	; 1
     b6a:	3c 01       	movw	r6, r24
     b6c:	f6 01       	movw	r30, r12
     b6e:	93 81       	ldd	r25, Z+3	; 0x03
     b70:	f7 01       	movw	r30, r14
     b72:	93 fd       	sbrc	r25, 3
     b74:	85 91       	lpm	r24, Z+
     b76:	93 ff       	sbrs	r25, 3
     b78:	81 91       	ld	r24, Z+
     b7a:	7f 01       	movw	r14, r30
     b7c:	88 23       	and	r24, r24
     b7e:	09 f4       	brne	.+2      	; 0xb82 <vfprintf+0x3a>
     b80:	ba c1       	rjmp	.+884    	; 0xef6 <vfprintf+0x3ae>
     b82:	85 32       	cpi	r24, 0x25	; 37
     b84:	39 f4       	brne	.+14     	; 0xb94 <vfprintf+0x4c>
     b86:	93 fd       	sbrc	r25, 3
     b88:	85 91       	lpm	r24, Z+
     b8a:	93 ff       	sbrs	r25, 3
     b8c:	81 91       	ld	r24, Z+
     b8e:	7f 01       	movw	r14, r30
     b90:	85 32       	cpi	r24, 0x25	; 37
     b92:	29 f4       	brne	.+10     	; 0xb9e <vfprintf+0x56>
     b94:	b6 01       	movw	r22, r12
     b96:	90 e0       	ldi	r25, 0x00	; 0
     b98:	0e 94 cd 09 	call	0x139a	; 0x139a <fputc>
     b9c:	e7 cf       	rjmp	.-50     	; 0xb6c <vfprintf+0x24>
     b9e:	91 2c       	mov	r9, r1
     ba0:	21 2c       	mov	r2, r1
     ba2:	31 2c       	mov	r3, r1
     ba4:	ff e1       	ldi	r31, 0x1F	; 31
     ba6:	f3 15       	cp	r31, r3
     ba8:	d8 f0       	brcs	.+54     	; 0xbe0 <vfprintf+0x98>
     baa:	8b 32       	cpi	r24, 0x2B	; 43
     bac:	79 f0       	breq	.+30     	; 0xbcc <vfprintf+0x84>
     bae:	38 f4       	brcc	.+14     	; 0xbbe <vfprintf+0x76>
     bb0:	80 32       	cpi	r24, 0x20	; 32
     bb2:	79 f0       	breq	.+30     	; 0xbd2 <vfprintf+0x8a>
     bb4:	83 32       	cpi	r24, 0x23	; 35
     bb6:	a1 f4       	brne	.+40     	; 0xbe0 <vfprintf+0x98>
     bb8:	23 2d       	mov	r18, r3
     bba:	20 61       	ori	r18, 0x10	; 16
     bbc:	1d c0       	rjmp	.+58     	; 0xbf8 <vfprintf+0xb0>
     bbe:	8d 32       	cpi	r24, 0x2D	; 45
     bc0:	61 f0       	breq	.+24     	; 0xbda <vfprintf+0x92>
     bc2:	80 33       	cpi	r24, 0x30	; 48
     bc4:	69 f4       	brne	.+26     	; 0xbe0 <vfprintf+0x98>
     bc6:	23 2d       	mov	r18, r3
     bc8:	21 60       	ori	r18, 0x01	; 1
     bca:	16 c0       	rjmp	.+44     	; 0xbf8 <vfprintf+0xb0>
     bcc:	83 2d       	mov	r24, r3
     bce:	82 60       	ori	r24, 0x02	; 2
     bd0:	38 2e       	mov	r3, r24
     bd2:	e3 2d       	mov	r30, r3
     bd4:	e4 60       	ori	r30, 0x04	; 4
     bd6:	3e 2e       	mov	r3, r30
     bd8:	2a c0       	rjmp	.+84     	; 0xc2e <vfprintf+0xe6>
     bda:	f3 2d       	mov	r31, r3
     bdc:	f8 60       	ori	r31, 0x08	; 8
     bde:	1d c0       	rjmp	.+58     	; 0xc1a <vfprintf+0xd2>
     be0:	37 fc       	sbrc	r3, 7
     be2:	2d c0       	rjmp	.+90     	; 0xc3e <vfprintf+0xf6>
     be4:	20 ed       	ldi	r18, 0xD0	; 208
     be6:	28 0f       	add	r18, r24
     be8:	2a 30       	cpi	r18, 0x0A	; 10
     bea:	40 f0       	brcs	.+16     	; 0xbfc <vfprintf+0xb4>
     bec:	8e 32       	cpi	r24, 0x2E	; 46
     bee:	b9 f4       	brne	.+46     	; 0xc1e <vfprintf+0xd6>
     bf0:	36 fc       	sbrc	r3, 6
     bf2:	81 c1       	rjmp	.+770    	; 0xef6 <vfprintf+0x3ae>
     bf4:	23 2d       	mov	r18, r3
     bf6:	20 64       	ori	r18, 0x40	; 64
     bf8:	32 2e       	mov	r3, r18
     bfa:	19 c0       	rjmp	.+50     	; 0xc2e <vfprintf+0xe6>
     bfc:	36 fe       	sbrs	r3, 6
     bfe:	06 c0       	rjmp	.+12     	; 0xc0c <vfprintf+0xc4>
     c00:	8a e0       	ldi	r24, 0x0A	; 10
     c02:	98 9e       	mul	r9, r24
     c04:	20 0d       	add	r18, r0
     c06:	11 24       	eor	r1, r1
     c08:	92 2e       	mov	r9, r18
     c0a:	11 c0       	rjmp	.+34     	; 0xc2e <vfprintf+0xe6>
     c0c:	ea e0       	ldi	r30, 0x0A	; 10
     c0e:	2e 9e       	mul	r2, r30
     c10:	20 0d       	add	r18, r0
     c12:	11 24       	eor	r1, r1
     c14:	22 2e       	mov	r2, r18
     c16:	f3 2d       	mov	r31, r3
     c18:	f0 62       	ori	r31, 0x20	; 32
     c1a:	3f 2e       	mov	r3, r31
     c1c:	08 c0       	rjmp	.+16     	; 0xc2e <vfprintf+0xe6>
     c1e:	8c 36       	cpi	r24, 0x6C	; 108
     c20:	21 f4       	brne	.+8      	; 0xc2a <vfprintf+0xe2>
     c22:	83 2d       	mov	r24, r3
     c24:	80 68       	ori	r24, 0x80	; 128
     c26:	38 2e       	mov	r3, r24
     c28:	02 c0       	rjmp	.+4      	; 0xc2e <vfprintf+0xe6>
     c2a:	88 36       	cpi	r24, 0x68	; 104
     c2c:	41 f4       	brne	.+16     	; 0xc3e <vfprintf+0xf6>
     c2e:	f7 01       	movw	r30, r14
     c30:	93 fd       	sbrc	r25, 3
     c32:	85 91       	lpm	r24, Z+
     c34:	93 ff       	sbrs	r25, 3
     c36:	81 91       	ld	r24, Z+
     c38:	7f 01       	movw	r14, r30
     c3a:	81 11       	cpse	r24, r1
     c3c:	b3 cf       	rjmp	.-154    	; 0xba4 <vfprintf+0x5c>
     c3e:	98 2f       	mov	r25, r24
     c40:	9f 7d       	andi	r25, 0xDF	; 223
     c42:	95 54       	subi	r25, 0x45	; 69
     c44:	93 30       	cpi	r25, 0x03	; 3
     c46:	28 f4       	brcc	.+10     	; 0xc52 <vfprintf+0x10a>
     c48:	0c 5f       	subi	r16, 0xFC	; 252
     c4a:	1f 4f       	sbci	r17, 0xFF	; 255
     c4c:	9f e3       	ldi	r25, 0x3F	; 63
     c4e:	99 83       	std	Y+1, r25	; 0x01
     c50:	0d c0       	rjmp	.+26     	; 0xc6c <vfprintf+0x124>
     c52:	83 36       	cpi	r24, 0x63	; 99
     c54:	31 f0       	breq	.+12     	; 0xc62 <vfprintf+0x11a>
     c56:	83 37       	cpi	r24, 0x73	; 115
     c58:	71 f0       	breq	.+28     	; 0xc76 <vfprintf+0x12e>
     c5a:	83 35       	cpi	r24, 0x53	; 83
     c5c:	09 f0       	breq	.+2      	; 0xc60 <vfprintf+0x118>
     c5e:	59 c0       	rjmp	.+178    	; 0xd12 <vfprintf+0x1ca>
     c60:	21 c0       	rjmp	.+66     	; 0xca4 <vfprintf+0x15c>
     c62:	f8 01       	movw	r30, r16
     c64:	80 81       	ld	r24, Z
     c66:	89 83       	std	Y+1, r24	; 0x01
     c68:	0e 5f       	subi	r16, 0xFE	; 254
     c6a:	1f 4f       	sbci	r17, 0xFF	; 255
     c6c:	88 24       	eor	r8, r8
     c6e:	83 94       	inc	r8
     c70:	91 2c       	mov	r9, r1
     c72:	53 01       	movw	r10, r6
     c74:	13 c0       	rjmp	.+38     	; 0xc9c <vfprintf+0x154>
     c76:	28 01       	movw	r4, r16
     c78:	f2 e0       	ldi	r31, 0x02	; 2
     c7a:	4f 0e       	add	r4, r31
     c7c:	51 1c       	adc	r5, r1
     c7e:	f8 01       	movw	r30, r16
     c80:	a0 80       	ld	r10, Z
     c82:	b1 80       	ldd	r11, Z+1	; 0x01
     c84:	36 fe       	sbrs	r3, 6
     c86:	03 c0       	rjmp	.+6      	; 0xc8e <vfprintf+0x146>
     c88:	69 2d       	mov	r22, r9
     c8a:	70 e0       	ldi	r23, 0x00	; 0
     c8c:	02 c0       	rjmp	.+4      	; 0xc92 <vfprintf+0x14a>
     c8e:	6f ef       	ldi	r22, 0xFF	; 255
     c90:	7f ef       	ldi	r23, 0xFF	; 255
     c92:	c5 01       	movw	r24, r10
     c94:	0e 94 c2 09 	call	0x1384	; 0x1384 <strnlen>
     c98:	4c 01       	movw	r8, r24
     c9a:	82 01       	movw	r16, r4
     c9c:	f3 2d       	mov	r31, r3
     c9e:	ff 77       	andi	r31, 0x7F	; 127
     ca0:	3f 2e       	mov	r3, r31
     ca2:	16 c0       	rjmp	.+44     	; 0xcd0 <vfprintf+0x188>
     ca4:	28 01       	movw	r4, r16
     ca6:	22 e0       	ldi	r18, 0x02	; 2
     ca8:	42 0e       	add	r4, r18
     caa:	51 1c       	adc	r5, r1
     cac:	f8 01       	movw	r30, r16
     cae:	a0 80       	ld	r10, Z
     cb0:	b1 80       	ldd	r11, Z+1	; 0x01
     cb2:	36 fe       	sbrs	r3, 6
     cb4:	03 c0       	rjmp	.+6      	; 0xcbc <vfprintf+0x174>
     cb6:	69 2d       	mov	r22, r9
     cb8:	70 e0       	ldi	r23, 0x00	; 0
     cba:	02 c0       	rjmp	.+4      	; 0xcc0 <vfprintf+0x178>
     cbc:	6f ef       	ldi	r22, 0xFF	; 255
     cbe:	7f ef       	ldi	r23, 0xFF	; 255
     cc0:	c5 01       	movw	r24, r10
     cc2:	0e 94 b7 09 	call	0x136e	; 0x136e <strnlen_P>
     cc6:	4c 01       	movw	r8, r24
     cc8:	f3 2d       	mov	r31, r3
     cca:	f0 68       	ori	r31, 0x80	; 128
     ccc:	3f 2e       	mov	r3, r31
     cce:	82 01       	movw	r16, r4
     cd0:	33 fc       	sbrc	r3, 3
     cd2:	1b c0       	rjmp	.+54     	; 0xd0a <vfprintf+0x1c2>
     cd4:	82 2d       	mov	r24, r2
     cd6:	90 e0       	ldi	r25, 0x00	; 0
     cd8:	88 16       	cp	r8, r24
     cda:	99 06       	cpc	r9, r25
     cdc:	b0 f4       	brcc	.+44     	; 0xd0a <vfprintf+0x1c2>
     cde:	b6 01       	movw	r22, r12
     ce0:	80 e2       	ldi	r24, 0x20	; 32
     ce2:	90 e0       	ldi	r25, 0x00	; 0
     ce4:	0e 94 cd 09 	call	0x139a	; 0x139a <fputc>
     ce8:	2a 94       	dec	r2
     cea:	f4 cf       	rjmp	.-24     	; 0xcd4 <vfprintf+0x18c>
     cec:	f5 01       	movw	r30, r10
     cee:	37 fc       	sbrc	r3, 7
     cf0:	85 91       	lpm	r24, Z+
     cf2:	37 fe       	sbrs	r3, 7
     cf4:	81 91       	ld	r24, Z+
     cf6:	5f 01       	movw	r10, r30
     cf8:	b6 01       	movw	r22, r12
     cfa:	90 e0       	ldi	r25, 0x00	; 0
     cfc:	0e 94 cd 09 	call	0x139a	; 0x139a <fputc>
     d00:	21 10       	cpse	r2, r1
     d02:	2a 94       	dec	r2
     d04:	21 e0       	ldi	r18, 0x01	; 1
     d06:	82 1a       	sub	r8, r18
     d08:	91 08       	sbc	r9, r1
     d0a:	81 14       	cp	r8, r1
     d0c:	91 04       	cpc	r9, r1
     d0e:	71 f7       	brne	.-36     	; 0xcec <vfprintf+0x1a4>
     d10:	e8 c0       	rjmp	.+464    	; 0xee2 <vfprintf+0x39a>
     d12:	84 36       	cpi	r24, 0x64	; 100
     d14:	11 f0       	breq	.+4      	; 0xd1a <vfprintf+0x1d2>
     d16:	89 36       	cpi	r24, 0x69	; 105
     d18:	41 f5       	brne	.+80     	; 0xd6a <vfprintf+0x222>
     d1a:	f8 01       	movw	r30, r16
     d1c:	37 fe       	sbrs	r3, 7
     d1e:	07 c0       	rjmp	.+14     	; 0xd2e <vfprintf+0x1e6>
     d20:	60 81       	ld	r22, Z
     d22:	71 81       	ldd	r23, Z+1	; 0x01
     d24:	82 81       	ldd	r24, Z+2	; 0x02
     d26:	93 81       	ldd	r25, Z+3	; 0x03
     d28:	0c 5f       	subi	r16, 0xFC	; 252
     d2a:	1f 4f       	sbci	r17, 0xFF	; 255
     d2c:	08 c0       	rjmp	.+16     	; 0xd3e <vfprintf+0x1f6>
     d2e:	60 81       	ld	r22, Z
     d30:	71 81       	ldd	r23, Z+1	; 0x01
     d32:	07 2e       	mov	r0, r23
     d34:	00 0c       	add	r0, r0
     d36:	88 0b       	sbc	r24, r24
     d38:	99 0b       	sbc	r25, r25
     d3a:	0e 5f       	subi	r16, 0xFE	; 254
     d3c:	1f 4f       	sbci	r17, 0xFF	; 255
     d3e:	f3 2d       	mov	r31, r3
     d40:	ff 76       	andi	r31, 0x6F	; 111
     d42:	3f 2e       	mov	r3, r31
     d44:	97 ff       	sbrs	r25, 7
     d46:	09 c0       	rjmp	.+18     	; 0xd5a <vfprintf+0x212>
     d48:	90 95       	com	r25
     d4a:	80 95       	com	r24
     d4c:	70 95       	com	r23
     d4e:	61 95       	neg	r22
     d50:	7f 4f       	sbci	r23, 0xFF	; 255
     d52:	8f 4f       	sbci	r24, 0xFF	; 255
     d54:	9f 4f       	sbci	r25, 0xFF	; 255
     d56:	f0 68       	ori	r31, 0x80	; 128
     d58:	3f 2e       	mov	r3, r31
     d5a:	2a e0       	ldi	r18, 0x0A	; 10
     d5c:	30 e0       	ldi	r19, 0x00	; 0
     d5e:	a3 01       	movw	r20, r6
     d60:	0e 94 09 0a 	call	0x1412	; 0x1412 <__ultoa_invert>
     d64:	88 2e       	mov	r8, r24
     d66:	86 18       	sub	r8, r6
     d68:	45 c0       	rjmp	.+138    	; 0xdf4 <vfprintf+0x2ac>
     d6a:	85 37       	cpi	r24, 0x75	; 117
     d6c:	31 f4       	brne	.+12     	; 0xd7a <vfprintf+0x232>
     d6e:	23 2d       	mov	r18, r3
     d70:	2f 7e       	andi	r18, 0xEF	; 239
     d72:	b2 2e       	mov	r11, r18
     d74:	2a e0       	ldi	r18, 0x0A	; 10
     d76:	30 e0       	ldi	r19, 0x00	; 0
     d78:	25 c0       	rjmp	.+74     	; 0xdc4 <vfprintf+0x27c>
     d7a:	93 2d       	mov	r25, r3
     d7c:	99 7f       	andi	r25, 0xF9	; 249
     d7e:	b9 2e       	mov	r11, r25
     d80:	8f 36       	cpi	r24, 0x6F	; 111
     d82:	c1 f0       	breq	.+48     	; 0xdb4 <vfprintf+0x26c>
     d84:	18 f4       	brcc	.+6      	; 0xd8c <vfprintf+0x244>
     d86:	88 35       	cpi	r24, 0x58	; 88
     d88:	79 f0       	breq	.+30     	; 0xda8 <vfprintf+0x260>
     d8a:	b5 c0       	rjmp	.+362    	; 0xef6 <vfprintf+0x3ae>
     d8c:	80 37       	cpi	r24, 0x70	; 112
     d8e:	19 f0       	breq	.+6      	; 0xd96 <vfprintf+0x24e>
     d90:	88 37       	cpi	r24, 0x78	; 120
     d92:	21 f0       	breq	.+8      	; 0xd9c <vfprintf+0x254>
     d94:	b0 c0       	rjmp	.+352    	; 0xef6 <vfprintf+0x3ae>
     d96:	e9 2f       	mov	r30, r25
     d98:	e0 61       	ori	r30, 0x10	; 16
     d9a:	be 2e       	mov	r11, r30
     d9c:	b4 fe       	sbrs	r11, 4
     d9e:	0d c0       	rjmp	.+26     	; 0xdba <vfprintf+0x272>
     da0:	fb 2d       	mov	r31, r11
     da2:	f4 60       	ori	r31, 0x04	; 4
     da4:	bf 2e       	mov	r11, r31
     da6:	09 c0       	rjmp	.+18     	; 0xdba <vfprintf+0x272>
     da8:	34 fe       	sbrs	r3, 4
     daa:	0a c0       	rjmp	.+20     	; 0xdc0 <vfprintf+0x278>
     dac:	29 2f       	mov	r18, r25
     dae:	26 60       	ori	r18, 0x06	; 6
     db0:	b2 2e       	mov	r11, r18
     db2:	06 c0       	rjmp	.+12     	; 0xdc0 <vfprintf+0x278>
     db4:	28 e0       	ldi	r18, 0x08	; 8
     db6:	30 e0       	ldi	r19, 0x00	; 0
     db8:	05 c0       	rjmp	.+10     	; 0xdc4 <vfprintf+0x27c>
     dba:	20 e1       	ldi	r18, 0x10	; 16
     dbc:	30 e0       	ldi	r19, 0x00	; 0
     dbe:	02 c0       	rjmp	.+4      	; 0xdc4 <vfprintf+0x27c>
     dc0:	20 e1       	ldi	r18, 0x10	; 16
     dc2:	32 e0       	ldi	r19, 0x02	; 2
     dc4:	f8 01       	movw	r30, r16
     dc6:	b7 fe       	sbrs	r11, 7
     dc8:	07 c0       	rjmp	.+14     	; 0xdd8 <vfprintf+0x290>
     dca:	60 81       	ld	r22, Z
     dcc:	71 81       	ldd	r23, Z+1	; 0x01
     dce:	82 81       	ldd	r24, Z+2	; 0x02
     dd0:	93 81       	ldd	r25, Z+3	; 0x03
     dd2:	0c 5f       	subi	r16, 0xFC	; 252
     dd4:	1f 4f       	sbci	r17, 0xFF	; 255
     dd6:	06 c0       	rjmp	.+12     	; 0xde4 <vfprintf+0x29c>
     dd8:	60 81       	ld	r22, Z
     dda:	71 81       	ldd	r23, Z+1	; 0x01
     ddc:	80 e0       	ldi	r24, 0x00	; 0
     dde:	90 e0       	ldi	r25, 0x00	; 0
     de0:	0e 5f       	subi	r16, 0xFE	; 254
     de2:	1f 4f       	sbci	r17, 0xFF	; 255
     de4:	a3 01       	movw	r20, r6
     de6:	0e 94 09 0a 	call	0x1412	; 0x1412 <__ultoa_invert>
     dea:	88 2e       	mov	r8, r24
     dec:	86 18       	sub	r8, r6
     dee:	fb 2d       	mov	r31, r11
     df0:	ff 77       	andi	r31, 0x7F	; 127
     df2:	3f 2e       	mov	r3, r31
     df4:	36 fe       	sbrs	r3, 6
     df6:	0d c0       	rjmp	.+26     	; 0xe12 <vfprintf+0x2ca>
     df8:	23 2d       	mov	r18, r3
     dfa:	2e 7f       	andi	r18, 0xFE	; 254
     dfc:	a2 2e       	mov	r10, r18
     dfe:	89 14       	cp	r8, r9
     e00:	58 f4       	brcc	.+22     	; 0xe18 <vfprintf+0x2d0>
     e02:	34 fe       	sbrs	r3, 4
     e04:	0b c0       	rjmp	.+22     	; 0xe1c <vfprintf+0x2d4>
     e06:	32 fc       	sbrc	r3, 2
     e08:	09 c0       	rjmp	.+18     	; 0xe1c <vfprintf+0x2d4>
     e0a:	83 2d       	mov	r24, r3
     e0c:	8e 7e       	andi	r24, 0xEE	; 238
     e0e:	a8 2e       	mov	r10, r24
     e10:	05 c0       	rjmp	.+10     	; 0xe1c <vfprintf+0x2d4>
     e12:	b8 2c       	mov	r11, r8
     e14:	a3 2c       	mov	r10, r3
     e16:	03 c0       	rjmp	.+6      	; 0xe1e <vfprintf+0x2d6>
     e18:	b8 2c       	mov	r11, r8
     e1a:	01 c0       	rjmp	.+2      	; 0xe1e <vfprintf+0x2d6>
     e1c:	b9 2c       	mov	r11, r9
     e1e:	a4 fe       	sbrs	r10, 4
     e20:	0f c0       	rjmp	.+30     	; 0xe40 <vfprintf+0x2f8>
     e22:	fe 01       	movw	r30, r28
     e24:	e8 0d       	add	r30, r8
     e26:	f1 1d       	adc	r31, r1
     e28:	80 81       	ld	r24, Z
     e2a:	80 33       	cpi	r24, 0x30	; 48
     e2c:	21 f4       	brne	.+8      	; 0xe36 <vfprintf+0x2ee>
     e2e:	9a 2d       	mov	r25, r10
     e30:	99 7e       	andi	r25, 0xE9	; 233
     e32:	a9 2e       	mov	r10, r25
     e34:	09 c0       	rjmp	.+18     	; 0xe48 <vfprintf+0x300>
     e36:	a2 fe       	sbrs	r10, 2
     e38:	06 c0       	rjmp	.+12     	; 0xe46 <vfprintf+0x2fe>
     e3a:	b3 94       	inc	r11
     e3c:	b3 94       	inc	r11
     e3e:	04 c0       	rjmp	.+8      	; 0xe48 <vfprintf+0x300>
     e40:	8a 2d       	mov	r24, r10
     e42:	86 78       	andi	r24, 0x86	; 134
     e44:	09 f0       	breq	.+2      	; 0xe48 <vfprintf+0x300>
     e46:	b3 94       	inc	r11
     e48:	a3 fc       	sbrc	r10, 3
     e4a:	11 c0       	rjmp	.+34     	; 0xe6e <vfprintf+0x326>
     e4c:	a0 fe       	sbrs	r10, 0
     e4e:	06 c0       	rjmp	.+12     	; 0xe5c <vfprintf+0x314>
     e50:	b2 14       	cp	r11, r2
     e52:	88 f4       	brcc	.+34     	; 0xe76 <vfprintf+0x32e>
     e54:	28 0c       	add	r2, r8
     e56:	92 2c       	mov	r9, r2
     e58:	9b 18       	sub	r9, r11
     e5a:	0e c0       	rjmp	.+28     	; 0xe78 <vfprintf+0x330>
     e5c:	b2 14       	cp	r11, r2
     e5e:	60 f4       	brcc	.+24     	; 0xe78 <vfprintf+0x330>
     e60:	b6 01       	movw	r22, r12
     e62:	80 e2       	ldi	r24, 0x20	; 32
     e64:	90 e0       	ldi	r25, 0x00	; 0
     e66:	0e 94 cd 09 	call	0x139a	; 0x139a <fputc>
     e6a:	b3 94       	inc	r11
     e6c:	f7 cf       	rjmp	.-18     	; 0xe5c <vfprintf+0x314>
     e6e:	b2 14       	cp	r11, r2
     e70:	18 f4       	brcc	.+6      	; 0xe78 <vfprintf+0x330>
     e72:	2b 18       	sub	r2, r11
     e74:	02 c0       	rjmp	.+4      	; 0xe7a <vfprintf+0x332>
     e76:	98 2c       	mov	r9, r8
     e78:	21 2c       	mov	r2, r1
     e7a:	a4 fe       	sbrs	r10, 4
     e7c:	10 c0       	rjmp	.+32     	; 0xe9e <vfprintf+0x356>
     e7e:	b6 01       	movw	r22, r12
     e80:	80 e3       	ldi	r24, 0x30	; 48
     e82:	90 e0       	ldi	r25, 0x00	; 0
     e84:	0e 94 cd 09 	call	0x139a	; 0x139a <fputc>
     e88:	a2 fe       	sbrs	r10, 2
     e8a:	17 c0       	rjmp	.+46     	; 0xeba <vfprintf+0x372>
     e8c:	a1 fc       	sbrc	r10, 1
     e8e:	03 c0       	rjmp	.+6      	; 0xe96 <vfprintf+0x34e>
     e90:	88 e7       	ldi	r24, 0x78	; 120
     e92:	90 e0       	ldi	r25, 0x00	; 0
     e94:	02 c0       	rjmp	.+4      	; 0xe9a <vfprintf+0x352>
     e96:	88 e5       	ldi	r24, 0x58	; 88
     e98:	90 e0       	ldi	r25, 0x00	; 0
     e9a:	b6 01       	movw	r22, r12
     e9c:	0c c0       	rjmp	.+24     	; 0xeb6 <vfprintf+0x36e>
     e9e:	8a 2d       	mov	r24, r10
     ea0:	86 78       	andi	r24, 0x86	; 134
     ea2:	59 f0       	breq	.+22     	; 0xeba <vfprintf+0x372>
     ea4:	a1 fe       	sbrs	r10, 1
     ea6:	02 c0       	rjmp	.+4      	; 0xeac <vfprintf+0x364>
     ea8:	8b e2       	ldi	r24, 0x2B	; 43
     eaa:	01 c0       	rjmp	.+2      	; 0xeae <vfprintf+0x366>
     eac:	80 e2       	ldi	r24, 0x20	; 32
     eae:	a7 fc       	sbrc	r10, 7
     eb0:	8d e2       	ldi	r24, 0x2D	; 45
     eb2:	b6 01       	movw	r22, r12
     eb4:	90 e0       	ldi	r25, 0x00	; 0
     eb6:	0e 94 cd 09 	call	0x139a	; 0x139a <fputc>
     eba:	89 14       	cp	r8, r9
     ebc:	38 f4       	brcc	.+14     	; 0xecc <vfprintf+0x384>
     ebe:	b6 01       	movw	r22, r12
     ec0:	80 e3       	ldi	r24, 0x30	; 48
     ec2:	90 e0       	ldi	r25, 0x00	; 0
     ec4:	0e 94 cd 09 	call	0x139a	; 0x139a <fputc>
     ec8:	9a 94       	dec	r9
     eca:	f7 cf       	rjmp	.-18     	; 0xeba <vfprintf+0x372>
     ecc:	8a 94       	dec	r8
     ece:	f3 01       	movw	r30, r6
     ed0:	e8 0d       	add	r30, r8
     ed2:	f1 1d       	adc	r31, r1
     ed4:	80 81       	ld	r24, Z
     ed6:	b6 01       	movw	r22, r12
     ed8:	90 e0       	ldi	r25, 0x00	; 0
     eda:	0e 94 cd 09 	call	0x139a	; 0x139a <fputc>
     ede:	81 10       	cpse	r8, r1
     ee0:	f5 cf       	rjmp	.-22     	; 0xecc <vfprintf+0x384>
     ee2:	22 20       	and	r2, r2
     ee4:	09 f4       	brne	.+2      	; 0xee8 <vfprintf+0x3a0>
     ee6:	42 ce       	rjmp	.-892    	; 0xb6c <vfprintf+0x24>
     ee8:	b6 01       	movw	r22, r12
     eea:	80 e2       	ldi	r24, 0x20	; 32
     eec:	90 e0       	ldi	r25, 0x00	; 0
     eee:	0e 94 cd 09 	call	0x139a	; 0x139a <fputc>
     ef2:	2a 94       	dec	r2
     ef4:	f6 cf       	rjmp	.-20     	; 0xee2 <vfprintf+0x39a>
     ef6:	f6 01       	movw	r30, r12
     ef8:	86 81       	ldd	r24, Z+6	; 0x06
     efa:	97 81       	ldd	r25, Z+7	; 0x07
     efc:	02 c0       	rjmp	.+4      	; 0xf02 <vfprintf+0x3ba>
     efe:	8f ef       	ldi	r24, 0xFF	; 255
     f00:	9f ef       	ldi	r25, 0xFF	; 255
     f02:	2b 96       	adiw	r28, 0x0b	; 11
     f04:	e2 e1       	ldi	r30, 0x12	; 18
     f06:	0c 94 83 0a 	jmp	0x1506	; 0x1506 <__epilogue_restores__>

00000f0a <dtoa_prf>:
     f0a:	a9 e0       	ldi	r26, 0x09	; 9
     f0c:	b0 e0       	ldi	r27, 0x00	; 0
     f0e:	eb e8       	ldi	r30, 0x8B	; 139
     f10:	f7 e0       	ldi	r31, 0x07	; 7
     f12:	0c 94 6d 0a 	jmp	0x14da	; 0x14da <__prologue_saves__+0xc>
     f16:	6a 01       	movw	r12, r20
     f18:	12 2f       	mov	r17, r18
     f1a:	b0 2e       	mov	r11, r16
     f1c:	2b e3       	ldi	r18, 0x3B	; 59
     f1e:	20 17       	cp	r18, r16
     f20:	20 f0       	brcs	.+8      	; 0xf2a <dtoa_prf+0x20>
     f22:	ff 24       	eor	r15, r15
     f24:	f3 94       	inc	r15
     f26:	f0 0e       	add	r15, r16
     f28:	02 c0       	rjmp	.+4      	; 0xf2e <dtoa_prf+0x24>
     f2a:	2c e3       	ldi	r18, 0x3C	; 60
     f2c:	f2 2e       	mov	r15, r18
     f2e:	0f 2d       	mov	r16, r15
     f30:	27 e0       	ldi	r18, 0x07	; 7
     f32:	ae 01       	movw	r20, r28
     f34:	4f 5f       	subi	r20, 0xFF	; 255
     f36:	5f 4f       	sbci	r21, 0xFF	; 255
     f38:	0e 94 df 08 	call	0x11be	; 0x11be <__ftoa_engine>
     f3c:	bc 01       	movw	r22, r24
     f3e:	49 81       	ldd	r20, Y+1	; 0x01
     f40:	84 2f       	mov	r24, r20
     f42:	89 70       	andi	r24, 0x09	; 9
     f44:	81 30       	cpi	r24, 0x01	; 1
     f46:	31 f0       	breq	.+12     	; 0xf54 <dtoa_prf+0x4a>
     f48:	e1 fc       	sbrc	r14, 1
     f4a:	06 c0       	rjmp	.+12     	; 0xf58 <dtoa_prf+0x4e>
     f4c:	e0 fe       	sbrs	r14, 0
     f4e:	06 c0       	rjmp	.+12     	; 0xf5c <dtoa_prf+0x52>
     f50:	90 e2       	ldi	r25, 0x20	; 32
     f52:	05 c0       	rjmp	.+10     	; 0xf5e <dtoa_prf+0x54>
     f54:	9d e2       	ldi	r25, 0x2D	; 45
     f56:	03 c0       	rjmp	.+6      	; 0xf5e <dtoa_prf+0x54>
     f58:	9b e2       	ldi	r25, 0x2B	; 43
     f5a:	01 c0       	rjmp	.+2      	; 0xf5e <dtoa_prf+0x54>
     f5c:	90 e0       	ldi	r25, 0x00	; 0
     f5e:	5e 2d       	mov	r21, r14
     f60:	50 71       	andi	r21, 0x10	; 16
     f62:	43 ff       	sbrs	r20, 3
     f64:	3c c0       	rjmp	.+120    	; 0xfde <dtoa_prf+0xd4>
     f66:	91 11       	cpse	r25, r1
     f68:	02 c0       	rjmp	.+4      	; 0xf6e <dtoa_prf+0x64>
     f6a:	83 e0       	ldi	r24, 0x03	; 3
     f6c:	01 c0       	rjmp	.+2      	; 0xf70 <dtoa_prf+0x66>
     f6e:	84 e0       	ldi	r24, 0x04	; 4
     f70:	81 17       	cp	r24, r17
     f72:	18 f4       	brcc	.+6      	; 0xf7a <dtoa_prf+0x70>
     f74:	21 2f       	mov	r18, r17
     f76:	28 1b       	sub	r18, r24
     f78:	01 c0       	rjmp	.+2      	; 0xf7c <dtoa_prf+0x72>
     f7a:	20 e0       	ldi	r18, 0x00	; 0
     f7c:	51 11       	cpse	r21, r1
     f7e:	0b c0       	rjmp	.+22     	; 0xf96 <dtoa_prf+0x8c>
     f80:	f6 01       	movw	r30, r12
     f82:	82 2f       	mov	r24, r18
     f84:	30 e2       	ldi	r19, 0x20	; 32
     f86:	88 23       	and	r24, r24
     f88:	19 f0       	breq	.+6      	; 0xf90 <dtoa_prf+0x86>
     f8a:	31 93       	st	Z+, r19
     f8c:	81 50       	subi	r24, 0x01	; 1
     f8e:	fb cf       	rjmp	.-10     	; 0xf86 <dtoa_prf+0x7c>
     f90:	c2 0e       	add	r12, r18
     f92:	d1 1c       	adc	r13, r1
     f94:	20 e0       	ldi	r18, 0x00	; 0
     f96:	99 23       	and	r25, r25
     f98:	29 f0       	breq	.+10     	; 0xfa4 <dtoa_prf+0x9a>
     f9a:	d6 01       	movw	r26, r12
     f9c:	9c 93       	st	X, r25
     f9e:	f6 01       	movw	r30, r12
     fa0:	31 96       	adiw	r30, 0x01	; 1
     fa2:	6f 01       	movw	r12, r30
     fa4:	c6 01       	movw	r24, r12
     fa6:	03 96       	adiw	r24, 0x03	; 3
     fa8:	e2 fe       	sbrs	r14, 2
     faa:	0a c0       	rjmp	.+20     	; 0xfc0 <dtoa_prf+0xb6>
     fac:	3e e4       	ldi	r19, 0x4E	; 78
     fae:	d6 01       	movw	r26, r12
     fb0:	3c 93       	st	X, r19
     fb2:	41 e4       	ldi	r20, 0x41	; 65
     fb4:	11 96       	adiw	r26, 0x01	; 1
     fb6:	4c 93       	st	X, r20
     fb8:	11 97       	sbiw	r26, 0x01	; 1
     fba:	12 96       	adiw	r26, 0x02	; 2
     fbc:	3c 93       	st	X, r19
     fbe:	06 c0       	rjmp	.+12     	; 0xfcc <dtoa_prf+0xc2>
     fc0:	3e e6       	ldi	r19, 0x6E	; 110
     fc2:	f6 01       	movw	r30, r12
     fc4:	30 83       	st	Z, r19
     fc6:	41 e6       	ldi	r20, 0x61	; 97
     fc8:	41 83       	std	Z+1, r20	; 0x01
     fca:	32 83       	std	Z+2, r19	; 0x02
     fcc:	fc 01       	movw	r30, r24
     fce:	32 2f       	mov	r19, r18
     fd0:	40 e2       	ldi	r20, 0x20	; 32
     fd2:	33 23       	and	r19, r19
     fd4:	09 f4       	brne	.+2      	; 0xfd8 <dtoa_prf+0xce>
     fd6:	42 c0       	rjmp	.+132    	; 0x105c <dtoa_prf+0x152>
     fd8:	41 93       	st	Z+, r20
     fda:	31 50       	subi	r19, 0x01	; 1
     fdc:	fa cf       	rjmp	.-12     	; 0xfd2 <dtoa_prf+0xc8>
     fde:	42 ff       	sbrs	r20, 2
     fe0:	44 c0       	rjmp	.+136    	; 0x106a <dtoa_prf+0x160>
     fe2:	91 11       	cpse	r25, r1
     fe4:	02 c0       	rjmp	.+4      	; 0xfea <dtoa_prf+0xe0>
     fe6:	83 e0       	ldi	r24, 0x03	; 3
     fe8:	01 c0       	rjmp	.+2      	; 0xfec <dtoa_prf+0xe2>
     fea:	84 e0       	ldi	r24, 0x04	; 4
     fec:	81 17       	cp	r24, r17
     fee:	18 f4       	brcc	.+6      	; 0xff6 <dtoa_prf+0xec>
     ff0:	21 2f       	mov	r18, r17
     ff2:	28 1b       	sub	r18, r24
     ff4:	01 c0       	rjmp	.+2      	; 0xff8 <dtoa_prf+0xee>
     ff6:	20 e0       	ldi	r18, 0x00	; 0
     ff8:	51 11       	cpse	r21, r1
     ffa:	0b c0       	rjmp	.+22     	; 0x1012 <dtoa_prf+0x108>
     ffc:	f6 01       	movw	r30, r12
     ffe:	82 2f       	mov	r24, r18
    1000:	30 e2       	ldi	r19, 0x20	; 32
    1002:	88 23       	and	r24, r24
    1004:	19 f0       	breq	.+6      	; 0x100c <dtoa_prf+0x102>
    1006:	31 93       	st	Z+, r19
    1008:	81 50       	subi	r24, 0x01	; 1
    100a:	fb cf       	rjmp	.-10     	; 0x1002 <dtoa_prf+0xf8>
    100c:	c2 0e       	add	r12, r18
    100e:	d1 1c       	adc	r13, r1
    1010:	20 e0       	ldi	r18, 0x00	; 0
    1012:	99 23       	and	r25, r25
    1014:	29 f0       	breq	.+10     	; 0x1020 <dtoa_prf+0x116>
    1016:	d6 01       	movw	r26, r12
    1018:	9c 93       	st	X, r25
    101a:	f6 01       	movw	r30, r12
    101c:	31 96       	adiw	r30, 0x01	; 1
    101e:	6f 01       	movw	r12, r30
    1020:	c6 01       	movw	r24, r12
    1022:	03 96       	adiw	r24, 0x03	; 3
    1024:	e2 fe       	sbrs	r14, 2
    1026:	0b c0       	rjmp	.+22     	; 0x103e <dtoa_prf+0x134>
    1028:	39 e4       	ldi	r19, 0x49	; 73
    102a:	d6 01       	movw	r26, r12
    102c:	3c 93       	st	X, r19
    102e:	3e e4       	ldi	r19, 0x4E	; 78
    1030:	11 96       	adiw	r26, 0x01	; 1
    1032:	3c 93       	st	X, r19
    1034:	11 97       	sbiw	r26, 0x01	; 1
    1036:	36 e4       	ldi	r19, 0x46	; 70
    1038:	12 96       	adiw	r26, 0x02	; 2
    103a:	3c 93       	st	X, r19
    103c:	07 c0       	rjmp	.+14     	; 0x104c <dtoa_prf+0x142>
    103e:	39 e6       	ldi	r19, 0x69	; 105
    1040:	f6 01       	movw	r30, r12
    1042:	30 83       	st	Z, r19
    1044:	3e e6       	ldi	r19, 0x6E	; 110
    1046:	31 83       	std	Z+1, r19	; 0x01
    1048:	36 e6       	ldi	r19, 0x66	; 102
    104a:	32 83       	std	Z+2, r19	; 0x02
    104c:	fc 01       	movw	r30, r24
    104e:	32 2f       	mov	r19, r18
    1050:	40 e2       	ldi	r20, 0x20	; 32
    1052:	33 23       	and	r19, r19
    1054:	19 f0       	breq	.+6      	; 0x105c <dtoa_prf+0x152>
    1056:	41 93       	st	Z+, r20
    1058:	31 50       	subi	r19, 0x01	; 1
    105a:	fb cf       	rjmp	.-10     	; 0x1052 <dtoa_prf+0x148>
    105c:	fc 01       	movw	r30, r24
    105e:	e2 0f       	add	r30, r18
    1060:	f1 1d       	adc	r31, r1
    1062:	10 82       	st	Z, r1
    1064:	8e ef       	ldi	r24, 0xFE	; 254
    1066:	9f ef       	ldi	r25, 0xFF	; 255
    1068:	a6 c0       	rjmp	.+332    	; 0x11b6 <dtoa_prf+0x2ac>
    106a:	21 e0       	ldi	r18, 0x01	; 1
    106c:	30 e0       	ldi	r19, 0x00	; 0
    106e:	91 11       	cpse	r25, r1
    1070:	02 c0       	rjmp	.+4      	; 0x1076 <dtoa_prf+0x16c>
    1072:	20 e0       	ldi	r18, 0x00	; 0
    1074:	30 e0       	ldi	r19, 0x00	; 0
    1076:	16 16       	cp	r1, r22
    1078:	17 06       	cpc	r1, r23
    107a:	1c f4       	brge	.+6      	; 0x1082 <dtoa_prf+0x178>
    107c:	fb 01       	movw	r30, r22
    107e:	31 96       	adiw	r30, 0x01	; 1
    1080:	02 c0       	rjmp	.+4      	; 0x1086 <dtoa_prf+0x17c>
    1082:	e1 e0       	ldi	r30, 0x01	; 1
    1084:	f0 e0       	ldi	r31, 0x00	; 0
    1086:	2e 0f       	add	r18, r30
    1088:	3f 1f       	adc	r19, r31
    108a:	bb 20       	and	r11, r11
    108c:	21 f0       	breq	.+8      	; 0x1096 <dtoa_prf+0x18c>
    108e:	eb 2d       	mov	r30, r11
    1090:	f0 e0       	ldi	r31, 0x00	; 0
    1092:	31 96       	adiw	r30, 0x01	; 1
    1094:	02 c0       	rjmp	.+4      	; 0x109a <dtoa_prf+0x190>
    1096:	e0 e0       	ldi	r30, 0x00	; 0
    1098:	f0 e0       	ldi	r31, 0x00	; 0
    109a:	2e 0f       	add	r18, r30
    109c:	3f 1f       	adc	r19, r31
    109e:	e1 2f       	mov	r30, r17
    10a0:	f0 e0       	ldi	r31, 0x00	; 0
    10a2:	2e 17       	cp	r18, r30
    10a4:	3f 07       	cpc	r19, r31
    10a6:	1c f4       	brge	.+6      	; 0x10ae <dtoa_prf+0x1a4>
    10a8:	12 1b       	sub	r17, r18
    10aa:	21 2f       	mov	r18, r17
    10ac:	01 c0       	rjmp	.+2      	; 0x10b0 <dtoa_prf+0x1a6>
    10ae:	20 e0       	ldi	r18, 0x00	; 0
    10b0:	8e 2d       	mov	r24, r14
    10b2:	88 71       	andi	r24, 0x18	; 24
    10b4:	59 f4       	brne	.+22     	; 0x10cc <dtoa_prf+0x1c2>
    10b6:	f6 01       	movw	r30, r12
    10b8:	82 2f       	mov	r24, r18
    10ba:	30 e2       	ldi	r19, 0x20	; 32
    10bc:	88 23       	and	r24, r24
    10be:	19 f0       	breq	.+6      	; 0x10c6 <dtoa_prf+0x1bc>
    10c0:	31 93       	st	Z+, r19
    10c2:	81 50       	subi	r24, 0x01	; 1
    10c4:	fb cf       	rjmp	.-10     	; 0x10bc <dtoa_prf+0x1b2>
    10c6:	c2 0e       	add	r12, r18
    10c8:	d1 1c       	adc	r13, r1
    10ca:	20 e0       	ldi	r18, 0x00	; 0
    10cc:	99 23       	and	r25, r25
    10ce:	29 f0       	breq	.+10     	; 0x10da <dtoa_prf+0x1d0>
    10d0:	d6 01       	movw	r26, r12
    10d2:	9c 93       	st	X, r25
    10d4:	f6 01       	movw	r30, r12
    10d6:	31 96       	adiw	r30, 0x01	; 1
    10d8:	6f 01       	movw	r12, r30
    10da:	51 11       	cpse	r21, r1
    10dc:	0b c0       	rjmp	.+22     	; 0x10f4 <dtoa_prf+0x1ea>
    10de:	f6 01       	movw	r30, r12
    10e0:	82 2f       	mov	r24, r18
    10e2:	90 e3       	ldi	r25, 0x30	; 48
    10e4:	88 23       	and	r24, r24
    10e6:	19 f0       	breq	.+6      	; 0x10ee <dtoa_prf+0x1e4>
    10e8:	91 93       	st	Z+, r25
    10ea:	81 50       	subi	r24, 0x01	; 1
    10ec:	fb cf       	rjmp	.-10     	; 0x10e4 <dtoa_prf+0x1da>
    10ee:	c2 0e       	add	r12, r18
    10f0:	d1 1c       	adc	r13, r1
    10f2:	20 e0       	ldi	r18, 0x00	; 0
    10f4:	0f 2d       	mov	r16, r15
    10f6:	06 0f       	add	r16, r22
    10f8:	9a 81       	ldd	r25, Y+2	; 0x02
    10fa:	34 2f       	mov	r19, r20
    10fc:	30 71       	andi	r19, 0x10	; 16
    10fe:	44 ff       	sbrs	r20, 4
    1100:	03 c0       	rjmp	.+6      	; 0x1108 <dtoa_prf+0x1fe>
    1102:	91 33       	cpi	r25, 0x31	; 49
    1104:	09 f4       	brne	.+2      	; 0x1108 <dtoa_prf+0x1fe>
    1106:	01 50       	subi	r16, 0x01	; 1
    1108:	10 16       	cp	r1, r16
    110a:	24 f4       	brge	.+8      	; 0x1114 <dtoa_prf+0x20a>
    110c:	09 30       	cpi	r16, 0x09	; 9
    110e:	18 f0       	brcs	.+6      	; 0x1116 <dtoa_prf+0x20c>
    1110:	08 e0       	ldi	r16, 0x08	; 8
    1112:	01 c0       	rjmp	.+2      	; 0x1116 <dtoa_prf+0x20c>
    1114:	01 e0       	ldi	r16, 0x01	; 1
    1116:	ab 01       	movw	r20, r22
    1118:	77 ff       	sbrs	r23, 7
    111a:	02 c0       	rjmp	.+4      	; 0x1120 <dtoa_prf+0x216>
    111c:	40 e0       	ldi	r20, 0x00	; 0
    111e:	50 e0       	ldi	r21, 0x00	; 0
    1120:	fb 01       	movw	r30, r22
    1122:	e4 1b       	sub	r30, r20
    1124:	f5 0b       	sbc	r31, r21
    1126:	a1 e0       	ldi	r26, 0x01	; 1
    1128:	b0 e0       	ldi	r27, 0x00	; 0
    112a:	ac 0f       	add	r26, r28
    112c:	bd 1f       	adc	r27, r29
    112e:	ea 0f       	add	r30, r26
    1130:	fb 1f       	adc	r31, r27
    1132:	8e e2       	ldi	r24, 0x2E	; 46
    1134:	a8 2e       	mov	r10, r24
    1136:	4b 01       	movw	r8, r22
    1138:	80 1a       	sub	r8, r16
    113a:	91 08       	sbc	r9, r1
    113c:	0b 2d       	mov	r16, r11
    113e:	10 e0       	ldi	r17, 0x00	; 0
    1140:	11 95       	neg	r17
    1142:	01 95       	neg	r16
    1144:	11 09       	sbc	r17, r1
    1146:	4f 3f       	cpi	r20, 0xFF	; 255
    1148:	bf ef       	ldi	r27, 0xFF	; 255
    114a:	5b 07       	cpc	r21, r27
    114c:	21 f4       	brne	.+8      	; 0x1156 <dtoa_prf+0x24c>
    114e:	d6 01       	movw	r26, r12
    1150:	ac 92       	st	X, r10
    1152:	11 96       	adiw	r26, 0x01	; 1
    1154:	6d 01       	movw	r12, r26
    1156:	64 17       	cp	r22, r20
    1158:	75 07       	cpc	r23, r21
    115a:	2c f0       	brlt	.+10     	; 0x1166 <dtoa_prf+0x25c>
    115c:	84 16       	cp	r8, r20
    115e:	95 06       	cpc	r9, r21
    1160:	14 f4       	brge	.+4      	; 0x1166 <dtoa_prf+0x25c>
    1162:	81 81       	ldd	r24, Z+1	; 0x01
    1164:	01 c0       	rjmp	.+2      	; 0x1168 <dtoa_prf+0x25e>
    1166:	80 e3       	ldi	r24, 0x30	; 48
    1168:	41 50       	subi	r20, 0x01	; 1
    116a:	51 09       	sbc	r21, r1
    116c:	31 96       	adiw	r30, 0x01	; 1
    116e:	d6 01       	movw	r26, r12
    1170:	11 96       	adiw	r26, 0x01	; 1
    1172:	7d 01       	movw	r14, r26
    1174:	40 17       	cp	r20, r16
    1176:	51 07       	cpc	r21, r17
    1178:	24 f0       	brlt	.+8      	; 0x1182 <dtoa_prf+0x278>
    117a:	d6 01       	movw	r26, r12
    117c:	8c 93       	st	X, r24
    117e:	67 01       	movw	r12, r14
    1180:	e2 cf       	rjmp	.-60     	; 0x1146 <dtoa_prf+0x23c>
    1182:	64 17       	cp	r22, r20
    1184:	75 07       	cpc	r23, r21
    1186:	39 f4       	brne	.+14     	; 0x1196 <dtoa_prf+0x28c>
    1188:	96 33       	cpi	r25, 0x36	; 54
    118a:	20 f4       	brcc	.+8      	; 0x1194 <dtoa_prf+0x28a>
    118c:	95 33       	cpi	r25, 0x35	; 53
    118e:	19 f4       	brne	.+6      	; 0x1196 <dtoa_prf+0x28c>
    1190:	31 11       	cpse	r19, r1
    1192:	01 c0       	rjmp	.+2      	; 0x1196 <dtoa_prf+0x28c>
    1194:	81 e3       	ldi	r24, 0x31	; 49
    1196:	f6 01       	movw	r30, r12
    1198:	80 83       	st	Z, r24
    119a:	f7 01       	movw	r30, r14
    119c:	82 2f       	mov	r24, r18
    119e:	90 e2       	ldi	r25, 0x20	; 32
    11a0:	88 23       	and	r24, r24
    11a2:	19 f0       	breq	.+6      	; 0x11aa <dtoa_prf+0x2a0>
    11a4:	91 93       	st	Z+, r25
    11a6:	81 50       	subi	r24, 0x01	; 1
    11a8:	fb cf       	rjmp	.-10     	; 0x11a0 <dtoa_prf+0x296>
    11aa:	f7 01       	movw	r30, r14
    11ac:	e2 0f       	add	r30, r18
    11ae:	f1 1d       	adc	r31, r1
    11b0:	10 82       	st	Z, r1
    11b2:	80 e0       	ldi	r24, 0x00	; 0
    11b4:	90 e0       	ldi	r25, 0x00	; 0
    11b6:	29 96       	adiw	r28, 0x09	; 9
    11b8:	ec e0       	ldi	r30, 0x0C	; 12
    11ba:	0c 94 89 0a 	jmp	0x1512	; 0x1512 <__epilogue_restores__+0xc>

000011be <__ftoa_engine>:
    11be:	28 30       	cpi	r18, 0x08	; 8
    11c0:	08 f0       	brcs	.+2      	; 0x11c4 <__ftoa_engine+0x6>
    11c2:	27 e0       	ldi	r18, 0x07	; 7
    11c4:	33 27       	eor	r19, r19
    11c6:	da 01       	movw	r26, r20
    11c8:	99 0f       	add	r25, r25
    11ca:	31 1d       	adc	r19, r1
    11cc:	87 fd       	sbrc	r24, 7
    11ce:	91 60       	ori	r25, 0x01	; 1
    11d0:	00 96       	adiw	r24, 0x00	; 0
    11d2:	61 05       	cpc	r22, r1
    11d4:	71 05       	cpc	r23, r1
    11d6:	39 f4       	brne	.+14     	; 0x11e6 <__ftoa_engine+0x28>
    11d8:	32 60       	ori	r19, 0x02	; 2
    11da:	2e 5f       	subi	r18, 0xFE	; 254
    11dc:	3d 93       	st	X+, r19
    11de:	30 e3       	ldi	r19, 0x30	; 48
    11e0:	2a 95       	dec	r18
    11e2:	e1 f7       	brne	.-8      	; 0x11dc <__ftoa_engine+0x1e>
    11e4:	08 95       	ret
    11e6:	9f 3f       	cpi	r25, 0xFF	; 255
    11e8:	30 f0       	brcs	.+12     	; 0x11f6 <__ftoa_engine+0x38>
    11ea:	80 38       	cpi	r24, 0x80	; 128
    11ec:	71 05       	cpc	r23, r1
    11ee:	61 05       	cpc	r22, r1
    11f0:	09 f0       	breq	.+2      	; 0x11f4 <__ftoa_engine+0x36>
    11f2:	3c 5f       	subi	r19, 0xFC	; 252
    11f4:	3c 5f       	subi	r19, 0xFC	; 252
    11f6:	3d 93       	st	X+, r19
    11f8:	91 30       	cpi	r25, 0x01	; 1
    11fa:	08 f0       	brcs	.+2      	; 0x11fe <__ftoa_engine+0x40>
    11fc:	80 68       	ori	r24, 0x80	; 128
    11fe:	91 1d       	adc	r25, r1
    1200:	df 93       	push	r29
    1202:	cf 93       	push	r28
    1204:	1f 93       	push	r17
    1206:	0f 93       	push	r16
    1208:	ff 92       	push	r15
    120a:	ef 92       	push	r14
    120c:	19 2f       	mov	r17, r25
    120e:	98 7f       	andi	r25, 0xF8	; 248
    1210:	96 95       	lsr	r25
    1212:	e9 2f       	mov	r30, r25
    1214:	96 95       	lsr	r25
    1216:	96 95       	lsr	r25
    1218:	e9 0f       	add	r30, r25
    121a:	ff 27       	eor	r31, r31
    121c:	e0 5b       	subi	r30, 0xB0	; 176
    121e:	fe 4f       	sbci	r31, 0xFE	; 254
    1220:	99 27       	eor	r25, r25
    1222:	33 27       	eor	r19, r19
    1224:	ee 24       	eor	r14, r14
    1226:	ff 24       	eor	r15, r15
    1228:	a7 01       	movw	r20, r14
    122a:	e7 01       	movw	r28, r14
    122c:	05 90       	lpm	r0, Z+
    122e:	08 94       	sec
    1230:	07 94       	ror	r0
    1232:	28 f4       	brcc	.+10     	; 0x123e <__ftoa_engine+0x80>
    1234:	36 0f       	add	r19, r22
    1236:	e7 1e       	adc	r14, r23
    1238:	f8 1e       	adc	r15, r24
    123a:	49 1f       	adc	r20, r25
    123c:	51 1d       	adc	r21, r1
    123e:	66 0f       	add	r22, r22
    1240:	77 1f       	adc	r23, r23
    1242:	88 1f       	adc	r24, r24
    1244:	99 1f       	adc	r25, r25
    1246:	06 94       	lsr	r0
    1248:	a1 f7       	brne	.-24     	; 0x1232 <__ftoa_engine+0x74>
    124a:	05 90       	lpm	r0, Z+
    124c:	07 94       	ror	r0
    124e:	28 f4       	brcc	.+10     	; 0x125a <__ftoa_engine+0x9c>
    1250:	e7 0e       	add	r14, r23
    1252:	f8 1e       	adc	r15, r24
    1254:	49 1f       	adc	r20, r25
    1256:	56 1f       	adc	r21, r22
    1258:	c1 1d       	adc	r28, r1
    125a:	77 0f       	add	r23, r23
    125c:	88 1f       	adc	r24, r24
    125e:	99 1f       	adc	r25, r25
    1260:	66 1f       	adc	r22, r22
    1262:	06 94       	lsr	r0
    1264:	a1 f7       	brne	.-24     	; 0x124e <__ftoa_engine+0x90>
    1266:	05 90       	lpm	r0, Z+
    1268:	07 94       	ror	r0
    126a:	28 f4       	brcc	.+10     	; 0x1276 <__ftoa_engine+0xb8>
    126c:	f8 0e       	add	r15, r24
    126e:	49 1f       	adc	r20, r25
    1270:	56 1f       	adc	r21, r22
    1272:	c7 1f       	adc	r28, r23
    1274:	d1 1d       	adc	r29, r1
    1276:	88 0f       	add	r24, r24
    1278:	99 1f       	adc	r25, r25
    127a:	66 1f       	adc	r22, r22
    127c:	77 1f       	adc	r23, r23
    127e:	06 94       	lsr	r0
    1280:	a1 f7       	brne	.-24     	; 0x126a <__ftoa_engine+0xac>
    1282:	05 90       	lpm	r0, Z+
    1284:	07 94       	ror	r0
    1286:	20 f4       	brcc	.+8      	; 0x1290 <__ftoa_engine+0xd2>
    1288:	49 0f       	add	r20, r25
    128a:	56 1f       	adc	r21, r22
    128c:	c7 1f       	adc	r28, r23
    128e:	d8 1f       	adc	r29, r24
    1290:	99 0f       	add	r25, r25
    1292:	66 1f       	adc	r22, r22
    1294:	77 1f       	adc	r23, r23
    1296:	88 1f       	adc	r24, r24
    1298:	06 94       	lsr	r0
    129a:	a9 f7       	brne	.-22     	; 0x1286 <__ftoa_engine+0xc8>
    129c:	84 91       	lpm	r24, Z
    129e:	10 95       	com	r17
    12a0:	17 70       	andi	r17, 0x07	; 7
    12a2:	41 f0       	breq	.+16     	; 0x12b4 <__ftoa_engine+0xf6>
    12a4:	d6 95       	lsr	r29
    12a6:	c7 95       	ror	r28
    12a8:	57 95       	ror	r21
    12aa:	47 95       	ror	r20
    12ac:	f7 94       	ror	r15
    12ae:	e7 94       	ror	r14
    12b0:	1a 95       	dec	r17
    12b2:	c1 f7       	brne	.-16     	; 0x12a4 <__ftoa_engine+0xe6>
    12b4:	e6 ef       	ldi	r30, 0xF6	; 246
    12b6:	f0 e0       	ldi	r31, 0x00	; 0
    12b8:	68 94       	set
    12ba:	15 90       	lpm	r1, Z+
    12bc:	15 91       	lpm	r17, Z+
    12be:	35 91       	lpm	r19, Z+
    12c0:	65 91       	lpm	r22, Z+
    12c2:	95 91       	lpm	r25, Z+
    12c4:	05 90       	lpm	r0, Z+
    12c6:	7f e2       	ldi	r23, 0x2F	; 47
    12c8:	73 95       	inc	r23
    12ca:	e1 18       	sub	r14, r1
    12cc:	f1 0a       	sbc	r15, r17
    12ce:	43 0b       	sbc	r20, r19
    12d0:	56 0b       	sbc	r21, r22
    12d2:	c9 0b       	sbc	r28, r25
    12d4:	d0 09       	sbc	r29, r0
    12d6:	c0 f7       	brcc	.-16     	; 0x12c8 <__ftoa_engine+0x10a>
    12d8:	e1 0c       	add	r14, r1
    12da:	f1 1e       	adc	r15, r17
    12dc:	43 1f       	adc	r20, r19
    12de:	56 1f       	adc	r21, r22
    12e0:	c9 1f       	adc	r28, r25
    12e2:	d0 1d       	adc	r29, r0
    12e4:	7e f4       	brtc	.+30     	; 0x1304 <__ftoa_engine+0x146>
    12e6:	70 33       	cpi	r23, 0x30	; 48
    12e8:	11 f4       	brne	.+4      	; 0x12ee <__ftoa_engine+0x130>
    12ea:	8a 95       	dec	r24
    12ec:	e6 cf       	rjmp	.-52     	; 0x12ba <__ftoa_engine+0xfc>
    12ee:	e8 94       	clt
    12f0:	01 50       	subi	r16, 0x01	; 1
    12f2:	30 f0       	brcs	.+12     	; 0x1300 <__ftoa_engine+0x142>
    12f4:	08 0f       	add	r16, r24
    12f6:	0a f4       	brpl	.+2      	; 0x12fa <__ftoa_engine+0x13c>
    12f8:	00 27       	eor	r16, r16
    12fa:	02 17       	cp	r16, r18
    12fc:	08 f4       	brcc	.+2      	; 0x1300 <__ftoa_engine+0x142>
    12fe:	20 2f       	mov	r18, r16
    1300:	23 95       	inc	r18
    1302:	02 2f       	mov	r16, r18
    1304:	7a 33       	cpi	r23, 0x3A	; 58
    1306:	28 f0       	brcs	.+10     	; 0x1312 <__ftoa_engine+0x154>
    1308:	79 e3       	ldi	r23, 0x39	; 57
    130a:	7d 93       	st	X+, r23
    130c:	2a 95       	dec	r18
    130e:	e9 f7       	brne	.-6      	; 0x130a <__ftoa_engine+0x14c>
    1310:	10 c0       	rjmp	.+32     	; 0x1332 <__ftoa_engine+0x174>
    1312:	7d 93       	st	X+, r23
    1314:	2a 95       	dec	r18
    1316:	89 f6       	brne	.-94     	; 0x12ba <__ftoa_engine+0xfc>
    1318:	06 94       	lsr	r0
    131a:	97 95       	ror	r25
    131c:	67 95       	ror	r22
    131e:	37 95       	ror	r19
    1320:	17 95       	ror	r17
    1322:	17 94       	ror	r1
    1324:	e1 18       	sub	r14, r1
    1326:	f1 0a       	sbc	r15, r17
    1328:	43 0b       	sbc	r20, r19
    132a:	56 0b       	sbc	r21, r22
    132c:	c9 0b       	sbc	r28, r25
    132e:	d0 09       	sbc	r29, r0
    1330:	98 f0       	brcs	.+38     	; 0x1358 <__ftoa_engine+0x19a>
    1332:	23 95       	inc	r18
    1334:	7e 91       	ld	r23, -X
    1336:	73 95       	inc	r23
    1338:	7a 33       	cpi	r23, 0x3A	; 58
    133a:	08 f0       	brcs	.+2      	; 0x133e <__ftoa_engine+0x180>
    133c:	70 e3       	ldi	r23, 0x30	; 48
    133e:	7c 93       	st	X, r23
    1340:	20 13       	cpse	r18, r16
    1342:	b8 f7       	brcc	.-18     	; 0x1332 <__ftoa_engine+0x174>
    1344:	7e 91       	ld	r23, -X
    1346:	70 61       	ori	r23, 0x10	; 16
    1348:	7d 93       	st	X+, r23
    134a:	30 f0       	brcs	.+12     	; 0x1358 <__ftoa_engine+0x19a>
    134c:	83 95       	inc	r24
    134e:	71 e3       	ldi	r23, 0x31	; 49
    1350:	7d 93       	st	X+, r23
    1352:	70 e3       	ldi	r23, 0x30	; 48
    1354:	2a 95       	dec	r18
    1356:	e1 f7       	brne	.-8      	; 0x1350 <__ftoa_engine+0x192>
    1358:	11 24       	eor	r1, r1
    135a:	ef 90       	pop	r14
    135c:	ff 90       	pop	r15
    135e:	0f 91       	pop	r16
    1360:	1f 91       	pop	r17
    1362:	cf 91       	pop	r28
    1364:	df 91       	pop	r29
    1366:	99 27       	eor	r25, r25
    1368:	87 fd       	sbrc	r24, 7
    136a:	90 95       	com	r25
    136c:	08 95       	ret

0000136e <strnlen_P>:
    136e:	fc 01       	movw	r30, r24
    1370:	05 90       	lpm	r0, Z+
    1372:	61 50       	subi	r22, 0x01	; 1
    1374:	70 40       	sbci	r23, 0x00	; 0
    1376:	01 10       	cpse	r0, r1
    1378:	d8 f7       	brcc	.-10     	; 0x1370 <strnlen_P+0x2>
    137a:	80 95       	com	r24
    137c:	90 95       	com	r25
    137e:	8e 0f       	add	r24, r30
    1380:	9f 1f       	adc	r25, r31
    1382:	08 95       	ret

00001384 <strnlen>:
    1384:	fc 01       	movw	r30, r24
    1386:	61 50       	subi	r22, 0x01	; 1
    1388:	70 40       	sbci	r23, 0x00	; 0
    138a:	01 90       	ld	r0, Z+
    138c:	01 10       	cpse	r0, r1
    138e:	d8 f7       	brcc	.-10     	; 0x1386 <strnlen+0x2>
    1390:	80 95       	com	r24
    1392:	90 95       	com	r25
    1394:	8e 0f       	add	r24, r30
    1396:	9f 1f       	adc	r25, r31
    1398:	08 95       	ret

0000139a <fputc>:
    139a:	0f 93       	push	r16
    139c:	1f 93       	push	r17
    139e:	cf 93       	push	r28
    13a0:	df 93       	push	r29
    13a2:	fb 01       	movw	r30, r22
    13a4:	23 81       	ldd	r18, Z+3	; 0x03
    13a6:	21 fd       	sbrc	r18, 1
    13a8:	03 c0       	rjmp	.+6      	; 0x13b0 <fputc+0x16>
    13aa:	8f ef       	ldi	r24, 0xFF	; 255
    13ac:	9f ef       	ldi	r25, 0xFF	; 255
    13ae:	2c c0       	rjmp	.+88     	; 0x1408 <fputc+0x6e>
    13b0:	22 ff       	sbrs	r18, 2
    13b2:	16 c0       	rjmp	.+44     	; 0x13e0 <fputc+0x46>
    13b4:	46 81       	ldd	r20, Z+6	; 0x06
    13b6:	57 81       	ldd	r21, Z+7	; 0x07
    13b8:	24 81       	ldd	r18, Z+4	; 0x04
    13ba:	35 81       	ldd	r19, Z+5	; 0x05
    13bc:	42 17       	cp	r20, r18
    13be:	53 07       	cpc	r21, r19
    13c0:	44 f4       	brge	.+16     	; 0x13d2 <fputc+0x38>
    13c2:	a0 81       	ld	r26, Z
    13c4:	b1 81       	ldd	r27, Z+1	; 0x01
    13c6:	9d 01       	movw	r18, r26
    13c8:	2f 5f       	subi	r18, 0xFF	; 255
    13ca:	3f 4f       	sbci	r19, 0xFF	; 255
    13cc:	31 83       	std	Z+1, r19	; 0x01
    13ce:	20 83       	st	Z, r18
    13d0:	8c 93       	st	X, r24
    13d2:	26 81       	ldd	r18, Z+6	; 0x06
    13d4:	37 81       	ldd	r19, Z+7	; 0x07
    13d6:	2f 5f       	subi	r18, 0xFF	; 255
    13d8:	3f 4f       	sbci	r19, 0xFF	; 255
    13da:	37 83       	std	Z+7, r19	; 0x07
    13dc:	26 83       	std	Z+6, r18	; 0x06
    13de:	14 c0       	rjmp	.+40     	; 0x1408 <fputc+0x6e>
    13e0:	8b 01       	movw	r16, r22
    13e2:	ec 01       	movw	r28, r24
    13e4:	fb 01       	movw	r30, r22
    13e6:	00 84       	ldd	r0, Z+8	; 0x08
    13e8:	f1 85       	ldd	r31, Z+9	; 0x09
    13ea:	e0 2d       	mov	r30, r0
    13ec:	09 95       	icall
    13ee:	89 2b       	or	r24, r25
    13f0:	e1 f6       	brne	.-72     	; 0x13aa <fputc+0x10>
    13f2:	d8 01       	movw	r26, r16
    13f4:	16 96       	adiw	r26, 0x06	; 6
    13f6:	8d 91       	ld	r24, X+
    13f8:	9c 91       	ld	r25, X
    13fa:	17 97       	sbiw	r26, 0x07	; 7
    13fc:	01 96       	adiw	r24, 0x01	; 1
    13fe:	17 96       	adiw	r26, 0x07	; 7
    1400:	9c 93       	st	X, r25
    1402:	8e 93       	st	-X, r24
    1404:	16 97       	sbiw	r26, 0x06	; 6
    1406:	ce 01       	movw	r24, r28
    1408:	df 91       	pop	r29
    140a:	cf 91       	pop	r28
    140c:	1f 91       	pop	r17
    140e:	0f 91       	pop	r16
    1410:	08 95       	ret

00001412 <__ultoa_invert>:
    1412:	fa 01       	movw	r30, r20
    1414:	aa 27       	eor	r26, r26
    1416:	28 30       	cpi	r18, 0x08	; 8
    1418:	51 f1       	breq	.+84     	; 0x146e <__ultoa_invert+0x5c>
    141a:	20 31       	cpi	r18, 0x10	; 16
    141c:	81 f1       	breq	.+96     	; 0x147e <__ultoa_invert+0x6c>
    141e:	e8 94       	clt
    1420:	6f 93       	push	r22
    1422:	6e 7f       	andi	r22, 0xFE	; 254
    1424:	6e 5f       	subi	r22, 0xFE	; 254
    1426:	7f 4f       	sbci	r23, 0xFF	; 255
    1428:	8f 4f       	sbci	r24, 0xFF	; 255
    142a:	9f 4f       	sbci	r25, 0xFF	; 255
    142c:	af 4f       	sbci	r26, 0xFF	; 255
    142e:	b1 e0       	ldi	r27, 0x01	; 1
    1430:	3e d0       	rcall	.+124    	; 0x14ae <__ultoa_invert+0x9c>
    1432:	b4 e0       	ldi	r27, 0x04	; 4
    1434:	3c d0       	rcall	.+120    	; 0x14ae <__ultoa_invert+0x9c>
    1436:	67 0f       	add	r22, r23
    1438:	78 1f       	adc	r23, r24
    143a:	89 1f       	adc	r24, r25
    143c:	9a 1f       	adc	r25, r26
    143e:	a1 1d       	adc	r26, r1
    1440:	68 0f       	add	r22, r24
    1442:	79 1f       	adc	r23, r25
    1444:	8a 1f       	adc	r24, r26
    1446:	91 1d       	adc	r25, r1
    1448:	a1 1d       	adc	r26, r1
    144a:	6a 0f       	add	r22, r26
    144c:	71 1d       	adc	r23, r1
    144e:	81 1d       	adc	r24, r1
    1450:	91 1d       	adc	r25, r1
    1452:	a1 1d       	adc	r26, r1
    1454:	20 d0       	rcall	.+64     	; 0x1496 <__ultoa_invert+0x84>
    1456:	09 f4       	brne	.+2      	; 0x145a <__ultoa_invert+0x48>
    1458:	68 94       	set
    145a:	3f 91       	pop	r19
    145c:	2a e0       	ldi	r18, 0x0A	; 10
    145e:	26 9f       	mul	r18, r22
    1460:	11 24       	eor	r1, r1
    1462:	30 19       	sub	r19, r0
    1464:	30 5d       	subi	r19, 0xD0	; 208
    1466:	31 93       	st	Z+, r19
    1468:	de f6       	brtc	.-74     	; 0x1420 <__ultoa_invert+0xe>
    146a:	cf 01       	movw	r24, r30
    146c:	08 95       	ret
    146e:	46 2f       	mov	r20, r22
    1470:	47 70       	andi	r20, 0x07	; 7
    1472:	40 5d       	subi	r20, 0xD0	; 208
    1474:	41 93       	st	Z+, r20
    1476:	b3 e0       	ldi	r27, 0x03	; 3
    1478:	0f d0       	rcall	.+30     	; 0x1498 <__ultoa_invert+0x86>
    147a:	c9 f7       	brne	.-14     	; 0x146e <__ultoa_invert+0x5c>
    147c:	f6 cf       	rjmp	.-20     	; 0x146a <__ultoa_invert+0x58>
    147e:	46 2f       	mov	r20, r22
    1480:	4f 70       	andi	r20, 0x0F	; 15
    1482:	40 5d       	subi	r20, 0xD0	; 208
    1484:	4a 33       	cpi	r20, 0x3A	; 58
    1486:	18 f0       	brcs	.+6      	; 0x148e <__ultoa_invert+0x7c>
    1488:	49 5d       	subi	r20, 0xD9	; 217
    148a:	31 fd       	sbrc	r19, 1
    148c:	40 52       	subi	r20, 0x20	; 32
    148e:	41 93       	st	Z+, r20
    1490:	02 d0       	rcall	.+4      	; 0x1496 <__ultoa_invert+0x84>
    1492:	a9 f7       	brne	.-22     	; 0x147e <__ultoa_invert+0x6c>
    1494:	ea cf       	rjmp	.-44     	; 0x146a <__ultoa_invert+0x58>
    1496:	b4 e0       	ldi	r27, 0x04	; 4
    1498:	a6 95       	lsr	r26
    149a:	97 95       	ror	r25
    149c:	87 95       	ror	r24
    149e:	77 95       	ror	r23
    14a0:	67 95       	ror	r22
    14a2:	ba 95       	dec	r27
    14a4:	c9 f7       	brne	.-14     	; 0x1498 <__ultoa_invert+0x86>
    14a6:	00 97       	sbiw	r24, 0x00	; 0
    14a8:	61 05       	cpc	r22, r1
    14aa:	71 05       	cpc	r23, r1
    14ac:	08 95       	ret
    14ae:	9b 01       	movw	r18, r22
    14b0:	ac 01       	movw	r20, r24
    14b2:	0a 2e       	mov	r0, r26
    14b4:	06 94       	lsr	r0
    14b6:	57 95       	ror	r21
    14b8:	47 95       	ror	r20
    14ba:	37 95       	ror	r19
    14bc:	27 95       	ror	r18
    14be:	ba 95       	dec	r27
    14c0:	c9 f7       	brne	.-14     	; 0x14b4 <__ultoa_invert+0xa2>
    14c2:	62 0f       	add	r22, r18
    14c4:	73 1f       	adc	r23, r19
    14c6:	84 1f       	adc	r24, r20
    14c8:	95 1f       	adc	r25, r21
    14ca:	a0 1d       	adc	r26, r0
    14cc:	08 95       	ret

000014ce <__prologue_saves__>:
    14ce:	2f 92       	push	r2
    14d0:	3f 92       	push	r3
    14d2:	4f 92       	push	r4
    14d4:	5f 92       	push	r5
    14d6:	6f 92       	push	r6
    14d8:	7f 92       	push	r7
    14da:	8f 92       	push	r8
    14dc:	9f 92       	push	r9
    14de:	af 92       	push	r10
    14e0:	bf 92       	push	r11
    14e2:	cf 92       	push	r12
    14e4:	df 92       	push	r13
    14e6:	ef 92       	push	r14
    14e8:	ff 92       	push	r15
    14ea:	0f 93       	push	r16
    14ec:	1f 93       	push	r17
    14ee:	cf 93       	push	r28
    14f0:	df 93       	push	r29
    14f2:	cd b7       	in	r28, 0x3d	; 61
    14f4:	de b7       	in	r29, 0x3e	; 62
    14f6:	ca 1b       	sub	r28, r26
    14f8:	db 0b       	sbc	r29, r27
    14fa:	0f b6       	in	r0, 0x3f	; 63
    14fc:	f8 94       	cli
    14fe:	de bf       	out	0x3e, r29	; 62
    1500:	0f be       	out	0x3f, r0	; 63
    1502:	cd bf       	out	0x3d, r28	; 61
    1504:	09 94       	ijmp

00001506 <__epilogue_restores__>:
    1506:	2a 88       	ldd	r2, Y+18	; 0x12
    1508:	39 88       	ldd	r3, Y+17	; 0x11
    150a:	48 88       	ldd	r4, Y+16	; 0x10
    150c:	5f 84       	ldd	r5, Y+15	; 0x0f
    150e:	6e 84       	ldd	r6, Y+14	; 0x0e
    1510:	7d 84       	ldd	r7, Y+13	; 0x0d
    1512:	8c 84       	ldd	r8, Y+12	; 0x0c
    1514:	9b 84       	ldd	r9, Y+11	; 0x0b
    1516:	aa 84       	ldd	r10, Y+10	; 0x0a
    1518:	b9 84       	ldd	r11, Y+9	; 0x09
    151a:	c8 84       	ldd	r12, Y+8	; 0x08
    151c:	df 80       	ldd	r13, Y+7	; 0x07
    151e:	ee 80       	ldd	r14, Y+6	; 0x06
    1520:	fd 80       	ldd	r15, Y+5	; 0x05
    1522:	0c 81       	ldd	r16, Y+4	; 0x04
    1524:	1b 81       	ldd	r17, Y+3	; 0x03
    1526:	aa 81       	ldd	r26, Y+2	; 0x02
    1528:	b9 81       	ldd	r27, Y+1	; 0x01
    152a:	ce 0f       	add	r28, r30
    152c:	d1 1d       	adc	r29, r1
    152e:	0f b6       	in	r0, 0x3f	; 63
    1530:	f8 94       	cli
    1532:	de bf       	out	0x3e, r29	; 62
    1534:	0f be       	out	0x3f, r0	; 63
    1536:	cd bf       	out	0x3d, r28	; 61
    1538:	ed 01       	movw	r28, r26
    153a:	08 95       	ret

0000153c <_exit>:
    153c:	f8 94       	cli

0000153e <__stop_program>:
    153e:	ff cf       	rjmp	.-2      	; 0x153e <__stop_program>
